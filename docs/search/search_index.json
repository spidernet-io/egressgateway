{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>The gateway provides network egress capabilities for Kubernetes clusters.</p> <p></p> <p>Starting with 2021, we received some feedback as follows.</p> <p>There are two clusters A and B. Cluster A is VMWare-based and runs mainly Database workloads, and Cluster B is a Kubernetes cluster. Some applications in Cluster B need to access the database in Cluster A, and the network administrator wants the cluster Pods to be managed through an egress gateway.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Solve IPv4 IPv6 dual-stack connectivity.</li> <li>Solve the high availability of Egress Nodes.</li> <li>Allow filtering Pods Egress Policy (Destination CIDR).</li> <li>Allow filtering of egress Applications (Pods).</li> <li>Can be used in low kernel version.</li> <li>Support multiple egress gateways instance.</li> <li>Support namespaced egress IP.</li> <li>Supports automatic detection of cluster traffic for egress gateways policies.</li> <li>Support namespace default egress instances.</li> </ul>"},{"location":"#compatibility","title":"Compatibility","text":"<ul> <li>Calico</li> </ul>"},{"location":"#crds","title":"CRDs","text":"<ul> <li>EgressTunnel</li> <li>EgressGateway</li> <li>EgressPolicy</li> <li>EgressClusterPolicy</li> <li>EgressEndpointSlice</li> <li>EgressClusterEndpointSlice</li> <li>EgressClusterInfo</li> </ul> <p>You can follow the Get Started to set up your own playground!</p>"},{"location":"#develop","title":"Develop","text":"<p>Refer to develop.</p>"},{"location":"#license","title":"License","text":"<p>EgressGateway is licensed under the Apache License, Version 2.0. See LICENSE for the full license text.</p>"},{"location":"concepts/Architecture/","title":"Architecture","text":"<p>EgressGateway consists of two parts: the control plane and the data plane. The control plane is composed of four control loops, and the data plane is composed of three control loops. The control plane is deployed as a Deployment, supporting multiple replicas for high availability, and the data plane is deployed as a DaemonSet. The control loops are as follows in the diagram below:</p> <p></p>"},{"location":"develop/Contribute/","title":"How to contribute","text":"<p>First of all, thank you for your interest in contributing to our project! We appreciate all the help and support from the community. This document outlines the process for contributing to our Kubernetes operator project. Please read through the guidelines carefully before submitting any changes.</p>"},{"location":"develop/Contribute/#code-of-conduct","title":"Code of conduct","text":"<p>To ensure a positive and supportive environment for all contributors, please adhere to our Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"develop/Contribute/#getting-started","title":"Getting started","text":"<p>Fork the Repository: To contribute, start by forking the repository to your own GitHub account. This will create a copy of the project that you can modify as needed.</p> <p>Clone the Fork: After forking the repository, clone your fork to your local machine using Git. This will allow you to work on the project locally.</p> <pre><code>git clone https://github.com/your-username/your-project-name.git\n</code></pre> <p>Create a Branch: Before starting to work on your changes, create a new branch for each feature or bugfix. This helps to keep your changes separated and organized. Use a descriptive name for your branch.</p> <pre><code>git checkout -b your-new-branch-name\n</code></pre>"},{"location":"develop/Contribute/#making-changes","title":"Making changes","text":"<p>Update Your Fork: Before making any changes, make sure your fork is up to date with the upstream repository.</p> <pre><code>git remote add upstream https://github.com/original-owner/your-project-name.git\ngit fetch upstream\ngit merge upstream/main\n</code></pre> <p>Test Your Changes: After making changes, ensure that they do not break the project by running tests. Be sure to test your changes in a Kubernetes environment if possible.</p> <p>Commit Your Changes: When you're satisfied with your changes, commit them using a clear and concise commit message. This helps the maintainers understand the purpose of your changes.</p> <pre><code>git add .\ngit commit -m \"Your commit message\"\n</code></pre> <p>Push Your Changes: After committing your changes, push them to your fork on GitHub.</p> <pre><code>git push origin your-new-branch-name\n</code></pre>"},{"location":"develop/Contribute/#submitting-a-pull-request","title":"Submitting a pull request","text":"<p>Create a Pull Request: Once your changes are pushed, create a pull request from your fork to the upstream repository. Make sure the base branch is set to main and the head branch is your feature or bugfix branch.</p> <p>Describe Your Changes: In the pull request description, provide a clear and concise description of the changes you made. Include any relevant issue numbers and explain how your changes address the issue or add a new feature.</p> <p>Wait for a Review: After submitting your pull request, wait for a project maintainer to review your changes. They may request changes or provide feedback on your work. Be sure to address any feedback and update your pull request as needed.</p> <p>Merge: Once your changes have been reviewed and approved, a project maintainer will merge your pull request. Congratulations, you've successfully contributed to the project!</p>"},{"location":"develop/Develop/","title":"Develop","text":""},{"location":"develop/Develop/#quick-start","title":"Quick Start","text":"<ol> <li> <p>build local CI image </p> <pre><code>make build_local_image\n</code></pre> </li> <li> <p>setup cluster</p> <pre><code># setup the cluster\nmake e2e_init\n\n# for china developer, use china image registry, use HTTP_PROXY to pull chart \nmake e2e_init -e E2E_CHINA_IMAGE_REGISTRY=true -e HTTP_PROXY=http://10.0.0.1:7890\n\n# show the cluster\nexport KUBECONFIG=$(pwd)/test/runtime/kubeconfig_egressgateway.config\nkubectl get node\n</code></pre> </li> <li> <p>run the E2E test </p> <pre><code>make e2e_run\n</code></pre> </li> <li> <p>check proscope, browser visits http://nodeIP:4040</p> </li> </ol>"},{"location":"develop/Develop/#go-package-structure-design","title":"Go Package (Structure) Design","text":"<pre><code>.\n\u251c\u2500\u2500 api\n\u251c\u2500\u2500 charts\n\u251c\u2500\u2500 cmd\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 images\n\u251c\u2500\u2500 output\n\u251c\u2500\u2500 pkg\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 agent\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 coalescing\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 constant\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 controller\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 egressgateway\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ethtool\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ipset\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 iptables\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 k8s\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 layer2\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lock\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 logger\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 markallocator\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 profiling\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 schema\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 types\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 utils\n\u251c\u2500\u2500 test\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 doc\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 e2e\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 kindconfig\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 scripts\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yaml\n\u251c\u2500\u2500 tools\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 golang\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 images\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 scripts\n\u2514\u2500\u2500 vendor\n</code></pre>"},{"location":"develop/Release/","title":"Release Workflow","text":""},{"location":"develop/Release/#pre-steps","title":"Pre-steps","text":"<ul> <li>Update <code>version</code> and <code>appVersion</code> fields in <code>charts/*/Chart.yaml</code></li> <li>Update version in <code>/VERSION</code></li> <li>Set a version tag on the correct branch. The version should follow the pattern:<ul> <li>v0.1.0-rc0</li> <li>v0.1.0-rc1</li> <li>v0.1.0</li> <li>v0.1.1</li> <li>v0.1.2</li> <li>v0.2.0-rc0</li> <li>v0.2.0</li> </ul> </li> </ul>"},{"location":"develop/Release/#push-a-version-tag","title":"Push a Version Tag","text":"<p>When a tag vx.x.x is pushed, the following steps will automatically run:</p> <ol> <li>Verify that the tag name matches the <code>/VERSION</code></li> <li>Create a branch named <code>release-vx.x.x</code></li> <li>Build the images with the pushed tag and push them to the ghcr registry</li> <li>Generate the changelog based on historical PRs labeled as <code>release/*</code><ul> <li>Submit the changelog file to the <code>changelogs</code> directory of the <code>github_pages</code> branch, with PR labeled as <code>pr/release/robot_update_githubpage</code></li> <li>Changelogs are generated based on historical PR labels:<ul> <li>Label <code>release/feature</code> will be classified as \"Changed Features\"</li> <li>Label <code>release/bug</code> will be classified as \"Fixes\"</li> </ul> </li> </ul> </li> <li>Build the chart package with the pushed tag and submit a PR to the <code>github_pages</code> branch<ul> <li>Retrieve the chart with the command <code>helm repo add $REPO_NAME https://spidernet-io.github.io/$REPO_NAME</code></li> </ul> </li> <li>Submit <code>/docs</code> to the <code>/docs</code> directory of the <code>github_pages</code> branch</li> <li>Create a GitHub Release with the chart package and changelog attached</li> <li>Manually approve the chart PR labeled as <code>pr/release/robot_update_githubpage</code> and the changelog PR labeled as <code>pr/release/robot_update_githubpage</code></li> </ol>"},{"location":"develop/Roadmap/","title":"Roadmap","text":"Kind Feature Schedule Status Gateway support multiple instances of gateway class doing support for namespace doing support default gateway class doing all data stream could load-balance to all gateway node doing when a gateway node breakdown , all data stream could to to healthy gateway node doing could specify the node interface for tunnel, by hand, or auto select a reasonable one doing Tunnel protocol vxlan doing geneve Encryption ipsec wireGuard Destination CIDR could auto distinguish internal CIDR (calico, flannel etc, or by hand) and outside CIDR doing could specify the outside CIDR by hands doing Data protocol tcp doing udp doing websocket sctp multicast Policy support priority doing support cluster scope policy doing support namespace scope policy doing Support CNI calico doing flannel doing weave doing macvlan+spiderpool doing IP Stack ipv4-only doing ipv6-only doing dual stack doing Source IP support EIP for application doing support EIP for namespace doing use node ip doing Datapath iptables with low and high version doing ebpf Performance big cluster, with lots of gateway nodes big cluster, with lots of  nodes big cluster, with lots of  pods when gateway node down, the whole cluster could change to healthy gateway node within 2s after apply or modify lots of policy, it could quick take effect in a big cluster after apply or modify gateway node, it could quick take effect in a big cluster forward throughput of each gateway node CPU and memory usage under pressure HA all component pods could recovery quickly and serve after breakdown all pods could run for one week without failure Insight metrics log Doc design, usage, debug docs Architecture amd and arm"},{"location":"proposal/01-egress-gateway/EgressGateway/","title":"EgressGateway","text":""},{"location":"proposal/01-egress-gateway/EgressGateway/#crds","title":"CRDS","text":"<p>The egress gateway model abstracts three Custom Resource Definitions (CRDs): <code>EgressTunnel</code> , <code>EgressTunnel</code> and <code>EgressGatewayPolicy</code>. They are cluster scoped CRDs.</p>"},{"location":"proposal/01-egress-gateway/EgressGateway/#egressgateway_1","title":"EgressGateway","text":"<pre><code>apiVersion: egressgateway.spidernet.io/v1\nkind: EgressGateway\nmetadata:\nname: \"egressgateway\"\nspec:\nnodeSelector:\nmatchLabels:\negress: \"true\"\nstatus:\nforwardMethod: \"active-passive\"\nnodeList: - node1:\nstatus: \"ready\"\nactive: true\ninterfaces:\n- eth0:\nipv4: [\"10.6.0.10/16\"]\nipv6: [\"fd::10/64\"]\n</code></pre> <ul> <li>spec<ul> <li><code>nodeSelector</code> field matching against node labels.</li> </ul> </li> <li>status<ul> <li><code>forwardMethod</code> field sync form <code>ConfigMap</code> configuration.</li> <li><code>nodeList</code> field is the list of nodes matched by <code>nodeSelector</code><ul> <li><code>status</code> field represents the node status, which may be <code>Ready</code>, <code>NotReady</code> or <code>Unknown</code>.<ul> <li>Only nodes in the <code>Ready</code> state can participate in the election of egress gateway nodes.</li> </ul> </li> <li><code>avtive</code> field represents that the non-egress gateway is reconcile or reconcile completes accessing the destination CIDR(e.g. Cluster A CIDR in picture 1) with this node.</li> <li><code>interfaces</code> is physical network interface list. It is updated by the Agent.<ul> <li><code>ipv4</code> address list.</li> <li><code>ipv6</code> address list.</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"proposal/01-egress-gateway/EgressGateway/#egresstunnel","title":"EgressTunnel","text":"<pre><code>apiVersion: egressgateway.spidernet.io/v1\nkind: EgressTunnel\nmetadata:\nname: \"node1\"\nspec:\nstatus:\nphase: \"Ready\"\nvxlanIPv4IP: \"172.31.0.10/16\"\nvxlanIPv6IP: \"fe80::/64\"\ntunnelMac: \"xx:xx:xx:xx:xx\"\nphysicalInterface: \"eth1\"\nphysicalInterfaceIPv4: \"\"\nphysicalInterfaceIPv6: \"\"\n</code></pre> <p>The <code>EgressTunnel</code> CRD stores vxlan tunnel information, which is generated by the Controller from the Node CR.</p> <ul> <li>status<ul> <li><code>phase</code> indicates the status of EgressTunnel. If 'Ready' has been assigned and the tunnel has been built, 'Pending' is waiting for IP assignment, 'Init' succeeds in assigning the tunnel IP address, and 'Failed' fails to assign the tunnel IP address.</li> <li><code>vxlanIPv4IP</code> field represents the IPv4 address of VXLAN tunnel.</li> <li><code>vxlanIPv6IP</code> field represents the IPv6 address of VXLAN tunnel.</li> <li><code>tunnelMac</code> field represents the MAC address of IPv4 VXLAN tunnel Interface.</li> <li><code>physicalInterface</code> is parent name of VXLAN tunnel interface.</li> <li><code>physicalInterfaceIPv4</code> is parent IPv4 Address of VXLAN tunnel interface.</li> <li><code>physicalInterfaceIPv6</code> is parent IPv6 Address of VXLAN tunnel interface.</li> </ul> </li> </ul>"},{"location":"proposal/01-egress-gateway/EgressGateway/#egressgatewaypolicy","title":"EgressGatewayPolicy","text":"<pre><code>apiVersion: egressgateway.spidernet.io/v1\nkind: EgressGatewayPolicy\nmetadata:\nname: \"policy\"\nspec:\nappliedTo:\npodSelector:\nmatchLabels:\napp: \"shopping\"\nipv6PodSubnet: \"10.0.0.0/16\"\nipv4PodSubnet: \"10.0.0.0/16\"\ndestCIDR: - \"10.6.1.0/24\"\n</code></pre> <ul> <li>spec<ul> <li><code>podSelector</code> filed selects the grouping of pods to which the policy applies.</li> <li><code>podSubnet</code> field specifies the pod CIDR affected by the egress policy. It conflicts with the <code>podSelector</code> field.</li> <li><code>destCIDR</code> destination CIDR block list.</li> </ul> </li> </ul>"},{"location":"proposal/01-egress-gateway/EgressGateway/#datapath","title":"Datapath","text":"<p>A combination of vxlan tunnel, ipset, iptables, route is required to complete policy control.</p>"},{"location":"proposal/01-egress-gateway/EgressGateway/#non-egress-node","title":"Non Egress Node","text":""},{"location":"proposal/01-egress-gateway/EgressGateway/#vxlan","title":"VXLAN","text":"<p>Build a VXLAN tunnel on cluster nodes. There are 2 tunnel NICs named <code>egress-vxlan-v4</code> and <code>egress-vxlan-v6</code>.</p>"},{"location":"proposal/01-egress-gateway/EgressGateway/#ipset","title":"IPSet","text":"<pre><code>sudo ipset create egress-dst-policy-name\nsudo ipset add egress-dest-policy-name 172.16.1.1/32\n</code></pre>"},{"location":"proposal/01-egress-gateway/EgressGateway/#iptables","title":"IPTables","text":"<pre><code>iptables -t mangle -F EGRESSGATEWAY-MARK-REQUEST-POLICY-NAME\niptables -t mangle -X EGRESSGATEWAY-MARK-REQUEST-POLICY-NAME\niptables -t mangle -N EGRESSGATEWAY-MARK-REQUEST-POLICY-NAME\n\niptables -A EGRESSGATEWAY-MARK-REQUEST-POLICY-NAME \\\n-t mangle \\\n-m conntrack --ctdir ORIGINAL \\\n-m set --match-set egress-dst-policy-name dst \\\n-m set --match-set egress-src-policy-name src \\\n-j MARK --set-mark 0x11000000 \\\n-m comment --comment \"rule uuid: mark request packet\"\n</code></pre>"},{"location":"proposal/01-egress-gateway/EgressGateway/#route","title":"Route","text":"<p>Normal.</p> <pre><code>ip rule add fwmark 0x11000000 table 100\nip route f table 100\nip route add default via 20.0.0.85 dev egress-vxlan-v4 onlink table 100\n</code></pre> <p>Equal-cost multi-path routing.</p> <pre><code>sysctl -w net.ipv4.fib_multipath_hash_policy=1\n</code></pre> <pre><code>ip rule add fwmark 0x11000000 table 100\nip route f table 100\nip route add table 100 default \\\nnexthop via 20.0.0.85 dev egress-vxlan onlink \\\nnexthop via 20.0.0.90 dev egress-vxlan onlink\n</code></pre>"},{"location":"proposal/01-egress-gateway/EgressGateway/#egress-node","title":"Egress Node","text":"<pre><code>iptables -t mangle -I FORWARD 1 -m mark --mark 0x11000000 -j MARK --set-mark 0x12000000 -m comment --comment \"egress gateway: change mark\"\niptables -t filter -I FORWARD 1 -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: keep mark\"\niptables -t filter -I OUTPUT 1 -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: keep mark\"\niptables -t mangle -I POSTROUTING 1 -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: keep mark\"\niptables -t nat -I POSTROUTING 1 -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: no snat\"\n</code></pre>"},{"location":"proposal/01-egress-gateway/EgressGateway/#implementation","title":"Implementation","text":""},{"location":"proposal/01-egress-gateway/EgressGateway/#controller","title":"Controller","text":"<p>Controller consists of Webhook Validator and Reconcile Flow.</p> <p></p> <p>Controller has 2 control processes, the first Watch cluster nodes, generate tunnel IP address and MAC address for Node, then <code>Create</code> or <code>Update</code> EgressTunnel CR Status. The second control flow watch <code>EgressTunnel</code> and <code>Egressgateway</code>, sync match node list from <code>labelSelector</code>, election egress gateway node.</p>"},{"location":"proposal/01-egress-gateway/EgressGateway/#agent","title":"Agent","text":"<p>Agent has two control processes, the first Watch <code>EgressTunnel</code> CR, which manages node tunnel, and node tunnel is a pluggable interface that can be replaced by Geneve. The second control process manages datapath policy, which watches <code>EgressTunnel</code>, <code>EgressGateway</code> and <code>Egresspolicy</code>, and sends them to the host through the police interface. It is currently implemented by a combination of ipset, iptables, and route, and it can be replaced by eBPF.</p>"},{"location":"proposal/02-egress-node/EgressTunnel-zh_CN/","title":"EgressTunnel zh CN","text":""},{"location":"proposal/02-egress-node/EgressTunnel-zh_CN/#egresstunnel-crd","title":"EgressTunnel CRD","text":"<pre><code>apiVersion: egressgateway.spidernet.io/v1\nkind: EgressTunnel\nmetadata:\nname: \"node1\"\nspec:\nstatus:\nphase: \"Ready\"\nvxlanIPv4IP: \"172.31.0.10/16\"\nvxlanIPv6IP: \"fe80::/64\"\ntunnelMac: \"xx:xx:xx:xx:xx\"\nphysicalInterface: \"eth1\"\nphysicalInterfaceIPv4: \"\"\nphysicalInterfaceIPv6: \"\"\n</code></pre> <p>\u7528\u4ee5\u5b58\u50a8\u5404\u8282\u70b9\u7684\u96a7\u9053\u7684\u4fe1\u606f\uff0c\u901a\u8fc7\u76d1\u63a7\u8282\u70b9\u6765\u751f\u6210</p> <p>\u5b57\u6bb5\u8bf4\u660e * status     * <code>phase</code> \u8868\u793a EgressTunnel  \u7684\u72b6\u6001\uff0c\u2019Ready\u2019 \u96a7\u9053IP\u5df2\u5206\u914d\uff0c\u4e14\u96a7\u9053\u5df2\u5efa\u6210\uff0c\u2019Pending\u2019 \u7b49\u5f85\u5206\u914dIP\uff0c\u2019Init\u2019 \u5206\u914d\u96a7\u9053 IP \u6210\u529f\uff0c\u2019Failed\u2019 \u96a7\u9053 IP \u5206\u914d\u5931\u8d25     * <code>vxlanIPv4IP</code> \u96a7\u9053 IPV4 \u5730\u5740     * <code>vxlanIPv6IP</code> \u96a7\u9053 IPV6 \u5730\u5740     * <code>tunnelMac</code> \u96a7\u9053 Mac \u5730\u5740     * <code>physicalInterface</code> \u96a7\u9053\u7236\u7f51\u5361     * <code>physicalInterfaceIPv4</code> \u7236\u7f51\u5361 IPV4 \u5730\u5740     * <code>physicalInterfaceIPv6</code> \u7236\u7f51\u5361 IPV6 \u5730\u5740</p>"},{"location":"proposal/02-egress-node/EgressTunnel-zh_CN/#controller","title":"controller \u5b9e\u73b0","text":""},{"location":"proposal/02-egress-node/EgressTunnel-zh_CN/#_1","title":"\u521d\u59cb\u5316","text":"<ol> <li>\u4ece CM\u4e2d\u83b7\u53d6 IPv4\u3001IPv6 \u53ca\u5bf9\u5e94\u7684 CIDR</li> <li>\u4f1a\u68c0\u67e5node \u662f\u5426\u6709\u5bf9\u5e94\u7684 EgressTunnel\uff0c\u6ca1\u6709\u7684\u8bdd\u5c31\u521b\u5efa\u5bf9\u5e94\u7684EgressTunnel\uff0c\u4e14\u72b6\u6001\u8bbe\u7f6e\u4e3a \u201cpending\u201d\u3002\u6709\u96a7\u9053 IP \u5219\u5c06 IP \u4e0e\u8282\u70b9\u7ed1\u5b9a\uff0c\u7ed1\u5b9a\u524d\u4f1a\u68c0\u67e5 IP \u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\u5219\u5c06\u72b6\u6001\u8bbe\u7f6e\u4e3a \u201cPending\u201d</li> </ol>"},{"location":"proposal/02-egress-node/EgressTunnel-zh_CN/#_2","title":"\u8282\u70b9\u4e8b\u4ef6\uff1a","text":"<ul> <li>\u5220\u9664\u4e8b\u4ef6\uff1a\u5220\u9664\u5bf9\u5e94\u7684 EgressTunnel</li> <li>\u5176\u4ed6\u4e8b\u4ef6\uff1a\u5982\u679c\u6ca1\u6709\u5bf9\u5e94\u7684 EgressTunnel\uff0c\u5219\u521b\u5efa EgressTunnel</li> <li> <p>\u5176\u4ed6\u4e8b\u4ef6\uff1a\u5982\u679c\u6709\u5bf9\u5e94\u7684 EgressTunnel\uff0c\u5219\u5bf9EgressTunnel\u8fdb\u884c\u6821\u9a8c\u3002\u6821\u9a8c\u903b\u8f91\u5982\u4e0b\uff1a</p> </li> <li> <ul> <li>\u65e0\u96a7\u9053IP\uff0c\u5c06\u72b6\u6001\u7f6e\u4e3a \u201cPending\u201d         \u5982\u679c\u6709\u96a7\u9053IP\uff0c\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\uff0c\u5c31\u5c06\u72b6\u6001\u7f6e\u4e3a \u201cPending\u201d         \u5982\u679c\u5408\u6cd5\uff0c\u6821\u9a8c IP \u662f\u5426\u5df2\u5206\u914d\uff0c\u5982\u679c\u5df2\u5206\u914d\uff0c\u4e14\u5206\u914d\u7ed9\u5176\u4ed6\u8282\u70b9\u4e86\uff0c\u5219\u5c06\u72b6\u6001\u7f6e\u4e3a \u201cPending\u201d         \u672a\u5206\u914d\u7ed9\u5176\u4ed6\u8282\u70b9\uff0c\u5c31\u5206\u914d\u7ed9\u672c \u201cEgressTunnel\u201d\uff0c\u5c06\u72b6\u6001\u8bbe\u7f6e\u4e3a \u201cInit\u201d         \u5982\u679c\u5df2\u5206\u914d\uff0c\u4e14\u5c31\u662f\u5206\u914d\u7ed9\u672c\u8282\u70b9\u7684\uff0c\u5219\u5c06\u72b6\u6001\u8bbe\u7f6e\u4e3a \u201cInit\u201d</li> </ul> </li> </ul>"},{"location":"proposal/02-egress-node/EgressTunnel-zh_CN/#egresstunnel","title":"EgressTunnel\u4e8b\u4ef6\uff1a","text":"<ul> <li>\u5220\u9664\u4e8b\u4ef6\uff1a\u5148\u91ca\u653eIP\u3002\u5982\u679c EgressTunnel \u5bf9\u5e94\u7684\u8282\u70b9\u5b58\u5728\uff0c\u5219\u91ca\u653eIP\uff0c\u91cd\u65b0\u521b\u5efa EgressTunnel\u3002</li> <li>\u5176\u4ed6\u4e8b\u4ef6\uff1a\u5982\u679c EgressTunnel \u72b6\u6001\u4e3a \u201cInit\u201d \u6216 \u8005\u201cReady\u201d \u65f6\uff0c\u4e0d\u505a\u4efb\u4f55\u5904\u7406\u3002\u5982\u679c\u4e0d\u662f\uff0c\u5219\u5206\u914d IP\uff0c\u5206\u914d\u6210\u529f\u5c06\u72b6\u6001\u8bbe\u7f6e\u4e3a \u201cInit\u201d\uff0c\u5206\u914d\u5931\u8d25\u5c06\u72b6\u6001\u8bbe\u7f6e\u4e3a \u201cFailed\u201d\u3002\u8fd9\u91cc\u662f\u5168\u5c40\u552f\u4e00\u4f1a\u5206\u914d\u96a7\u9053 IP \u7684\u5730\u65b9</li> </ul>"},{"location":"proposal/02-egress-node/EgressTunnel-zh_CN/#ip","title":"\u5206\u914d\u96a7\u9053 IP","text":"<ul> <li>controller \u542f\u52a8\u65f6\uff0c\u4ece config \u4e2d\u62ff\u5230\u96a7\u9053 IP CRID\uff0c\u5e76\u5728\u5185\u5b58\u4e2d\u7ef4\u62a4\u4e00\u4e2a map \u8bb0\u5f55 IP \u662f\u5426\u88ab\u5206\u914d</li> <li>\u96a7\u9053 IP \u91c7\u7528\u4e2d\u5fc3\u5f0f\uff0c\u6240\u4ee5\u4f7f\u7528\u4e32\u884c\u65b9\u5f0f\u5206\u914dIP\uff0c\u5728\u672a\u5206\u914d\u7684 IP \u4e2d\u968f\u673a\u5206\u914d</li> <li>\u5206\u914d\u524d\uff0c\u68c0\u6d4b\u96a7\u9053 IP \u51b2\u7a81\uff0c\u4e0d\u51b2\u7a81\u518d\u5206\u914d\uff08\u5b9e\u73b0\u65b9\u5f0f\u5f85\u5b9a\uff09</li> </ul>"},{"location":"proposal/02-egress-node/EgressTunnel-zh_CN/#_3","title":"\u5176\u4ed6","text":"<ul> <li>controller \u542f\u52a8\u65f6\uff0c\u5bf9\u6240\u7684 CRD \u7684 IP \u8fdb\u884c\u6821\u9a8c\uff0c\u4e14\u6700\u7ec8\u72b6\u6001\u8bbe\u7f6e\u4e3a \u201cInit\u201d \u6216 \u201cFailed\u201d \uff08\u6b64\u9879\u5f85\u5546\u69b7\uff09</li> <li>agent \u76d1\u6d4b\u5230\u5bf9\u5e94\u7684 CRD \u4e2d phase \u5b57\u6bb5\u4e3a \u201cInit\u201d \u65f6\uff0c\u521b\u5efa\u76f8\u5e94\u7684\u96a7\u9053\u53ca\u8def\u7531\uff0c\u521b\u5efa\u6210\u529f\u66f4\u65b0\u4e3a \u201cReady\u201d \u72b6\u6001\u3002\u5931\u8d25\u5219\u4e0d\u66f4\u65b0</li> <li>Mac\u5730\u5740\u683c\u5f0f\uff1a\u6839\u636e\u8282\u70b9\u540d\u79f0\uff0c\u7ecf\u8fc7 SHA1 \u7b97\u6cd5\u751f\u6210\uff0c\u6240\u4ee5\u6bcf\u4e2a\u8282\u70b9\u7684 Mac \u5730\u5740\u662f\u56fa\u5b9a\u7684</li> </ul>"},{"location":"proposal/03-egress-ip/README_zh-CN/","title":"Egress IP","text":""},{"location":"proposal/03-egress-ip/README_zh-CN/#_1","title":"\u6982\u8981","text":"<p>\u66f4\u65b0 EgressGateway CRD \u5b57\u6bb5\u4ee5\u652f\u6301\u8bbe\u7f6e EIP \u8303\u56f4\uff0c\u8c03\u6574 EgressGatewayEgressPolicy \u4e3a\u79df\u6237\u7ea7\uff0c\u53ef\u4ee5\u9009\u62e9\u5f15\u7528\u7684 EgressGateway\uff0cEgressGateway CRD \u589e\u52a0\u5b57\u6bb5\u9650\u5236\u88ab\u5f15\u7528\u7684\u79df\u6237\u3002\u4ee5\u4e0a\u8c03\u6574\u53ef\u4ee5\u5141\u8bb8\u4e0d\u540c\u7684 EgressGatewayPolicy \u5206\u914d\u5230\u4e0d\u540c\u7684 EIP\uff0c\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u9700\u6c42\u7075\u6d3b\u89c4\u5212\u670d\u52a1\u7075\u6d3b\u89c4\u5212\u96c6\u7fa4\u51fa\u53e3\u7f51\u7edc\uff0c\u79df\u6237\u7ea7\u7684\u8d44\u6e90\u53ef\u4ee5\u8ba9\u4e0d\u540c\u7684\u89d2\u8272\u8fdb\u884c\u51fa\u53e3\u7b56\u7565\u7ba1\u7406\u3002\u589e\u52a0 EgressEndpointSlice CRD \u805a\u5408\u96c6\u7fa4\u7b56\u7565\u5339\u914d\u4e2d\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u63d0\u5347 EgressGateway \u7684\u6269\u5c55\u6027\u4e0e\u6027\u80fd\u3002</p>"},{"location":"proposal/03-egress-ip/README_zh-CN/#_2","title":"\u52a8\u673a","text":"<p>\u5f53\u524d\u5df2\u7ecf\u53d1\u5e03 EgressGateway v0.1.0 \u652f\u6301\u4f7f\u7528 Egress Gateway \u7684\u8282\u70b9 IP \u4f5c\u4e3a\u51fa\u53e3 IP\uff0c\u5b83\u6ee1\u8db3\u4e86\u5c06\u9700\u8981\u51fa\u96c6\u7fa4\u7684\u670d\u52a1\u7684\u6d41\u91cf\u805a\u5408\u80fd\u529b\u3002\u4e00\u4e2a\u96c6\u7fa4\u4e2d\u901a\u5e38\u5b58\u5728\u6570\u5341\u7ec4\u751a\u81f3\u6570\u767e\u7ec4\u4e0d\u901a\u7684\u670d\u52a1\uff0c\u5176\u4e2d\u591a\u7ec4\u5e94\u7528\u9700\u8981\u8bbf\u95ee\u4e0d\u540c\u5916\u90e8\u7f51\u7edc\uff0c\u5355\u4e2a EIP \u5728\u7279\u5b9a\u7684\u9650\u5236\u6216\u89c4\u5219\u4e0b\u663e\u5f97\u6349\u895f\u89c1\u8098\uff0c\u6bd4\u5982\u4e0d\u540c EIP \u7684\u5177\u6709\u4e0d\u901a\u7684\u9632\u706b\u5899\u7b56\u7565\uff0c\u4e0d\u540cEIP \u5177\u6709\u4e0d\u540c\u7684\u8bbf\u95ee\u5e26\u5bbd\u3002\u901a\u8fc7 EgressGatewayPolicy \u4e3a\u4e0d\u540c\u7684\u5e94\u7528\u6216\u670d\u52a1\u5206\u914d\u4e0d\u540c\u7684 EIP \u4e5f\u53ef\u4ee5\uff0c\u53ef\u4ee5\u7ec6\u7c92\u5ea6\u7ba1\u7406\uff0c\u80fd\u907f\u514d\u6f5c\u5728\u7684\u5b89\u5168\u95ee\u9898\u3002</p>"},{"location":"proposal/03-egress-ip/README_zh-CN/#_3","title":"\u76ee\u6807","text":"<ul> <li>\u652f\u6301\u8bbe\u7f6e Egress IP \u8303\u56f4</li> <li>\u652f\u6301\u8bbe\u7f6e\u79df\u6237\u7ea7 EgressGatewayPolicy</li> <li>\u63d0\u5347 EgressGateway \u7684\u6027\u80fd\u548c\u53ef\u6269\u5c55\u6027</li> <li>\u66f4\u6539\u6d89\u53ca\u7684\u914d\u7f6e\u53c2\u6570\u66f4\u65b0</li> </ul>"},{"location":"proposal/03-egress-ip/README_zh-CN/#_4","title":"\u975e\u76ee\u6807","text":"<ul> <li>\u63d0\u5347\u6570\u636e\u9762\u8f6c\u53d1\u6027\u80fd</li> <li>\u66f4\u65b0\u9879\u76ee\u6587\u6863\u7ed3\u6784</li> </ul>"},{"location":"proposal/03-egress-ip/README_zh-CN/#_5","title":"\u8bbe\u8ba1","text":""},{"location":"proposal/03-egress-ip/README_zh-CN/#crd","title":"CRD","text":""},{"location":"proposal/03-egress-ip/README_zh-CN/#egresstunnel","title":"EgressTunnel","text":"<p>\u7528\u4e8e\u8bb0\u5f55\u8de8\u8282\u70b9\u901a\u4fe1\u7684\u96a7\u9053\u7f51\u5361\u4fe1\u606f\u3002\u96c6\u7fa4\u7ea7\u8d44\u6e90\uff0c\u4e0e Kubernetes Node \u8d44\u6e90\u540d\u79f0\u4e00\u4e00\u5bf9\u5e94\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressTunnel\nmetadata:\nname: \"node1\"\nstatus:\ntunnel:\nipv4: \"192.200.222.157\"  # 1\nipv6: \"fd01::f2\"         # 2        \nmac: \"66:50:85:cb:b2:bf\" # 3\nparent:\nname: \"ens160\"        # 4\nipv4: \"10.6.1.21/16\"  # 5\nipv6: \"fd00::21/112\"  # 6\nphase: \"Ready\"              # 7\nmark: \"0x26000000\"          # 8\n</code></pre> <ol> <li>\u96a7\u9053 IPv4 \u5730\u5740</li> <li>\u96a7\u9053 IPv6 \u5730\u5740</li> <li>\u96a7\u9053 MAC \u5730\u5740</li> <li>\u96a7\u9053\u7236\u7f51\u5361</li> <li>\u96a7\u9053\u7236\u7f51\u5361 IPv4 \u5730\u5740 </li> <li>\u96a7\u9053\u7236\u7f51\u5361 IPv6 \u5730\u5740 </li> <li>\u5f53\u524d\u96a7\u9053\u5c31\u7eea\u9636\u6bb5</li> <li>mark \u5730\u5740\uff0c\u6b64\u4e3a\u65b0\u589e\u6b64\u6bb5\uff0c\u521b\u5efa\u65f6\u751f\u6210\u3002\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\uff0c\u5168\u5c40\u552f\u4e00\u7684\u6807\u7b7e\u3002\u6807\u7b7e\u7531\u524d\u7f00 + \u552f\u4e00\u6807\u8bc6\u7b26\u751f\u6210\u3002\u6807\u7b7e\u683c\u5f0f\u5982\u4e0b <code>NODE_MARK = 0x26 + value + 0000</code>\uff0c<code>value</code> \u4e3a 16 \u4f4d\uff0c\u652f\u6301\u7684\u8282\u70b9\u603b\u6570\u4e3a <code>2^16</code>\u3002\u5728\u4e0b\u53d1 policy \u89c4\u5219\u65f6\u6240\u6253\u7684\u6807\u7b7e\uff0c\u53d6\u51b3\u4e8e\u8be5\u89c4\u5219\u7684 EIP \u6240\u751f\u6548\u7684\u8282\u70b9\u3002</li> </ol>"},{"location":"proposal/03-egress-ip/README_zh-CN/#egressgateway","title":"EgressGateway","text":"<p>\u7528\u4e8e\u9009\u62e9\u4e00\u7ec4\u8282\u70b9\u4f5c\u4e3a Egress \u7f51\u5173\u8282\u70b9\uff0cEgress IP \u53ef\u4ee5\u5728\u8be5\u8303\u56f4\u6d6e\u52a8\u3002\u96c6\u7fa4\u7ea7\u8d44\u6e90\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressGateway\nmetadata:\nname: \"eg1\"\nspec:                            # 1\nranges:\npolicy: \"Random\"              # 2\nipv4:\n- \"\"\nipv6:\n- \"\"\nnodeSelector:                  # 3\nselector: matchLabels:\negress: \"true\"\npolicy: \"AverageSelecton\"    # 4\nstatus:\nnodeList:                 # 5\n- name: node1             # 6\neips:                   - ipv4: \"\"              # 7\nipv6: \"\"\npolicies:             # 8\n- \"\"\n</code></pre> <ol> <li>\u8bbe\u7f6e Egress IP \u7684\u8303\u56f4\uff1b</li> <li>\u652f\u6301\u8bbe\u7f6e\u5355\u4e2a IP <code>10.6.0.1</code> \uff0c\u548c\u6bb5 <code>10.6.0.1-10.6.0.10</code> \uff0c CIDR <code>10.6.0.1/26</code>  \u7684\u65b9\u5f0f 3 \u79cd\u65b9\u5f0f\uff1b</li> <li>\u5982\u679c\u5f00\u542f\u53cc\u6808\u8981\u6c42\uff0cIPv4 \u7684\u6570\u91cf\u548c IPv6 \u7684\u6570\u91cf\u65f6\u4e00\u81f4\u7684\u3002\u7531\u4e8e\u6b64\u539f\u56e0\uff0c\u4f1a\u5bfc\u81f4\u4e0a\u9762 CIDR \u53ef\u80fd\u5e76\u4e0d\u5b9e\u7528\uff0c\u56e0\u6b64\u4f18\u5148\u7ea7\u4f18\u5148\u5b9e\u73b0\u524d 2 \u79cd\uff1b</li> <li>EIP \u7684\u5206\u914d\u7b56\u7565\uff0c\u6682\u65f6\u53ea\u652f\u6301 <code>Random</code> \u968f\u673a\u5206\u914d</li> <li>\u8bbe\u7f6e EgressGateway IP \u53ef\u6d6e\u52a8\u7684\u8282\u70b9\u8303\u56f4\u53ca\u7b56\u7565\uff1b</li> <li>policy \u9009\u7f51\u5173\u8282\u70b9\u7684\u7b56\u7565\uff0c\u6682\u65f6\u53ea\u652f\u6301 <code>AverageSelecton</code> \u5e73\u5747\u5206\u914d</li> <li>Egress Gateway Controller \u7528\u4e8e\u8bb0\u5f55\u663e\u793a nodeSelector \u5339\u914d\u4e2d\u7684\u8282\u70b9\uff0c\u5bf9\u4e8e Node \u66f4\u65b0 Label \u6216 nodeSelector \u53d8\u52a8\u90fd\u4f1a\u5f15\u8d77\u6b64\u5b57\u6bb5\u53d8\u52a8\uff0cAgent \u662f\u6b64\u5b57\u6bb5\u7684\u6d88\u8d39\u8005\uff0c\u4f1a\u5c06\u5c5e\u4e8e\u81ea\u5df1\u8282\u70b9\u7684 IP \u8bbe\u7f6e\u5230\u9ed8\u8ba4\u540d\u4e3a <code>egress.eip</code> \u7f51\u5361\uff1b</li> <li>\u88ab\u5f15\u7528\u8be5 EgressGateway \u7684 EgressGatewayPolicy \u9009\u4e2d\uff0c\u4f5c\u4e3a\u7f51\u5173\u7684\u8282\u70b9\uff1b</li> <li>\u751f\u6548\u7684 EIP\uff0c\u5982\u679c EgressGatewayPolicy \u4e2d useNodeIP \u4e3a <code>true</code> \u65f6\uff0c\u5219\u8be5\u5b57\u6bb5\u4e3a\u7a7a;</li> <li>Agent \u901a\u8fc7\u8be5\u5b57\u6bb5\u5224\u65ad\u54ea\u4e9b\u8282\u70b9\u662f\u54ea\u4e9b EgressGatewayPolicy \u7684\u7f51\u5173\u8282\u70b9\u53ca\u975e\u7f51\u5173\u8282\u70b9\uff1b</li> </ol>"},{"location":"proposal/03-egress-ip/README_zh-CN/#egressgatewaypolicy","title":"EgressGatewayPolicy","text":"<p>\u7528\u4e8e\u6307\u5b9a\u54ea\u4e9b Pod \u8d70 Egress \u7b56\u7565\uff0c\u4ee5\u53ca Egress \u6240\u4f7f\u7528\u7684 IP \u5730\u5740\u3002\u79df\u6237\u7ea7\u8d44\u6e90\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressGatewayPolicy\nmetadata:\nnamespace: \"default\"\nname: \"policy-test\"\nspec:\negressGatewayName: \"eg1\"  # 1\negressIP:                 # 2\nipv4: \"\"                            ipv6: \"\"\nuseNodeIP: false        # 3\nappliedTo:                # 4\npodSelector:            # 4-a \nmatchLabels:    app: \"shopping\"\npodSubnet:              # 4-b\n- \"172.29.16.0/24\"\n- 'fd00:1/126'\ndestSubnet:               # 5\n- \"10.6.1.92/32\"\n- \"fd00::92/128\"\n</code></pre> <ol> <li>\u9009\u62e9\u7b56\u7565\u5f15\u7528\u7684 EgressGateway\uff1b</li> <li>Egress IP \u51c6\u5165\u7b56\u7565\uff1b</li> <li>\u82e5\u5728\u521b\u5efa\u65f6\u5b9a\u4e49\u4e86 <code>ipv4</code> \u6216 <code>ipv6</code> \u5730\u5740\uff0c\u5219\u4ece EgressGateway \u7684 <code>.ranges</code> \u4e2d\u5206\u914d\u4e00\u4e2a IP \u5730\u5740\uff0c\u82e5\u7528\u6237\u5728 policy1 \u4e2d\uff0c\u7533\u8bf7\u4f7f\u7528\u4e86 IP \u5730\u5740 <code>10.6.1.21</code> \u548c <code>fd00:1</code> \uff0c\u7136\u540e\u521b\u5efa policy2 \u4e2d\uff0c\u7533\u8bf7\u4f7f\u7528\u4e86 IP \u5730\u5740 <code>10.6.1.21</code> \u548c <code>fd00:2</code> \uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u6b64\u65f6 policy2 \u4f1a\u5206\u914d\u5931\u8d25\uff1b</li> <li>\u82e5\u672a\u5b9a\u4e49 <code>ipv4</code> \u6216 <code>ipv6</code> \u5730\u5740\uff0c\u4e14 <code>useNodeIP</code> \u4e3a true \u65f6\uff0c\u5219\u4f7f\u7528\u6240\u5f15\u7528 EgressGateway \u7684\u5339\u914d\u4e2d\u7684 Node \u7684 IP \u4f5c\u4e3a Egress \u5730\u5740\u3002</li> <li>\u82e5\u672a\u5728\u521b\u5efa\u65f6\u5b9a\u4e49 <code>ipv4</code> \u6216 <code>ipv6</code> \u5730\u5740\uff0c\u4e14 <code>useNodeIP</code> \u4e3a <code>false</code> \u65f6\u3002<ul> <li>\u5219\u81ea\u52a8\u4ece EgressGateway \u7684 <code>.ranges</code> \u4e2d\u5206\u914d\u4e00\u4e2a IP \u5730\u5740\uff08\u5f00\u542f IPv6 \u65f6\uff0c\u8bf7\u6c42\u5206\u914d\u4e00\u4e2a IPv4 \u548c \u4e00\u4e2a IPv6 \u5730\u5740\uff09\uff1b</li> </ul> </li> <li>\u82e5 <code>egressGatewayName</code> \u672a\u5b9a\u4e49\uff1b<ul> <li>\u7ee7\u7eed\u5219\u67e5\u770b\u662f\u5f53\u524d Namespace \u7684 label \u952e <code>egressgateway.spidernet.io/default</code> \u662f\u5426\u8bbe\u7f6e\u9ed8\u8ba4\u7684 EgressGateway\uff0c\u5982\u679c\u6709\u4e14\u5141\u8bb8\u6b64\u79df\u6237\u4f7f\u7528\uff0c\u5219\u4ece\u6b64\u5206\u914d EgressIP\uff1b</li> <li>\u7ee7\u7eed\u67e5\u770b\u662f\u5426\u6709\u540d\u79f0\u4e3a <code>default</code> \u5168\u5c40\u9ed8\u8ba4 EgressGateway\uff0c\u5982\u679c\u6709\u4e14\u5141\u8bb8\u6b64\u79df\u6237\u4f7f\u7528\uff0c\u5219\u4ece\u6b64\u5206\u914d EgressIP\u3002</li> </ul> </li> <li>\u652f\u6301\u4f7f\u7528\u8282\u70b9 IP \u4f5c\u4e3a Egress IP\uff08\u53ea\u5141\u8bb8\u9009\u62e9\u4e00\u79cd\uff09\uff1b</li> <li>\u9009\u62e9\u9700\u8981\u5e94\u7528 Egress Gateway Policy \u7684 Pod\uff1b    a. \u4ee5 Label \u7684\u65b9\u5f0f\u8fdb\u884c\u9009\u62e9    b. \u76f4\u63a5\u6307\u5b9a Pod \u7684\u7f51\u6bb5 \uff08a \u548c b \u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\uff09</li> <li>\u6307\u5b9a\u8bbf\u95ee Egress \u7684\u76ee\u6807\u5730\u5740\uff0c\u82e5\u672a\u6307\u5b9a\u76ee\u6807\u5730\u5740\uff0c\u5219\u751f\u6548\u7684\u7b56\u7565\u4f4d\u76ee\u6807\u5730\u5740\u975e\u96c6\u7fa4\u5185 CIDR \u65f6\uff0c\u5168\u90e8\u8f6c\u53d1\u5230 Egress \u8282\u70b9\u3002</li> </ol>"},{"location":"proposal/03-egress-ip/README_zh-CN/#egressendpointslice","title":"EgressEndpointSlice","text":"<p>\u805a\u5408 EgressGatewayPolicy \u5339\u914d\u4e2d\u7684\u7aef\u70b9\uff0c\u4ee5\u63d0\u9ad8\u6269\u5c55\u6027\uff0c\u4ec5\u652f\u6301 EgressGatewayPolicy \u4f7f\u7528 <code>podSelector</code> \u7684\u65b9\u5f0f\u5339\u914d Pod \u7684\u60c5\u51b5\u3002\u6bcf\u4e2a EgressEndpointSlice \u4e2d\u7684 Endpoint \u4e2a\u6570\u9ed8\u8ba4\u4e0d\u8d85\u8fc7 100\uff0c\u6700\u5927\u503c\u53ef\u4ee5\u8fdb\u884c\u8bbe\u7f6e\u3002\u662f EgressGatewayPolicy \u7684\u9644\u5c5e\u8d44\u6e90\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressEndpointSlice\nmetadata:\nname: \"policy-test-dx66t\"     # 1\nnamespace: \"default\"         labels:\negressgateway.spidernet.io/egressgatewaypolicy: \"policy-test\"  # 2\nownerReferences:   # 3\n- apiVersion: egressgateway.spidernet.io/v1beta1\nblockOwnerDeletion: true\ncontroller: true\nkind: EgressGatewayPolicy\nname: \"policy-test\"\nuid: 1b2ec0a8-b929-4528-8f99-499f981d319e\ndata:\nendpoints:                   # 4\n- podName: \"web-app\"         ipv4List:\n- \"172.29.30.123\" ipv6List:\n- \"xxx\"         nodeName: \"node1\"          # 5\nuuid: \"\"\n</code></pre> <ol> <li>\u540d\u79f0\u7531 <code>policy-name-xxxxx</code> \u7ec4\u6210\uff0c\u540e\u9762 5 \u4f4d\u968f\u673a\u751f\u6210\uff1b</li> <li>\u6240\u5c5e\u7684 EgressGatewayPolicy \u540d\u79f0\uff1b</li> <li>\u521b\u5efa\u65f6\u540c\u6b65\u8bbe\u7f6e ownerReferences\uff1b</li> <li>\u5339\u914d\u4e2d\u7684 endpoints \u7684\u5217\u8868\uff1b</li> <li>Pod \u6240\u5728\u7684\u8282\u70b9\u3002</li> </ol>"},{"location":"proposal/03-egress-ip/README_zh-CN/#_6","title":"\u6570\u636e\u9762\u89c4\u5219","text":"<p>\u5bf9\u9700\u8981\u751f\u6548\u7684\u89c4\u5219\u5206\u4e3a\u4e09\u7c7b\uff1a\u6240\u6709\u8282\u70b9\uff0c\u76f8\u5bf9\u4e8e EgressGatewayPolicy \u7684\u300c\u7f51\u5173\u8282\u70b9\u300d\u548c\u300c\u975e\u7f51\u5173\u8282\u70b9\u300d\u3002</p>"},{"location":"proposal/03-egress-ip/README_zh-CN/#_7","title":"\u6240\u6709\u8282\u70b9","text":"<ol> <li>\u5404\u8282\u70b9\u4e4b\u95f4\uff0c\u96a7\u9053\u9700\u8981\u6253\u901a\u7684\u89c4\u5219\u5c31\u5c31\u4e0d\u4e00\u4e00\u5c55\u5f00\uff1b</li> <li>\u5c06 policy \u547d\u4e2d\u7684\u6d41\u91cf\uff0c\u91cd\u65b0\u6253\u6807\u7b7e\u3002\u8282\u70b9\u7b2c\u4e00\u6b21\u53d8\u6210\u7f51\u5173\u8282\u70b9\u65f6\u66f4\u65b0\uff0c\u6216\u8005\u8282\u70b9 join \u65f6\u505a\u4e00\u6b21\uff0c\u540e\u9762\u4e0d\u66f4\u65b0\uff1b    <pre><code>iptables -t mangle -N EGRESSGATEWAY-RESET-MARK\niptables -t mangle -I FORWARD 1  -j EGRESSGATEWAY-RESET-MARK -m comment --comment \"egress gateway: mark egress packet\"\niptables -t mangle -A EGRESSGATEWAY-RESET-MARK \\\n-m mark --mark $NODE_MARK/0x26000000 \\\n-j MARK --set-mark 0x12000000 \\\n-m comment --comment \"egress gateway: change mark\"\n</code></pre></li> <li>\u4fdd\u6301 policy \u547d\u4e2d\u6d41\u91cf\u7684\u6807\u7b7e\u3002\u76f4\u63a5\u521b\u5efa\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\uff1b    <pre><code>iptables -t filter -I FORWARD 1 -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: keep mark\"\niptables -t filter -I OUTPUT 1 -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: keep mark\"\niptables -t mangle -I POSTROUTING 1 -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: keep mark\"\n</code></pre></li> <li>policy \u547d\u4e2d\u7684\u6e90 IP\u3001\u76ee\u7684 IP \u7684 ipset\uff1b    <pre><code>IPSET_RULE_DEST_NAME=egress-dest-uuid\nipset x $IPSET_RULE_DEST_NAME\nipset create $IPSET_RULE_DEST_NAME hash:net\nipset add $IPSET_RULE_DEST_NAME 10.6.105.150/32\n\nIPSET_RULE_SRC_NAME=egress-src-uuid\nipset x $IPSET_RULE_SRC_NAME\nipset create $IPSET_RULE_SRC_NAME hash:net\nipset add $IPSET_RULE_SRC_NAME 172.29.234.173/32\n</code></pre></li> <li>\u805a\u5408 policy \u547d\u4e2d\u6d41\u91cf\u6253\u6807\u7b7e\u7684\u94fe\u3002\u76f4\u63a5\u521b\u5efa\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\uff1b    <pre><code>iptables -t mangle -N EGRESSGATEWAY-MARK-REQUEST\niptables -t mangle -I PREROUTING 1 -j EGRESSGATEWAY-MARK-REQUEST -m comment --comment \"egress gateway: mark egress packet\"\n</code></pre></li> <li>\u805a\u5408\u4e0d\u9700\u8981\u505a SNAT \u89c4\u5219\u7684\u94fe\u3002\u76f4\u63a5\u521b\u5efa\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\uff1b    <pre><code>iptables -t nat -N EGRESSGATEWAY-NO-SNAT\niptables -t nat -I POSTROUTING 1  -j EGRESSGATEWAY-NO-SNAT -m comment --comment \"egress gateway: no snat\"\niptables -t nat -A EGRESSGATEWAY-NO-SNAT -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: no snat\"\n</code></pre></li> <li>\u805a\u5408\u9700\u8981\u505a SNAT \u89c4\u5219\u7684\u94fe\u3002\u76f4\u63a5\u521b\u5efa\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\u3002    <pre><code>iptables -t nat -N EGRESSGATEWAY-SNAT-EIP\n# \u9700\u8981\u5728\u4e0d\u9700\u8981 SNAT \u7684\u89c4\u5219\u540e\u9762\u63d2\u5165\uff0c\u624d\u80fd\u4fdd\u8bc1\u8be5\u94fe\u5728\u6700\u524d\u9762\niptables -t nat -I POSTROUTING 1  -j EGRESSGATEWAY-SNAT-EIP -m comment --comment \"egress gateway: snat EIP\"\n</code></pre></li> </ol>"},{"location":"proposal/03-egress-ip/README_zh-CN/#eip-egress-gateway","title":"\u76f8\u5bf9\u4e8e EIP \u7684\u975e Egress Gateway \u8282\u70b9","text":"<ol> <li>policy \u547d\u4e2d\u7684\u6d41\u91cf\u6253\u6807\u7b7e\uff0c\u4fdd\u8bc1\u80fd\u4ece\u96a7\u9053\u8d70\u3002\u5176\u4e2d NODE_MARK \u7684\u503c\u6839\u636e policy \u5bf9\u5e94\u7684 EIP \u6240\u5728\u8282\u70b9\u51b3\u5b9a\u3002    <pre><code>iptables -A EGRESSGATEWAY-MARK-REQUEST -t mangle -m conntrack --ctdir ORIGINAL \\\n-m set --match-set $IPSET_RULE_DEST_NAME dst  \\\n-m set --match-set $IPSET_RULE_SRC_NAME src  \\\n-j MARK --set-mark $NODE_MARK -m comment --comment \"rule uuid: mark request packet\"\n</code></pre></li> <li>\u7b56\u7565\u8def\u7531\u89c4\u5219    <pre><code>ip rule add fwmark $NODE_MARK table $TABLE_NUM\n</code></pre> 3.\u9002\u914d Weave \u907f\u514d\u505a SNAT \u6210 Egress \u96a7\u9053\u7684 IP\u3002\u505a\u6210\u5f00\u5173    <pre><code>iptables -t nat -A EGRESSGATEWAY-NO-SNAT \\\n-m set --match-set $IPSET_RULE_DEST_NAME dst  \\\n-m set --match-set $IPSET_RULE_SRC_NAME src  \\\n-j ACCEPT -m comment --comment \"egress gateway: weave does not do SNAT\"\n</code></pre></li> </ol>"},{"location":"proposal/03-egress-ip/README_zh-CN/#eip-egress-gateway_1","title":"\u76f8\u5bf9\u4e8e EIP \u7684 Egress Gateway \u8282\u70b9","text":"<ol> <li>policy \u547d\u4e2d\u7684\u6d41\u91cf\u3002\u51fa\u7f51\u5173\u65f6\u505a SNAT\u3002\u5b9e\u65f6\u66f4\u65b0\u3002    <pre><code>iptables -t nat -A EGRESSGATEWAY-SNAT-EIP \\\n-m set --match-set $IPSET_RULE_SRC_NAME src \\\n-m set --match-set $IPSET_RULE_DST_NAME dst \\\n-j SNAT --to-source $EIP\n</code></pre></li> </ol>"},{"location":"proposal/03-egress-ip/README_zh-CN/#egressgatewaypolicy-eip","title":"EgressGatewayPolicy \u9009\u7f51\u5173\u8282\u70b9\u53ca EIP \u5206\u914d\u903b\u8f91","text":"<p>\u4e00\u4e2a policy \u4f1a\u6839\u636e\u9009\u7f51\u5173\u8282\u70b9\u7684\u7b56\u7565\uff0c\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u7f51\u5173\u8282\u70b9\u3002\u7136\u540e\u6839\u636e\u662f\u5426\u4f7f\u7528 EIP\uff0c\u6765\u51b3\u5b9a\u662f\u5426\u5206\u914d EIP\u3002\u5206\u914d\u7684 EIP \u5c06\u7ed1\u5b9a\u5230\u6240\u9009\u7684\u7f51\u5173\u8282\u70b9\u4e0a</p> <p>\u5206\u914d\u903b\u8f91\u90fd\u662f\u4ee5\u5355\u4e2a EgressGateway \u4e3a\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u6240\u6709\u7684 EgressGateway\u3002</p>"},{"location":"proposal/03-egress-ip/README_zh-CN/#policy","title":"policy \u9009\u7f51\u5173\u8282\u70b9\u7684\u6a21\u5f0f","text":"<ul> <li>\u5e73\u5747\u9009\u62e9\uff1a\u5f53\u9700\u8981\u9009\u62e9\u7f51\u5173\u8282\u70b9\u65f6\uff0c\u9009\u62e9\u4f5c\u4e3a\u7f51\u5173\u8282\u70b9\u6700\u5c11\u7684\u4e00\u4e2a\u8282\u70b9\u3002</li> <li>\u6700\u5c11\u8282\u70b9\u9009\u62e9\uff1a\u5c3d\u91cf\u9009\u540c\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u7f51\u5173\u8282\u70b9</li> <li>\u9650\u5ea6\u9009\u62e9\uff1a\u4e00\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u80fd\u6210\u4e3a\u51e0\u4e2a policy \u7684\u7f51\u5173\u8282\u70b9\uff0c\u9650\u5ea6\u53ef\u4ee5\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 5\u3002\u6ca1\u6709\u8fbe\u5230\u9650\u5ea6\u524d\uff0c\u5219\u4f18\u5148\u9009\u62e9\u8be5\u8282\u70b9\uff0c\u8fbe\u5230\u9650\u5ea6\u5c31\u9009\u5176\u4ed6\u7684\u8282\u70b9\uff0c\u5982\u679c\u90fd\u8fbe\u5230\u4e86\u9650\u5ea6\uff0c\u5219\u968f\u673a\u9009\u62e9</li> </ul>"},{"location":"proposal/03-egress-ip/README_zh-CN/#eip","title":"EIP \u5206\u914d\u903b\u8f91","text":"<ul> <li>\u968f\u673a\u5206\u914d\uff1a\u5728\u6240\u6709\u7684 EIP \u4e2d\u968f\u673a\u9009\u62e9\u4e00\u4e2a\uff0c\u4e0d\u7ba1\u8be5 EIP \u662f\u5426\u5df2\u7ecf\u5206\u914d</li> <li>\u4f18\u5148\u4f7f\u7528\u672a\u5206\u914d\u7684 EIP\uff1a\u5148\u4f7f\u7528\u672a\u5206\u914d\u7684 EIP\uff0c\u5982\u679c\u90fd\u4f7f\u7528\u4e86\u5219\u518d\u968f\u673a\u5206\u914d\u4e00\u4e2a\u5df2\u4f7f\u7528\u7684 EIP</li> <li>\u9650\u5ea6\u9009\u62e9\uff1a\u4e00\u4e2a EIP \u6700\u591a\u53ea\u80fd\u88ab\u51e0\u4e2a policy \u4f7f\u7528\uff0c\u9650\u5ea6\u53ef\u4ee5\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 5\uff0c\u6ca1\u6709\u8fbe\u5230\u9650\u5ea6\u524d\uff0c\u5219\u5148\u5206\u914d\u8be5 EIP\uff0c\u8fbe\u5230\u9650\u5ea6\u5219\u9009\u5176\u4ed6\u7684 EIP\u3002\u90fd\u8fbe\u5230\u9650\u5ea6\u5219\u968f\u673a\u5206\u914d\u3002</li> </ul>"},{"location":"proposal/03-egress-ip/README_zh-CN/#eip_1","title":"EIP \u56de\u6536\u903b\u8f91","text":"<p>\u5f53\u4e00\u4e2a EIP \u6ca1\u6709\u88ab policy \u4f7f\u7528\u65f6\uff0c\u5219\u56de\u6536\u8be5 EIP\uff0c\u56de\u6536\u5c31\u662f\u5728 eips \u4e2d\u5c06\u8be5 EIP \u5b57\u6bb5\u5220\u9664</p>"},{"location":"proposal/03-egress-ip/README_zh-CN/#_8","title":"\u5176\u4ed6","text":"<ol> <li> <p>dummy \u7f51\u5361\u53ca EIP\uff1a\u6bcf\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u540d\u4e3a <code>egress.eip</code> \u7684 dummy \u7f51\u5361\uff0c\u6240\u6709\u7684 EIP \u90fd\u751f\u6548\u5728\u8be5\u8282\u70b9\u4e0a    <pre><code># \u521b\u5efa dummy \u7f51\u5361\nip link add egress.eip type dummy\nip link set egress.eip up\n\n# \u8bbe\u7f6e EIP\nip addr add 10.6.168.100 dev egress.eip\n</code></pre></p> </li> <li> <p>\u7531\u4e8e EIP \u662f\u751f\u6548\u5728 dummy \u7f51\u5361\u4e0a\u7684\uff0c\u6240\u4ee5\u9700\u8981\u914d\u7f6e ARP \u4ee3\u7b54\u3002    <pre><code>sysctl -w net.ipv4.conf.all.arp_ignore=0\n# \u6240\u6709\u7684\u7269\u7406\u7f51\u5361\u90fd\u9700\u8981\u8bbe\u7f6e\u4ee3\u7b54\uff0c\u4e0d\u786e\u5b9a\u4ece\u90a3\u79cd\u7f51\u5361\u51fa\u53bb\nsysctl -w net.ipv4.conf.xxx.arp_ignore=0\n</code></pre></p> </li> <li> <p>mangle-FORWARD match \u91cd\u65b0\u6253\u6807\u7b7e\uff0c\u56e0\u4e3a <code>NODE_MARK = 0x26 + value + 0000</code>\uff0c\u6240\u4ee5\u5339\u914d\u65f6\u53ea\u8981\u5339\u914d\u524d\u976216 \u4f4d\u3002    <pre><code>iptables -t mangle -I FORWARD 1 -m mark --mark 0x26000000/0x26000000 -j MARK --set-mark 0x12000000 -m comment --comment \"egress gateway: change mark\"\n</code></pre></p> </li> <li> <p>\u66f4\u65b0 ipset \u5185\u5bb9\uff0cCRD \u4e2d\u805a\u5408\u4e86\u6700\u65b0\u7684 IP \u5185\u5bb9\uff0c\u53ef\u4ee5\u5148\u521b\u5efa\u4e34\u65f6 ipset \u518d\u901a\u8fc7 swap \u8fdb\u884c\u4ea4\u6362\uff0c\u5927\u91cf\u7b80\u5316 ipset \u64cd\u4f5c\uff0c\u63d0\u9ad8\u6548\u7387\u3002    <pre><code>ipset create egress-dst-v4-xxx-tmp ipset add egress-dst-v4-xxx-tmp $NEW_IP_RANGE\nipset swap egress-dst-v4-xxx egress-dst-v4-xxx-tmp </code></pre></p> </li> </ol>"},{"location":"proposal/03-egress-ip/README_zh-CN/#_9","title":"\u4ee3\u7801\u8bbe\u8ba1","text":""},{"location":"proposal/04-auto-detect-egress-ignore-cidr/README_zh-CN/","title":"Egress ignore CIDR","text":""},{"location":"proposal/04-auto-detect-egress-ignore-cidr/README_zh-CN/#_1","title":"\u52a8\u673a","text":"<p>\u4e3a\u4e86\u7b80\u5316 Egress \u7b56\u7565\u7684\u914d\u7f6e\uff0c\u5f15\u5165 Egress Ignore CIDR \u529f\u80fd\uff0c\u5141\u8bb8\u4ee5\u624b\u52a8\u548c\u81ea\u52a8\u7684\u65b9\u5f0f\u83b7\u53d6\u96c6\u7fa4\u7684 CIDR\u3002\u5f53 EgressGatewayPolicy \u7684 <code>destSubnet</code> \u5b57\u6bb5\u4e3a\u7a7a\u65f6\uff0c\u6570\u636e\u9762\u5c06\u4f1a\u81ea\u52a8\u5339\u914d EgressClusterInfo CR \u4e2d\u7684 CIDR \u4e4b\u5916\u7684\u6d41\u91cf\uff0c\u5e76\u5c06\u5176\u8f6c\u53d1\u5230 Egress \u7f51\u5173\u3002</p>"},{"location":"proposal/04-auto-detect-egress-ignore-cidr/README_zh-CN/#_2","title":"\u76ee\u6807","text":"<ul> <li>\u4f18\u5316 EgressGatewayPolicy \u4f7f\u7528\u4f53\u9a8c</li> </ul>"},{"location":"proposal/04-auto-detect-egress-ignore-cidr/README_zh-CN/#_3","title":"\u8bbe\u8ba1","text":""},{"location":"proposal/04-auto-detect-egress-ignore-cidr/README_zh-CN/#egressclusterinfo-crd","title":"EgressClusterInfo CRD","text":"<p>\u96c6\u7fa4\u7ea7 CRD\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressClusterInfo\nmetadata:\nname: default  # 1\nspec:\nautoDetect:\nclusterIP: true # 2\nnodeIP: true # 3\npodCidrMode: auto # 4\nextraCidr: # 5\n- 10.10.10.1\nstatus:\nclusterIP: # 6\nipv4:\n- 172.41.0.0/16\nipv6:\n- fd41::/108\nextraCidr: # 7\n- 10.10.10.1\nnodeIP: # 8\negressgateway-control-plane:\nipv4:\n- 172.18.0.3\nipv6:\n- fc00:f853:ccd:e793::3\negressgateway-worker:\nipv4:\n- 172.18.0.2\nipv6:\n- fc00:f853:ccd:e793::2\negressgateway-worker2:\nipv4:\n- 172.18.0.4\nipv6:\n- fc00:f853:ccd:e793::4\npodCIDR: # 9\ndefault-ipv4-ippool:\nipv4:\n- 172.40.0.0/16\ndefault-ipv6-ippool:\nipv6:\n- fd40::/48\ntest-ippool:\nipv4:\n- 177.70.0.0/16\npodCidrMode: calico # 10\n</code></pre> <ol> <li>\u540d\u79f0\u4e3a <code>default</code>\uff0c\u7531\u7cfb\u7edf\u7ef4\u62a4\u53ea\u80fd\u521b\u5efa\u4e00\u4e2a;</li> <li><code>clusterIP</code>\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a <code>true</code>\uff0c<code>Service CIDR</code> \u4f1a\u81ea\u52a8\u68c0\u6d4b</li> <li><code>nodeIP</code>\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a <code>true</code>\uff0c\u4f1a\u81ea\u52a8\u68c0\u6d4b <code>nodeIP</code> \u76f8\u5173\u53d8\u5316\uff0c\u5e76\u52a8\u6001\u66f4\u65b0\u5230 <code>EgressClusterInfo</code> \u7684 <code>status.nodeIP</code> \u4e2d</li> <li><code>podCidrMode</code>\uff0c\u76ee\u524d\u652f\u6301 <code>k8s</code>\u3001 <code>calico</code>\u3001<code>auto</code>\u3001 <code>\"\"</code>\uff0c\u8868\u793a\u8981\u81ea\u52a8\u68c0\u6d4b\u5bf9\u5e94\u7684 podCidr\uff0c\u9ed8\u8ba4\u4e3a <code>auto</code>\uff0c\u5982\u679c\u4e3a <code>auto</code> \u8868\u793a\u81ea\u52a8\u68c0\u6d4b\u96c6\u7fa4\u4f7f\u7528\u7684 cni\uff0c \u5982\u679c\u68c0\u6d4b\u4e0d\u5230\uff0c\u5219\u4f7f\u7528 \u96c6\u7fa4\u7684 podCidr\u3002\u5982\u679c\u4e3a <code>\"\"</code> \u8868\u793a\u4e0d\u68c0\u6d4b</li> <li><code>extraCidr</code>\uff0c\u53ef\u624b\u52a8\u586b\u5199\u8981\u5ffd\u7565\u6389\u7684 <code>IP</code> \u96c6\u5408</li> <li><code>status.clusterIP</code>\uff0c\u5982\u679c <code>spec.autoDetect.clusterIP</code> \u4e3a <code>true</code>\uff0c\u5219\u81ea\u52a8\u68c0\u6d4b\u96c6\u7fa4 <code>Service CIDR</code>\uff0c\u5e76\u66f4\u65b0\u5230\u6b64\u5904</li> <li><code>status.extraCidr</code>\uff0c\u5bf9\u5e94 <code>spec.extraCidr</code> </li> <li><code>status.nodeIP</code>\uff0c\u5982\u679c <code>spec.autoDetect.nodeIP</code> \u4e3a <code>true</code>\uff0c\u5219\u81ea\u52a8\u68c0\u6d4b\u96c6\u7fa4 <code>nodeIP</code>\uff0c\u5e76\u66f4\u65b0\u5230\u6b64\u5904</li> <li><code>status.podCIDR</code>\uff0c\u5bf9\u5e94 <code>spec.autoDetect.podCidrMode</code>\uff0c\u8fdb\u884c\u76f8\u5173 <code>podCidr</code> \u7684\u66f4\u65b0</li> <li><code>status.podCidrMode</code>\uff0c\u5bf9\u5e94 <code>spec.autoDetect.podCidrMode</code> \u4e3a <code>auto</code> \u7684\u573a\u666f</li> </ol>"},{"location":"proposal/04-auto-detect-egress-ignore-cidr/README_zh-CN/#_4","title":"\u6570\u636e\u9762\u7b56\u7565","text":""},{"location":"proposal/04-auto-detect-egress-ignore-cidr/README_zh-CN/#ipset","title":"ipset","text":"<p>\u6570\u636e\u9762\u5728\u5904\u7406 <code>destSubnet</code> \u4e3a\u7a7a\u7684\u7684 EgressGatewayPolicy \u65f6\uff0c\u5c06 iptables \u5339\u914d\u7b56\u7565\u6539\u4e3a <code>--match-set !egress-ingore-cidr dst</code>\u3002</p> <pre><code>iptables -A EGRESSGATEWAY-MARK-REQUEST -t mangle -m conntrack --ctdir ORIGINAL \\\n-m set --match-set !egress-ingore-cidr dst  \\\n-m set --match-set $IPSET_RULE_SRC_NAME src  \\\n-j MARK --set-mark $NODE_MARK -m comment --comment \"rule uuid: mark request packet\"\n</code></pre>"},{"location":"proposal/04-auto-detect-egress-ignore-cidr/README_zh-CN/#_5","title":"\u4ee3\u7801\u8bbe\u8ba1","text":""},{"location":"proposal/04-auto-detect-egress-ignore-cidr/README_zh-CN/#controller","title":"Controller","text":"<p>\u65b0\u589e\u4e00\u4e2a\u63a7\u5236\u5faa\u73af\uff0c\u6839\u636e <code>spec.autoDetect</code> \u914d\u7f6e\u6765 Watch \u96c6\u7fa4\u7684\u76f8\u5173\u8d44\u6e90\uff0c\u66f4\u65b0\u81ea\u52a8\u68c0\u6d4b\u7684 CIDR \u5230 EgressClusterInfo CR \u7684 <code>status</code> \u4e2d\u3002</p>"},{"location":"proposal/04-auto-detect-egress-ignore-cidr/README_zh-CN/#agent","title":"Agent","text":"<ul> <li>\u5728 Policy \u7684\u63a7\u5236\u5faa\u73af\u4e2d\uff0c\u5904\u7406 EgressClusterInfo \u66f4\u65b0\u5230\u540d\u4e3a <code>egress-ingore-cidr</code> \u7684 ipset \u4e2d\uff1b</li> <li>\u5bf9\u4e8e <code>destSubnet</code> \u5b57\u6bb5\u4e3a\u7a7a\u65f6\u7684 EgressGatewayPolicy \u7b56\u7565\uff0c\u4f7f\u7528 <code>egress-ingore-cidr</code> \u7684 ipset \u5339\u914d\u6d41\u91cf\u3002</li> </ul>"},{"location":"proposal/05-egress-gateway-policy-cluster/README_zh-CN/","title":"EgressGatewayPolicyCluster","text":""},{"location":"proposal/05-egress-gateway-policy-cluster/README_zh-CN/#_1","title":"\u52a8\u673a","text":"<p>\u8865\u5145\u6ca1\u6709\u96c6\u7fa4\u7ea7\u522b policy \u7684\u529f\u80fd</p>"},{"location":"proposal/05-egress-gateway-policy-cluster/README_zh-CN/#_2","title":"\u76ee\u6807","text":"<ul> <li>\u652f\u6301\u96c6\u7fa4\u7ea7\u522b\u7684 policy</li> <li>\u652f\u6301\u4f18\u5148\u7ea7</li> </ul>"},{"location":"proposal/05-egress-gateway-policy-cluster/README_zh-CN/#_3","title":"\u8bbe\u8ba1","text":"<ul> <li>\u96c6\u7fa4\u7ea7\u522b\u7684 policy\uff0c\u591a\u4e86 <code>namespaceSelector</code> \u5b57\u6bb5\u3002\u4e3a\u7a7a\u65f6\uff0c\u5219\u4f5c\u7528\u4e8e\u6574\u4e2a\u96c6\u7fa4\u3002\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5219\u4f5c\u7528\u4e8e\u7b26\u5408\u6761\u4ef6\u7684 NS\u3002</li> <li>\u7531\u4e8e\u65b0\u589e\u4e86\u96c6\u7fa4\u7ea7\u522b\u7684 policy\uff0c\u5f53\u96c6\u7fa4\u7ea7\u522b\u4e0e namespace \u7ea7\u522b\u7684\u4e24\u4e2a policy\uff0c <code>appliedTo</code>\u3001<code>destSubnet</code> \u4e00\u81f4\uff0c\u4f46 <code>egressGatewayName</code>  \u6216<code>egressIP</code> \u4e0d\u4e00\u81f4\u65f6\uff0c\u4e24\u4e2a\u7b56\u7565\u8c01\u6700\u7ec8\u751f\u6548\u5c31\u5c06\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\u3002\u6240\u4ee5\u5f15\u5165\u4e00\u4e2a\u4f18\u5148\u7ea7\u7684\u65b0\u5b57\u6bb5 <code>priority</code> \u6765\u89e3\u51b3\u8be5\u95ee\u9898\u3002\u8303\u56f4\u4e3a 1-65536\uff0c\u6570\u503c\u8d8a\u5c0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e\u4f18\u5148\u7ea7\u3002\u5982\u679c\u6ca1\u8bbe\u7f6e\u65f6\uff0cEgressGatewayPolicy \u9ed8\u8ba4\u4f18\u5148\u7ea7\u4e3a 1000\uff0cEgressGatewayPolicyCluster \u9ed8\u8ba4\u4f18\u5148\u7ea7\u4e3a 32768.\u5982\u679c\u4f18\u5148\u7ea7\u4e00\u81f4\u65f6\uff0c\u5219\u968f\u673a\u6392\u5e8f\u3002</li> </ul>"},{"location":"proposal/05-egress-gateway-policy-cluster/README_zh-CN/#egresspolicy-crd","title":"EgressPolicy CRD","text":"<pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\nnamespace: \"default\"\nname: \"policy-test\"\nspec:\npriority: 100             # 1\negressGatewayName: \"eg1\"\negressIP:\nipv4: \"\"                            ipv6: \"\"\nuseNodeIP: false\nappliedTo:\npodSelector:\nmatchLabels:    app: \"shopping\"\npodSubnet:\n- \"172.29.16.0/24\"\n- 'fd00:1/126'\ndestSubnet:\n- \"10.6.1.92/32\"\n- \"fd00::92/128\"\n</code></pre> <ol> <li>\u65b0\u589e\u5b57\u6bb5\uff0c\u7b56\u7565\u7684\u4f18\u5148\u7ea7</li> </ol>"},{"location":"proposal/05-egress-gateway-policy-cluster/README_zh-CN/#egressclusterpolicy-crd","title":"EgressClusterPolicy CRD","text":"<pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressClusterPolicy\nmetadata:\nnamespace: \"default\"\nname: \"policy-test\"\nspec:\npriority: 100             # 1\negressGatewayName: \"eg1\"\negressIP:\nipv4: \"\"                            ipv6: \"\"\nuseNodeIP: false\nappliedTo:\npodSelector:\nmatchLabels:    app: \"shopping\"\npodSubnet:\n- \"172.29.16.0/24\"\n- 'fd00:1/126'\nnamespaceSelector:      # 1\nmatchLabels:    app: \"shopping\"\ndestSubnet:\n- \"10.6.1.92/32\"\n- \"fd00::92/128\"\n</code></pre> <ol> <li>\u7b56\u7565\u7684\u4f18\u5148\u7ea7</li> <li>namespace \u7b5b\u9009\u5668</li> </ol> <p>\u5176\u4ed6\u65b9\u9762\uff0c\u4e24\u8005\u4e00\u81f4</p>"},{"location":"reference/EgressClusterEndpointSlice/","title":"CRD EgressClusterEndpointSlice","text":"<p>The EgressClusterEndpointSlice CRD is used to aggregate address information of Pods matched by EgressClusterPolicy. This resource is for internal use only, aiming to improve the performance of the control plane.</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressClusterEndpointSlice\nmetadata:\ngenerateName: cluster-policy-\nlabels:\nspidernet.io/policy-name: cluster-policy          # (1)\nname: cluster-policy-zp667\nownerReferences:\n- apiVersion: egressgateway.spidernet.io/v1beta1  # (2)\nblockOwnerDeletion: true\ncontroller: true\nkind: EgressClusterPolicy\nname: cluster-policy\nuid: fdca1dd5-9c3b-4d58-b043-451e10f15ea8\nendpoints:                                             # (3)\n- ipv4:\n- 10.21.60.74                                    # (4)\nipv6:\n- fd00:21::5328:9c2:3579:8cca                    # (5)\nnode: workstation3                                 # (6)\nns: ns1                                            # (7)\npod: ns2-mock-app-5c4cd6bb87-g4fdj                 # (8)\n</code></pre> <ol> <li>This label value indicates the EgressClusterPolicy to which the EgressClusterEndpointSlice belongs.</li> <li>By using <code>ownerReferences</code>, the CRD is associated with its parent resource, enabling automatic recycling of EgressClusterEndpointSlice when the EgressClusterPolicy is deleted.</li> <li>The EgressClusterEndpointSlice object is used to summarize the address information of Pods matched by EgressClusterPolicy. By default, a new EgressClusterEndpointSlice is created when there are more than 100 matched results.</li> <li>The IPv4 address list of Pods.</li> <li>The IPv6 address list of Pods.</li> <li>Information about the node where the Pods are located.</li> <li>Information about the tenant to which the Pods belong.</li> <li>The names of the Pods.</li> </ol>"},{"location":"reference/EgressClusterInfo/","title":"CRD EgressClusterInfo","text":"<p>The EgressClusterInfo CRD introduces the Egress Ignore CIDR feature to simplify the configuration of Egress policies and allows automatic acquisition of the cluster's CIDR. When the <code>destSubnet</code> field of the EgressGatewayPolicy is empty, the data plane will automatically match traffic outside the CIDR in the EgressClusterStatus CR and forward it to the Egress gateway.</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressClusterInfo\nmetadata:\nname: default  # 1\nspec:\nautoDetect:\nclusterIP: true # 2\nnodeIP: true # 3\npodCidrMode: auto # 4\nextraCidr: # 5\n- 10.10.10.1\nstatus:\nclusterIP: # 6\nipv4:\n- 172.41.0.0/16\nipv6:\n- fd41::/108\nextraCidr: # 7\n- 10.10.10.1\nnodeIP: # 8\negressgateway-control-plane:\nipv4:\n- 172.18.0.3\nipv6:\n- fc00:f853:ccd:e793::3\negressgateway-worker:\nipv4:\n- 172.18.0.2\nipv6:\n- fc00:f853:ccd:e793::2\negressgateway-worker2:\nipv4:\n- 172.18.0.4\nipv6:\n- fc00:f853:ccd:e793::4\npodCIDR: # 9\ndefault-ipv4-ippool:\nipv4:\n- 172.40.0.0/16\ndefault-ipv6-ippool:\nipv6:\n- fd40::/48\ntest-ippool:\nipv4:\n- 177.70.0.0/16\npodCidrMode: calico # 10\n</code></pre> <ol> <li>The name is <code>default</code>, only one can be created by the system maintenance;</li> <li><code>clusterIP</code>, if set to <code>true</code>, <code>Service CIDR</code> will be detected automatically</li> <li><code>nodeIP</code>, if it is set to <code>true</code>, it will automatically detect changes related to <code>nodeIP</code> and dynamically update it to <code>status.nodeIP</code> of <code>EgressClusterInfo</code></li> <li><code>podCidrMode</code> currently supports <code>k8s</code>, <code>calico</code>, <code>auto</code>, and <code>\"\"</code>. It indicates whether to automatically detect the corresponding <code>podCidr</code> setting. The default value is <code>auto</code>. When set to <code>auto</code>, it means that the cluster's used CNI (Container Network Interface) will be automatically detected. If detection fails, the cluster's <code>podCidr</code> will be used. If set to <code>\"\"</code>, it signifies no detection.</li> <li><code>extraCidr</code>, you can manually fill in the <code>IP</code> set to be ignored</li> <li><code>status.clusterIP</code>, if <code>spec.autoDetect.clusterIP</code> is <code>true</code>, then automatically detect the cluster <code>Service CIDR</code>, and update here</li> <li><code>status.extraCidr</code>, corresponding to <code>spec.extraCidr</code></li> <li><code>status.nodeIP</code>, if <code>spec.autoDetect.nodeIP</code> is <code>true</code>, then automatically detect cluster <code>nodeIP</code>, and update here</li> <li><code>status.podCIDR</code>, corresponding to <code>spec.autoDetect.podCidrMode</code>, update related <code>podCidr</code></li> <li><code>status.podCidrMode</code> corresponding to <code>spec.autoDetect.podCidrMode</code> being set to <code>auto</code></li> </ol>"},{"location":"reference/EgressClusterPolicy/","title":"CRD EgressClusterPolicy","text":"<p>The EgressClusterPolicy CRD is used to define cluster-level Egress policy rules, similar to the EgressPolicy CRD, but with the added <code>spec.appliedTo.namespaceSelector</code> attribute.</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressClusterPolicy\nmetadata:\nname: \"policy-test\"\nspec:\npriority: 100\negressGatewayName: \"eg1\"\negressIP:\nipv4: \"\"\nipv6: \"\"\nuseNodeIP: false\nappliedTo:\npodSelector:\nmatchLabels:\napp: \"shopping\"\npodSubnet:\n- \"172.29.16.0/24\"\n- 'fd00:1/126'\nnamespaceSelector:   # 1\nmatchLabels:\napp: \"shopping\"\ndestSubnet:\n- \"10.6.1.92/32\"\n- \"fd00::92/128\"\n</code></pre> <ol> <li>The <code>namespaceSelector</code> uses a selector to select the list of matching namespaces. Within the selected namespace scope, use the <code>podSelector</code> to select the matching Pods, and then apply the Egress policy to these selected Pods.</li> </ol>"},{"location":"reference/EgressEndpointSlice/","title":"CRD EgressEndpointSlice","text":"<p>The EgressEndpointSlice CRD is used to aggregate address information of Pods matched by EgressPolicy. This resource is for internal use only, aiming to improve the performance of the control plane.</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressEndpointSlice\nmetadata:\ngenerateName: ns-policy-\nlabels:\nspidernet.io/policy-name: ns-policy          # (1)\nname: ns-policy-zp667\nownerReferences:\n- apiVersion: egressgateway.spidernet.io/v1beta1  # (2)\nblockOwnerDeletion: true\ncontroller: true\nkind: EgressPolicy\nname: ns-policy\nuid: fdca1dd5-9c3b-4d58-b043-451e10f15ea8\nendpoints:                                             # (3)\n- ipv4:\n- 10.21.60.74                                    # (4)\nipv6:\n- fd00:21::5328:9c2:3579:8cca                    # (5)\nnode: workstation3                                 # (6)\nns: ns1                                            # (7)\npod: ns2-mock-app-5c4cd6bb87-g4fdj                 # (8)\n</code></pre> <ol> <li>This label value indicates the EgressPolicy to which the EgressEndpointSlice belongs.</li> <li>By using <code>ownerReferences</code>, the CRD is associated with its parent resource, enabling automatic recycling of EgressEndpointSlice when the EgressPolicy is deleted.</li> <li>The EgressEndpointSlice object is used to summarize the address information of Pods matched by EgressPolicy. By default, a new EgressEndpointSlice is created when there are more than 100 matched results.</li> <li>The IPv4 address list of Pods.</li> <li>The IPv6 address list of Pods.</li> <li>Information about the node where the Pods are located.</li> <li>Information about the tenant to which the Pods belong.</li> <li>The names of the Pods.</li> </ol>"},{"location":"reference/EgressGateway/","title":"CRD EgressGateway","text":"<p>The EgressGateway CRD is used to select a group of nodes as the Egress nodes of the cluster and configure the Egress IP pool for this group of nodes. The Egress IP can float within this range. Cluster scope resource.</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressGateway\nmetadata:\nname: \"eg1\"\nspec:\nippools:                      # 1\nipv4:                       # 2\n- \"10.6.1.55\"\n- \"10.6.1.60-10.6.1.65\"\n- \"10.6.1.70/28\"\nipv6:                       # 3\n- \"\"\nipv4DefaultEIP: \"\"          # 4\nipv6DefaultEIP: \"\"          # 5\nnodeSelector:                 # 6\nselector:                   # 7\nmatchLabels:\negress: \"true\"\npolicy: \"doing\"             # 8\nstatus:                         nodeList:                     # 9\n- name: \"node1\"             # 10\nstatus: \"Ready\"           # 11\nepis:                     # 12\n- ipv4: \"10.6.1.55\"     # 13\nipv6: \"fd00::55\"      # 14\npolicies:             # 15\n- name: \"app\"         # 16\nnamespace: \"default\"  # 17\n</code></pre> <ol> <li>Set the range of egress IP pool that EgressGateway can use;</li> <li>Egress IPv4 pool, supporting three methods: single IP <code>10.6.0.1</code>, range <code>10.6.0.1-10.6.0.10</code>, and CIDR <code>10.6.0.1/26</code>;</li> <li>Egress IPv6 pool, if dual-stack requirements are enabled, the number of IPv4 and IPv6 must be consistent, and the format is the same as IPv4;</li> <li>The default IPv4 EIP to use. If the EgressPolicy does not specify EIP and the EIP assignment policy is <code>default</code>, the EIP assigned to this EgressPolicy will be <code>ipv4DefaultEIP</code>;</li> <li>The default IPv6 EIP to use, the rules are the same as <code>ipv6DefaultEIP</code>;</li> <li>Set the matching conditions and policy for egress nodes;</li> <li>Select a group of nodes as egress gateway nodes through Selector, and egress IP can float within this range;</li> <li>The policy for EgressGateway to select Egress nodes, currently only supports average selection;</li> <li>The egress nodes selected by node selector, as well as the effective egress IP on the node, and the EgressPolicy that uses this egress IP;</li> <li>The name of the Egress node;</li> <li>The status of the Egress node;</li> <li>The effective EIP information on this gateway node;</li> <li>Egress IPv4, if EgressPolicy and EgressClusterPolicy use node IP, this field is empty;</li> <li>Egress IPv6, in the dual-stack situation, IPv4 and IPv6 are one-to-one corresponding;</li> <li>Which policies are using the effective Egress IP on this node;</li> <li>Name of the Policy using the Egress IP;</li> <li>Namespace of the Policy using the Egress IP.</li> </ol>"},{"location":"reference/EgressPolicy/","title":"CRD EgressPolicy","text":"<p>The EgressPolicy CRD is used to specify which Pods access which target CIDRs using Egress policies, as well as the IP addresses used by Egress. Namespaced resource.</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\nnamespace: \"default\"\nname: \"policy-test\"\nspec:\negressGatewayName: \"eg1\"  # 1\negressIP:                 # 2\nipv4: \"\"                            ipv6: \"\"\nuseNodeIP: false        # 3\nappliedTo:                # 4\npodSelector:            # 4-a \nmatchLabels:    app: \"shopping\"\npodSubnet:              # 4-b\n- \"172.29.16.0/24\"\n- 'fd00:1/126'\ndestSubnet:               # 5\n- \"10.6.1.92/32\"\n- \"fd00::92/128\"\npriority: 100             # 6\n</code></pre> <ol> <li>Select the EgressGateway referenced by the EgressPolicy.</li> <li>Egress IP represents the EgressIP settings used by the EgressPolicy:<ul> <li>If <code>ipv4</code> or <code>ipv6</code> addresses are defined when creating, an IP address will be allocated from the EgressGateway's <code>.ippools</code>. If policy1 requests <code>10.6.1.21</code> and <code>fd00:1</code> and then policy2 requests <code>10.6.1.21</code> and <code>fd00:2</code>, an error will occur, causing policy2 allocation to fail.</li> <li>If <code>ipv4</code> or <code>ipv6</code> addresses are not defined and <code>useNodeIP</code> is true, the Egress address will be the Node IP of the referenced EgressGateway.</li> <li>If <code>ipv4</code> or <code>ipv6</code> addresses are not defined when creating and <code>useNodeIP</code> is <code>false</code>, an IP address will be automatically allocated from the EgressGateway's <code>.ranges</code> (when IPv6 is enabled, both an IPv4 and IPv6 address will be requested).</li> <li><code>egressGatewayName</code> must not be empty.</li> </ul> </li> <li>Supports using the Node IP as the Egress IP (only one option can be chosen).</li> <li>Select the Pods to which the EgressPolicy should be applied.    a. Select by using Label    b. Specify the Pod subnet directly (options a and b cannot be used simultaneously)</li> <li>Specify the target addresses for accessing Egress. If no target addresses are specified, the effective policy will forward all traffic to Egress nodes when the destination is outside the cluster CIDR.</li> <li>Priority of the policy.</li> </ol>"},{"location":"reference/EgressTunnel/","title":"CRD EgressTunnel","text":"<p>The EgressTunnel CRD is used to record tunnel network interface information for cross-node communication. It is a cluster scope resource that corresponds one-to-one with the Kubernetes Node resource name.</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressTunnel\nmetadata:\nname: \"node1\"\nstatus:\ntunnel:\nipv4: \"192.200.222.157\"  # 1\nipv6: \"fd01::f2\"         # 2        \nmac: \"66:50:85:cb:b2:bf\" # 3\nparent:\nname: \"ens160\"        # 4\nipv4: \"10.6.1.21/16\"  # 5\nipv6: \"fd00::21/112\"  # 6\nphase: \"Ready\"              # 7\nmark: \"0x26000000\"          # 8\n</code></pre> <ol> <li>Tunnel IPv4 address</li> <li>Tunnel IPv6 address</li> <li>Tunnel MAC address</li> <li>Tunnel parent network interface</li> <li>Tunnel parent network interface IPv4 address</li> <li>Tunnel parent network interface IPv6 address</li> <li>Current tunnel status<ul> <li><code>Pending</code>: Waiting for IP allocation</li> <li><code>Init</code>: Tunnel IP allocation successful</li> <li><code>Ready</code>: Tunnel IP allocated and tunnel established</li> <li><code>Failed</code>: Tunnel IP allocation failed</li> </ul> </li> <li>Packet mark value, one for each node. For example, if node A has egress traffic that needs to be forwarded to gateway node B, the traffic of node A will be marked with a mark.</li> </ol>"},{"location":"reference/_example_zh/","title":"CRD","text":""},{"location":"reference/_example_zh/#_1","title":"\u57fa\u672c\u63cf\u8ff0","text":"<p>\u672cCRD \u662f\u505a\u4ec0\u4e48\u7684</p>"},{"location":"reference/_example_zh/#_2","title":"\u914d\u7f6e\u8bf4\u660e","text":"<p>\u8868\u683c\uff08\u5b57\u6bb5\u3001\u63cf\u8ff0\u3001\u7f3a\u7701\u503c\uff09\uff0c\u5305\u62ec\u4e86 status \u7684\u4fe1\u606f\u8bf4\u660e</p>"},{"location":"reference/_example_zh/#_3","title":"\u4f7f\u7528\u4f8b\u5b50","text":"<p>\u7ed9\u51fa\u4e00\u4e9b\u573a\u666f\u573a\u666f\u4e0b\u7684 CR yaml</p>"},{"location":"usage/ClusterDefaultEgressGateway/","title":"Cluster level Default EgressGateway","text":""},{"location":"usage/ClusterDefaultEgressGateway/#introduction","title":"Introduction","text":"<p>Setting a default EgressGateway for the entire cluster can simplify the process of using EgressPolicy under a namespace or using EgressClusterPolicy at the cluster level, as it eliminates the need to specify the EgressGateway name each time. Please note that only one default EgressGateway can be set for the cluster.</p>"},{"location":"usage/ClusterDefaultEgressGateway/#requirements","title":"Requirements","text":"<ul> <li>EgressGateway component is installed.</li> </ul>"},{"location":"usage/ClusterDefaultEgressGateway/#steps","title":"Steps","text":"<ol> <li> <p>When creating an EgressGateway, you can specify <code>spec.clusterDefault</code> as <code>true</code> to make it the default EgressGateway for the cluster. If <code>spec.egressGatewayName</code> is not specified in EgressClusterPolicy, and <code>spec.egressGatewayName</code> is not specified in EgressPolicy and the tenant has not configured a default EgressGateway, the cluster's default EgressGateway will be automatically used.</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressGateway\nmetadata:\nname: default\nspec:\nclusterDefault: true\nippools:\nipv4:\n- 10.6.1.55\n- 10.6.1.56\nipv4DefaultEIP: 10.6.1.55\nipv6:\n- fd00::55\n- fd00::56\nipv6DefaultEIP: fd00::56\nnodeSelector:\nselector:\nmatchLabels:\negress: \"true\"    </code></pre> </li> <li> <p>Use the following definition to create an EgressPolicy, ignoring the definition of the <code>spec.egressGatewayName</code> field:</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\nname: mock-app\nspec:\nappliedTo:\npodSelector:\nmatchLabels:\napp: mock-app\ndestSubnet:\n- 10.6.1.92/32\n</code></pre> </li> <li> <p>Run the following command again to confirm that the EgressPolicy has been set to the default EgressGateway:</p> <pre><code>$ kubectl get egresspolicies mock-app -o yaml\napiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\n  creationTimestamp: \"2023-08-09T11:54:34Z\"\ngeneration: 1\nname: mock-app\n  namespace: default\n  resourceVersion: \"6233341\"\nuid: 5692c5e6-a72b-41bd-a611-1106abd41bc2\nspec:\n  appliedTo:\n    podSelector:\n      matchLabels:\n        app: mock-app\n  destSubnet:\n  - 10.6.1.92/32\n  - fd00::92/128\n  - 172.30.40.0/21\n  egressGatewayName: default\n</code></pre> </li> </ol>"},{"location":"usage/Install/","title":"Install","text":""},{"location":"usage/Install/#requirement","title":"Requirement","text":"<p>Egressgateway currently supports collaboration with Calico CNI and will support collaboration with more CNIs in the future. Below are the configuration methods for different CNIs:</p>"},{"location":"usage/Install/#calico","title":"Calico","text":"<p>Required settings <code>chainInsertMode</code> to <code>Append</code>, for example in the code, more reference calico docs:</p> <pre><code>apiVersion: projectcalico.org/v3\nkind: FelixConfiguration\nmetadata:\nname: default\nspec:\nipv6Support: false\nipipMTU: 1400\nchainInsertMode: Append # (1)\n</code></pre> <ol> <li>add this line</li> </ol>"},{"location":"usage/Install/#install","title":"Install","text":""},{"location":"usage/Install/#add-helm-repository","title":"Add helm repository","text":"<pre><code>helm repo add egressgateway https://spidernet-io.github.io/egressgateway/\nhelm repo update\n</code></pre>"},{"location":"usage/Install/#install-egressgateway","title":"Install egressgateway","text":"<p>The following is a common chart setting option:</p> <pre><code>feature:\nenableIPv4: true\nenableIPv6: false # (1)\ntunnelIpv4Subnet: \"192.200.0.1/16\" # (2)\ntunnelIpv6Subnet: \"fd01::21/112\"   # (3)\n</code></pre> <ol> <li>Required pod support IPv6 Stack</li> <li>IPv4 tunnel subnet</li> <li>IPv6 tunnel subnet</li> </ol> <pre><code>helm install egressgateway egressgateway/egressgateway \\\n--values values.yaml \\\n--wait --debug\n</code></pre> <pre><code>kubectl get crd | grep egress\n</code></pre>"},{"location":"usage/Install/#create-egressgateway","title":"Create EgressGateway","text":"<p>Create an EgressGateway CR that can set a node as an egress gateway node through matchLabels.</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressGateway\nmetadata:\nname: default\nspec:\nclusterDefault: true\nippools:\nipv4:\n- \"10.6.1.60-10.6.1.66\" # (1)  \nnodeSelector:\nselector:\nmatchLabels:\nkubernetes.io/hostname: workstation2 # (2)\n</code></pre> <ol> <li>Egress address pool</li> <li>Change me, select a node in your cluster</li> </ol>"},{"location":"usage/Install/#create-example-app","title":"Create Example App","text":"<p>Create a testing Pod to simulate an application that requires egress.</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nlabels:\napp: mock-app\nname: mock-app\nnamespace: default\nspec:\ncontainers:\n- image: nginx\nimagePullPolicy: IfNotPresent\nname: nginx\nresources: {}\ndnsPolicy: ClusterFirst\nenableServiceLinks: true\nnodeName: workstation1 # (1)\n</code></pre> <ol> <li>Change me, select a non-egress gateway node in your cluster</li> </ol>"},{"location":"usage/Install/#create-egresspolicy","title":"Create EgressPolicy","text":"<p>By creating an EgressPolicy CR, you can control which Pod accesses which address needs to go through the egress gateway.</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\nname: mock-app\nspec:\nappliedTo:\npodSelector:\nmatchLabels:             # (1)\napp: mock-app\ndestSubnet:\n- 10.6.1.92/32             # (2)\n</code></pre> <ol> <li>Select Pods that need to perform Egress operations by setting <code>matchLabels</code>.</li> <li>By setting <code>destSubnet</code>, only matched Pods will perform Egress operations when accessing a specific subnet.</li> </ol> <p>Now, traffic from mock-app accessing 10.6.1.92 will be forwarded through the egress gateway.</p>"},{"location":"usage/Install/#test","title":"Test","text":"<p>We can see that the IP that the mock-app sees on the other side when it accesses the external service is the IP address of the EgressGateway.</p> <pre><code>kubectl exec -it mock-app bash\n$ curl 10.6.1.92:8080\nRemote IP: 10.6.1.60\n</code></pre>"},{"location":"usage/NamespaceDefaultEgressGateway/","title":"Namespace level Default EgressGateway","text":""},{"location":"usage/NamespaceDefaultEgressGateway/#introduction","title":"Introduction","text":"<p>Setting a default EgressGateway for a namespace simplifies the process of specifying the EgressGateway name when using EgressPolicy under the namespace. The priority of the namespace level default EgressGateway is higher than the cluster level default EgressGateway. In other words, when a namespace level default gateway is specified, the tenant's default settings will be used first. If the namespace does not have a default gateway set, the cluster's default settings will be used.</p>"},{"location":"usage/NamespaceDefaultEgressGateway/#requirements","title":"Requirements","text":"<ul> <li>EgressGateway component is installed.</li> <li>An EgressGateway CR has been created.</li> </ul>"},{"location":"usage/NamespaceDefaultEgressGateway/#steps","title":"Steps","text":"<ol> <li> <p>Use the following command to specify the default EgressGateway name for the tenant:</p> <pre><code>kubectl label ns default spidernet.io/egressgateway-default=egressgateway\n</code></pre> </li> <li> <p>Use the following definition to create an EgressPolicy, ignoring the definition of the <code>spec.egressGatewayName</code> field:</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\nname: mock-app\nspec:\nappliedTo:\npodSelector:\nmatchLabels:\napp: mock-app\ndestSubnet:\n- 10.6.1.92/32\n</code></pre> </li> <li> <p>Run the following command again to confirm that the EgressPolicy has been set to the default EgressGateway:</p> <pre><code>$ kubectl get egresspolicies mock-app -o yaml\napiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\n  creationTimestamp: \"2023-08-09T10:54:34Z\"\ngeneration: 1\nname: mock-app\n  namespace: default\n  resourceVersion: \"6233341\"\nuid: 5692c5e6-a71b-41bd-a611-1106abd41ba3\nspec:\n  appliedTo:\n    podSelector:\n      matchLabels:\n        app: mock-app\n  destSubnet:\n  - 10.6.1.92/32\n  - fd00::92/128\n  - 172.30.40.0/21\n  egressGatewayName: egressgateway\n</code></pre> </li> </ol>"},{"location":"usage/Uninstall/","title":"Uninstall","text":"<p>To ensure that the running applications are not affected before uninstalling EgressGateway, it is recommended to perform the following steps:</p> <ol> <li> <p>Check if the number of resources related to EgressGateway is 0. Run the following commands:</p> <pre><code>kubectl get egressclusterpolicies.egressgateway.spidernet.io -o name | wc -l\nkubectl get egresspolicies.egressgateway.spidernet.io -o name | wc -l\nkubectl get egressgateways.egressgateway.spidernet.io -o name | wc -l\n</code></pre> <p>These commands will output the number of EgressGateway-related EgressClusterPolicy, EgressPolicy, and EgressGateway resources. If the output result is 0, it means there are no resources associated with EgressGateway. If the output result is not 0, further processing is needed to ensure that the uninstall operation does not affect the ongoing business applications.</p> <p>If the output is not 0, you should continue with the following commands. Otherwise, skip to step 2.</p> <pre><code>kubectl get egressclusterpolicies.egressgateway.spidernet.io\nkubectl get egresspolicies.egressgateway.spidernet.io -o wide\nkubectl get egressgateways.egressgateway.spidernet.io\n</code></pre> <p>For example, if you find there are still resources of EgressPolicies not deleted, you should check the resource details:</p> <pre><code>kubectl get egresspolicies &lt;resource-name&gt; --namespace &lt;resource-namespace&gt; -o yaml\n</code></pre> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\nname: ns-policy\nnamespace: default\nspec:\nappliedTo:\npodSelector:\nmatchLabels:\napp: mock-app\negressGatewayName: egressgateway\nstatus:\neip:\nipv4: 10.6.1.55\nipv6: fd00::55\nnode: workstation2\n</code></pre> <p>Ensure that deleting will not affect business applications by searching for <code>appliedTo.podSelector</code>, then execute the following command to delete:</p> <pre><code>kubectl delete egresspolicies &lt;resource-name&gt; --namespace &lt;resource-namespace&gt;\n</code></pre> </li> <li> <p>Query the EgressGateway installed in the current cluster. Run the following command:</p> <pre><code>helm ls -A | grep -i egress\n</code></pre> <p>This will output the name, namespace, version, and other information of the EgressGateway installed in the current cluster.</p> </li> <li> <p>Uninstall EgressGateway. If you are sure you want to uninstall EgressGateway, you can run the following command:</p> <pre><code>helm uninstall &lt;egressgateway-name&gt; --namespace &lt;egressgateway-namespace&gt;\n</code></pre> <p>Replace <code>&lt;egressgateway-name&gt;</code> with the name of the EgressGateway you want to uninstall, and replace <code>&lt;egressgateway-namespace&gt;</code> with the namespace where EgressGateway is located.</p> <p>It is worth noting that before uninstalling EgressGateway, it is recommended to back up related data and ensure that the uninstall operation does not affect the ongoing business applications.</p> </li> <li> <p>During the uninstallation process, sometimes the EgressTunnels CRD of EgressGateway may remain in a waiting state for deletion. If you encounter this situation, you can try using the following command to resolve the issue:</p> <pre><code>kubectl patch crd egresstunnels.egressgateway.spidernet.io -p '{\"metadata\":{\"finalizers\": []}}' --type=merge\n</code></pre> <p>This command removes the finalizer in the EgressGateway CRD, allowing Kubernetes to delete it. This issue is caused by the controller-manager, and we are monitoring the Kubernetes team's progress on fixing it.</p> </li> </ol>"},{"location":"usage/Upgrade/","title":"Upgrade","text":"<p>This document will guide you on how to use the <code>helm upgrade</code> command to upgrade EgressGateway.</p>"},{"location":"usage/Upgrade/#basic-command-format","title":"Basic command format","text":"<pre><code>helm upgrade [RELEASE] [CHART] [flags]\n</code></pre> <p>Here, <code>[RELEASE]</code> represents the application name set during installation, <code>[CHART]</code> refers to the chart, and <code>[flags]</code> can specify additional parameters. To learn more about the parameters for <code>helm upgrade</code>, please refer to the helm upgrade page.</p>"},{"location":"usage/Upgrade/#version-upgrade","title":"Version upgrade","text":"<p>Follow these steps to perform a version upgrade:</p> <ol> <li> <p>Before upgrading, run the following command to update the local Chart to the latest version:</p> <pre><code>helm repo update\n</code></pre> </li> <li> <p>View the latest version:</p> <pre><code>helm search repo egressgateway\n</code></pre> </li> <li> <p>Execute the upgrade command:</p> <pre><code>helm upgrade \\\negress \\\negressgateway/egressgateway \\\n--reuse-values \\\n--version [version]\n</code></pre> </li> </ol> <p>Replace <code>[version]</code> with the version you want to update.</p>"},{"location":"usage/Upgrade/#configuration-upgrade","title":"Configuration upgrade","text":"<p>Follow these steps to perform a configuration upgrade:</p> <ol> <li> <p>To view the available values parameters, visit the values documentation.</p> </li> <li> <p>Update the configuration using the <code>--set</code> flags. The following example shows how to change the egress agent log level to debug level. By using the <code>--reuse-values</code> parameter, you can reuse the values from the previous release and merge any overrides from the command line.</p> <pre><code>helm upgrade \\\negress \\\negressgateway/egressgateway \\\n--set agent.debug.logLevel=debug \\\n--reuse-values\n</code></pre> </li> </ol>"},{"location":"usage/_feature_example_zh/","title":"\u67d0\u529f\u80fd","text":""},{"location":"usage/_feature_example_zh/#_2","title":"\u4ecb\u7ecd","text":"<p>\u672c\u6587\u4e3a\u4e86\u6f14\u793a\u4ec0\u4e48\uff0c\u5b83\u7684\u5e94\u7528\u573a\u666f</p>"},{"location":"usage/_feature_example_zh/#_3","title":"\u9879\u76ee\u529f\u80fd","text":"<p>\u672c\u9879\u76ee\u6709\u4ec0\u4e48\u529f\u80fd\uff0c\u5b83\u4e3a\u4ec0\u4e48\u80fd\u89e3\u51b3\u95ee\u9898\uff0c\u529f\u80fd\u7684\u5e94\u7528\u573a\u666f\uff0c\u529f\u80fd\u5b9e\u65bd\u7684\u9650\u5236\u6709\u54ea\u4e9b</p>"},{"location":"usage/_feature_example_zh/#_4","title":"\u5b9e\u65bd\u8981\u6c42","text":"<p>\u5b89\u88c5\u8981\u6c42\uff0c\u5982 \u5185\u6838\u9650\u5236\u3001K8S\u7248\u672c\u3001\u7b2c\u4e09\u65b9\u9879\u76ee\u7248\u672c\u7b49\uff0c\u672c\u9879\u76ee\u5b89\u88c5\u65f6\u54ea\u4e9b\u9009\u578b\u8981\u6253\u5f00\u6216\u5173\u95ed</p>"},{"location":"usage/_feature_example_zh/#_5","title":"\u6b65\u9aa4","text":"<p>step by step \u5c0f\u767d\u53ef\u5b9e\u65bd\uff0c\u6bcf\u4e00\u6b65\u9aa4\u7684\u7ed3\u679c\u786e\u8ba4\u548c\u72b6\u6001\u67e5\u770b(\u7528\u4e8e\u6392\u969c)\uff0c\u7279\u6b8a\u8bf4\u660e\uff0cyaml \u6709\u5bf9\u5e94\u7684\u5de5\u7a0b\u6587\u4ef6</p>"},{"location":"usage/_install_example_zh/","title":"\u5b89\u88c5\u6587\u6863","text":""},{"location":"usage/_install_example_zh/#_2","title":"\u4ecb\u7ecd","text":"<p>\u672c\u6587\u8bf4\u660e\u4e3a\u4e86\u5b89\u88c5\u51fa\u4ec0\u4e48\u6837\u7684\u4e00\u5957\u96c6\u7fa4\uff0c\u5b83\u7684\u4ef7\u503c\u662f\u4ec0\u4e48</p>"},{"location":"usage/_install_example_zh/#_3","title":"\u5b9e\u65bd\u8981\u6c42","text":"<p>\u5b89\u88c5\u8981\u6c42\uff0c\u5982 \u5185\u6838\u9650\u5236\u3001K8S\u7248\u672c\u3001\u7b2c\u4e09\u65b9\u9879\u76ee\u7248\u672c\u7b49</p>"},{"location":"usage/_install_example_zh/#_4","title":"\u6b65\u9aa4","text":"<p>step by step \u5c0f\u767d\u53ef\u5b9e\u65bd\uff0c\u6bcf\u4e00\u6b65\u9aa4\u7684\u7ed3\u679c\u786e\u8ba4\u548c\u72b6\u6001\u67e5\u770b\uff0c\u7279\u6b8a\u8bf4\u660e\uff0cyaml \u6709\u5bf9\u5e94\u7684\u5de5\u7a0b\u6587\u4ef6</p> <p>\u53ea\u8c08\u5b89\u88c5\uff0c\u786e\u8ba4\u5b89\u88c5\u6210\u529f\u72b6\u6001</p>"},{"location":"zh/","title":"Overview","text":"<p>EgressGateway \u9879\u76ee\u4e3a Kubernetes \u63d0\u4f9b Egress \u80fd\u529b\u3002</p> <p></p> <p>\u4ece2021\u5e74\u5f00\u59cb\uff0c\u6211\u4eec\u6536\u5230\u4e86\u4ee5\u4e0b\u53cd\u9988\u3002</p> <p>\u6709\u4e24\u4e2a\u96c6\u7fa4 A \u548c B\u3002\u96c6\u7fa4 A \u57fa\u4e8e VMWare \u5e76\u4e3b\u8981\u8fd0\u884c\u6570\u636e\u5e93\u8d1f\u8f7d\uff0c\u96c6\u7fa4 B \u662f\u4e00\u4e2a Kubernetes \u96c6\u7fa4\u3002\u96c6\u7fa4 B \u4e2d\u7684\u67d0\u4e9b\u5e94\u7528\u9700\u8981\u8bbf\u95ee\u96c6\u7fa4 A \u4e2d\u7684\u6570\u636e\u5e93\uff0c\u800c\u7f51\u7edc\u7ba1\u7406\u5458\u5e0c\u671b\u901a\u8fc7\u51fa\u53e3\u7f51\u5173\u7ba1\u7406\u96c6\u7fa4\u7684 Pods\u3002</p>"},{"location":"zh/#_1","title":"\u7279\u6027","text":"<ul> <li>\u89e3\u51b3 IPv4/IPv6 \u53cc\u6808\u8fde\u63a5\u95ee\u9898</li> <li>\u89e3\u51b3 Egress \u8282\u70b9\u7684\u9ad8\u53ef\u7528\u6027\u95ee\u9898</li> <li>\u5141\u8bb8\u8fc7\u6ee4 Pods \u7684 Egress \u7b56\u7565\uff08\u76ee\u6807 CIDR\uff09</li> <li>\u5141\u8bb8\u8fc7\u6ee4 Egress \u5e94\u7528\uff08Pods\uff09</li> <li>\u53ef\u7528\u4e8e\u8f83\u4f4e\u5185\u6838\u7248\u672c</li> <li>\u652f\u6301\u591a\u4e2a\u51fa\u53e3\u7f51\u5173\u5b9e\u4f8b</li> <li>\u652f\u6301\u79df\u6237\u7ea7\u522b\u7684 Egress IP</li> <li>\u652f\u6301\u81ea\u52a8\u68c0\u6d4b\u96c6\u7fa4\u6d41\u91cf\u7684 Egress \u7f51\u5173\u7b56\u7565</li> <li>\u652f\u6301\u547d\u540d\u7a7a\u95f4\u9ed8\u8ba4 Egress \u5b9e\u4f8b</li> </ul>"},{"location":"zh/#_2","title":"\u517c\u5bb9\u6027","text":"<ul> <li>Calico</li> </ul>"},{"location":"zh/#crds","title":"CRDs","text":"<ul> <li>EgressTunnel</li> <li>EgressGateway</li> <li>EgressPolicy</li> <li>EgressClusterPolicy</li> <li>EgressEndpointSlice</li> <li>EgressClusterEndpointSlice</li> <li>EgressClusterInfo</li> </ul> <p>\u4f60\u53ef\u4ee5\u8ddf\u968f\u8d77\u6b65\u6307\u5357\u642d\u5efa\u4f60\u81ea\u5df1\u7684\u6d4b\u8bd5\u73af\u5883\uff5e</p>"},{"location":"zh/#develop","title":"Develop","text":"<p>\u53c2\u8003\u5f00\u53d1\u6587\u6863\u3002</p>"},{"location":"zh/#license","title":"License","text":"<p>EgressGateway \u57fa\u4e8e Apache License\uff0cVersion 2.0\u3002\u8be6\u7ec6\u53c2\u8003 LICENSE \u67e5\u770b\u5b8c\u6574 LICENSE \u5185\u5bb9\u3002</p>"},{"location":"zh/concepts/Architecture/","title":"Architecture","text":"<p>EgressGateway \u7531\u63a7\u5236\u9762\u548c\u6570\u636e\u9762 2 \u90e8\u5206\u7ec4\u6210\uff0c\u63a7\u5236\u9762\u7531 4 \u4e2a\u63a7\u5236\u5faa\u73af\u7ec4\u6210\uff0c\u6570\u636e\u9762\u7531 3 \u4e2a\u63a7\u5236\u5faa\u73af\u7ec4\u6210\u3002\u63a7\u5236\u9762\u4ee5 Deployment \u65b9\u5f0f\u90e8\u7f72\uff0c\u652f\u6301\u591a\u526f\u672c\u9ad8\u53ef\u7528\uff0c\u6570\u636e\u9762\u4ee5 DaemonSet \u7684\u65b9\u5f0f\u90e8\u7f72\u3002\u63a7\u5236\u5faa\u73af\u5177\u4f53\u5982\u4e0b\u56fe\uff1a</p> <p></p>"},{"location":"zh/concepts/Architecture/#controller","title":"Controller","text":""},{"location":"zh/concepts/Architecture/#egresstunnel-reconcile-loop-a","title":"EgressTunnel reconcile loop (a)","text":""},{"location":"zh/concepts/Architecture/#_1","title":"\u521d\u59cb\u5316","text":"<ol> <li>\u4ece ConfigMap \u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u53cc\u6808\u5f00\u542f\u60c5\u51b5\u53ca\u5bf9\u5e94\u7684\u96a7\u9053 CIDR</li> <li>\u901a\u8fc7\u8282\u70b9\u540d\u79f0\u6839\u636e\u7b97\u6cd5\u751f\u6210\u552f\u4e00\u7684\u6807\u7b7e\u503c</li> <li>\u4f1a\u68c0\u67e5 Node \u662f\u5426\u6709\u5bf9\u5e94\u7684 EgressTunnel\uff0c\u6ca1\u6709\u7684\u8bdd\u5c31\u521b\u5efa\u5bf9\u5e94\u7684 EgressTunnel\uff0c\u4e14\u72b6\u6001\u8bbe\u7f6e\u4e3a <code>Pending</code>\u3002\u6709\u96a7\u9053 IP \u5219\u5c06 IP \u4e0e\u8282\u70b9\u7ed1\u5b9a\uff0c\u7ed1\u5b9a\u524d\u4f1a\u68c0\u67e5 IP \u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\u5219\u5c06\u72b6\u6001\u8bbe\u7f6e\u4e3a <code>Pending</code></li> </ol>"},{"location":"zh/concepts/Architecture/#egresstunnel-event","title":"EgressTunnel Event","text":"<ul> <li>Del\uff1a\u5148\u91ca\u653e\u96a7\u9053 IP\uff0c\u518d\u5220\u9664\u3002\u5982\u679c EgressTunnel \u5bf9\u5e94\u7684\u8282\u70b9\u8fd8\u5b58\u5728\uff0c\u91cd\u65b0\u521b\u5efa EgressTunnel</li> <li>Other\uff1a</li> <li>phase != <code>Init</code> || phase != <code>Ready</code>\uff1a\u5219\u5206\u914d IP\uff0c\u5206\u914d\u6210\u529f\u5c06\u72b6\u6001\u8bbe\u7f6e\u4e3a <code>Init</code>\uff0c\u5206\u914d\u5931\u8d25\u5c06\u72b6\u6001\u8bbe\u7f6e\u4e3a <code>Failed</code>\u3002\u8fd9\u91cc\u662f\u5168\u5c40\u552f\u4e00\u4f1a\u5206\u914d\u96a7\u9053 IP \u7684\u5730\u65b9</li> <li>mark != algorithm(NodeName)\uff1a\u8be5\u5b57\u6bb5\u7981\u6b62\u4fee\u6539\uff0c\u76f4\u63a5\u62a5\u9519\u8fd4\u56de</li> </ul>"},{"location":"zh/concepts/Architecture/#node-event","title":"Node Event","text":"<ul> <li>Del\uff1a\u5220\u9664\u5bf9\u5e94\u7684 EgressTunnel</li> <li>Other\uff1a</li> <li>\u8282\u70b9\u5bf9\u5e94\u7684 EgressTunnel \u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa EgressTunnel</li> <li>\u65e0\u96a7\u9053 IP\uff0c\u8bbe\u7f6e phase \u4e3a <code>Pending</code></li> <li>\u6709\u96a7\u9053 IP\uff0c\u6821\u9a8c\u96a7\u9053\u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\u5219\u8bbe\u7f6e phase \u4e3a <code>Pending</code></li> <li>\u96a7\u9053 IP \u5408\u6cd5\uff0c\u6821\u9a8c IP \u662f\u5426\u5206\u914d\u7ed9\u672c\u8282\u70b9\uff0c\u4e0d\u662f\u5219\u8bbe\u7f6e phase \u4e3a <code>Pending</code></li> <li>\u96a7\u9053 IP \u662f\u5206\u914d\u7ed9\u672c\u8282\u70b9\uff0cphase \u72b6\u6001\u4e0d\u4e3a <code>Ready</code> \u5219\u8bbe\u7f6e phase \u4e3a <code>Init</code></li> </ul>"},{"location":"zh/concepts/Architecture/#egressgateway-reconcile-loop-b","title":"EgressGateway reconcile loop (b)","text":""},{"location":"zh/concepts/Architecture/#egressgateway-event","title":"EgressGateway Event","text":"<ul> <li>Del\uff1a</li> <li>Webhook \u5224\u65ad\u662f\u5426\u8fd8\u88ab\u5176\u4ed6 Policy \u5f15\u7528\uff0c\u5982\u679c\u5b58\u5728\u5219\u4e0d\u5141\u8bb8\u5220\u9664\u3002</li> <li> <p>\u901a\u8fc7\u4e86 Webhook \u7684\u6821\u9a8c\u8bf4\u660e\u6ca1\u6709\u88ab\u5f15\u7528\uff0c\u6240\u4ee5\u7684\u89c4\u5219\u4e5f\u88ab\u6e05\u7406\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u3002</p> </li> <li> <p>Other\uff1a</p> </li> <li>EIP \u51cf\u5c11\uff0c\u5982\u679c EIP \u88ab\u5f15\u7528\uff0c\u7981\u6b62\u4fee\u6539\u3002\u5206\u914d IPV4 \u4e0e IPV6 \u65f6\uff0c\u8981\u6c42\u4e00\u4e00\u5bf9\u5e94\uff0c\u6240\u4ee5\u4e24\u8005\u7684\u4e2a\u6570\u9700\u8981\u4e00\u81f4\u3002</li> <li>\u5982\u679c nodeSelector \u88ab\u4fee\u6539\uff0c\u4ece status \u83b7\u53d6\u65e7\u7684 Node \u4fe1\u606f\uff0c\u4e0e\u6700\u65b0\u7684 Node \u8fdb\u884c\u5bf9\u6bd4\u3002\u5c06\u5220\u9664\u8282\u70b9\u4e0a\u7684 EIP \u91cd\u65b0\u5206\u914d\u5230\u65b0\u7684 Node \u4e0a\u3002\u66f4\u65b0\u5bf9\u5e94 EgressTunnel \u4e2d\u7684 EIP \u4fe1\u606f\u3002</li> </ul>"},{"location":"zh/concepts/Architecture/#egresspolicy-event","title":"EgressPolicy Event","text":"<ul> <li>Del\uff1a\u5217\u51fa EgressPolicy \u627e\u5230\u88ab\u5f15\u7528\u7684 EgressGateway\uff0c\u518d\u5bf9 EgressPolicy \u4e0e EgressGateway \u89e3\u7ed1\u3002\u89e3\u7ed1\u9700\u8981\u505a\u7684\u4e8b\u60c5\u6709\uff0c\u627e\u5230\u5bf9\u5e94\u7684 EIP \u4fe1\u606f\u3002\u5982\u679c\u4f7f\u7528\u4e86 EIP\uff0c\u5219\u5224\u65ad\u662f\u5426\u9700\u8981\u56de\u6536 EIP\u3002\u5982\u679c\u6b64\u65f6 EIP \u5df2\u7ecf\u6ca1\u6709 policy \u4f7f\u7528\uff0c\u5219\u56de\u6536 EIP\uff0c\u66f4\u65b0\u81ea\u8eab\u53ca EgressTunnel \u7684 EIP \u4fe1\u606f\u3002</li> <li>Other\uff1a</li> <li>EgressPolicy \u4e0d\u80fd\u4fee\u6539\u7ed1\u5b9a\u7684 EgressGateway\u3002\u5982\u679c\u5141\u8bb8\u4fee\u6539\uff0c\u5219\u5217\u51fa EgressGateway \u627e\u5230\u539f\u5148\u7ed1\u5b9a\u7684 EgressGateway\uff0c\u8fdb\u884c\u89e3\u7ed1\u3002\u518d\u5bf9\u65b0\u7684\u8fdb\u884c\u7ed1\u5b9a\u3002</li> <li>\u65b0\u589e EgressPolicy\uff0c\u5219\u5c06 EgressPolicy \u4e0e EgressGateway \u8fdb\u884c\u7ed1\u5b9a\uff0c\u7ed1\u5b9a\u4e2d\uff0c\u5224\u65ad\u662f\u5426\u9700\u8981\u5206\u914d EIP\u3002</li> </ul>"},{"location":"zh/concepts/Architecture/#node-event_1","title":"Node Event","text":"<ul> <li>Del\uff1a\u5217\u51fa EgressGateway \u6311\u9009\u51fa\u5728\u8be5\u8282\u70b9\u751f\u6548\u7684 EIP\uff0c\u5c06\u8fd9\u4e9b EIP \u91cd\u65b0\u5206\u914d\u5230\u65b0\u7684\u8282\u70b9\u4e0a\u3002\u66f4\u65b0 EgressGateway \u7684 eip.policy\u3002</li> <li>Other\uff1a</li> <li>NoReady \u4e8b\u4ef6\u65f6\uff0c\u76f8\u5f53\u4e8e\u89e6\u53d1\u5220\u9664\u4e8b\u4ef6\u3002</li> <li>\u6807\u7b7e\u4fee\u6539\uff0c\u901a\u8fc7\u904d\u5386 EgressGateway \u6240\u6709\u4fe1\u606f\uff0c\u662f\u5426\u6d89\u53ca nodeSelector\u3002\u5982\u679c\u65e7\u6807\u7b7e\u4e0d\u6d89\u53ca EgressPolicy\uff0c\u5219\u4e0d\u505a\u4efb\u4f55\u5904\u7406\u3002\u5982\u679c\u6709\u6d89\u53ca\uff0c\u76f8\u5f53\u4e8e\u89e6\u53d1\u4e86\u5220\u9664\u4e8b\u4ef6\u3002\u5982\u679c\u65b0\u7684\u6807\u7b7e\u7b26\u5408 EgressGateway \u6761\u4ef6\uff0c\u5219\u66f4\u65b0\u5bf9\u5e94\u7684 EgressGateway \u7684 status \u4fe1\u606f\u3002</li> </ul>"},{"location":"zh/concepts/Architecture/#egresspolicy-eip","title":"EgressPolicy \u9009\u7f51\u5173\u8282\u70b9\u53ca EIP \u5206\u914d\u903b\u8f91","text":"<p>\u4e00\u4e2a EgressPolicy \u4f1a\u6839\u636e\u9009\u7f51\u5173\u8282\u70b9\u7684\u7b56\u7565\uff0c\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u7f51\u5173\u8282\u70b9\u3002\u7136\u540e\u6839\u636e\u662f\u5426\u4f7f\u7528 EIP\uff0c\u6765\u51b3\u5b9a\u662f\u5426\u5206\u914d EIP\u3002\u5206\u914d\u7684 EIP \u5c06\u7ed1\u5b9a\u5230\u6240\u9009\u7684\u7f51\u5173\u8282\u70b9\u4e0a\u3002</p> <p>\u5206\u914d\u903b\u8f91\u90fd\u662f\u4ee5\u5355\u4e2a EgressGateway \u4e3a\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u6240\u6709\u7684 EgressGateway\u3002</p>"},{"location":"zh/concepts/Architecture/#egresspolicy","title":"EgressPolicy \u9009\u7f51\u5173\u8282\u70b9\u7684\u6a21\u5f0f","text":"<ul> <li>\u5e73\u5747\u9009\u62e9\uff1a\u5f53\u9700\u8981\u9009\u62e9\u7f51\u5173\u8282\u70b9\u65f6\uff0c\u9009\u62e9\u4f5c\u4e3a\u7f51\u5173\u8282\u70b9\u6700\u5c11\u7684\u4e00\u4e2a\u8282\u70b9\u3002</li> <li>\u6700\u5c11\u8282\u70b9\u9009\u62e9\uff1a\u5c3d\u91cf\u9009\u540c\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u7f51\u5173\u8282\u70b9\u3002</li> <li>\u9650\u5ea6\u9009\u62e9\uff1a\u4e00\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u80fd\u6210\u4e3a\u51e0\u4e2a EgressPolicy \u7684\u7f51\u5173\u8282\u70b9\uff0c\u9650\u5ea6\u53ef\u4ee5\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 5\u3002\u6ca1\u6709\u8fbe\u5230\u9650\u5ea6\u524d\uff0c\u5219\u4f18\u9009\u9009\u62e9\u8be5\u8282\u70b9\uff0c\u8fbe\u5230\u9650\u5ea6\u5c31\u5148\u9009\u5176\u4ed6\u7684\u8282\u70b9\uff0c\u5982\u679c\u90fd\u8fbe\u5230\u4e86\u9650\u5ea6\uff0c\u5219\u518d\u968f\u673a\u9009\u62e9\u3002</li> </ul>"},{"location":"zh/concepts/Architecture/#eip","title":"EIP \u5206\u914d\u903b\u8f91","text":"<ul> <li>\u968f\u673a\u5206\u914d\uff1a\u5728\u6240\u6709\u7684 EIP \u4e2d\u968f\u673a\u9009\u62e9\u4e00\u4e2a\uff0c\u4e0d\u7ba1\u8be5 EIP \u662f\u5426\u5df2\u7ecf\u5206\u914d</li> <li>\u4f18\u5148\u4f7f\u7528\u672a\u5206\u914d\u7684 EIP\uff1a\u5148\u4f7f\u7528\u672a\u5206\u914d\u7684 EIP\uff0c\u5982\u679c\u90fd\u4f7f\u7528\u4e86\u5219\u518d\u968f\u673a\u5206\u914d\u4e00\u4e2a\u5df2\u4f7f\u7528\u7684 EIP</li> <li>\u9650\u5ea6\u9009\u62e9\uff1a\u4e00\u4e2a EIP \u6700\u591a\u53ea\u80fd\u88ab\u51e0\u4e2a EgressPolicy \u4f7f\u7528\uff0c\u9650\u5ea6\u53ef\u4ee5\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 5\uff0c\u6ca1\u6709\u8fbe\u5230\u9650\u5ea6\u524d\uff0c\u5219\u5148\u5206\u914d\u8be5 EIP\uff0c\u8fbe\u5230\u9650\u5ea6\u5219\u9009\u5176\u4ed6\u7684 EIP\u3002\u90fd\u8fbe\u5230\u9650\u5ea6\u5219\u968f\u673a\u5206\u914d\u3002</li> </ul>"},{"location":"zh/concepts/Architecture/#eip_1","title":"EIP \u56de\u6536\u903b\u8f91","text":"<p>\u5f53\u4e00\u4e2a EIP \u6ca1\u6709\u88ab\u4f7f\u7528\u65f6\uff0c\u5219\u56de\u6536\u8be5 EIP\uff0c\u56de\u6536\u5c31\u662f\u5728 <code>eips</code> \u4e2d\u5c06\u8be5 EIP \u5b57\u6bb5\u5220\u9664\u3002</p>"},{"location":"zh/concepts/Architecture/#egressclusterinfo-reconcile-loop-d","title":"EgressClusterInfo reconcile loop (d)","text":""},{"location":"zh/concepts/Architecture/#node-event_2","title":"Node Event","text":"<ul> <li>Create\uff1anode \u521b\u5efa\u65f6\uff0c\u5c06 node \u7684 ip \u81ea\u52a8\u6dfb\u52a0\u5230 egressclusterinfos CR <code>status.egressIgnoreCIDR.nodeIP</code> \u4e2d\u3002</li> <li>Update\uff1anode ip \u6709\u66f4\u65b0\u65f6\uff0c\u5c06 node \u7684 ip \u81ea\u52a8\u66f4\u65b0\u5230 egressclusterinfos CR <code>status.egressIgnoreCIDR.nodeIP</code> \u4e2d\u3002</li> <li>Delete\uff1anode \u88ab\u5220\u9664\u65f6\uff0c\u5c06 node \u7684 ip \u4ece egressclusterinfos CR <code>status.egressIgnoreCIDR.nodeIP</code> \u4e2d\u5220\u9664\u3002</li> </ul>"},{"location":"zh/concepts/Architecture/#calico-ippool-event","title":"Calico IPPool Event","text":"<p>\u5f53 egressgateway \u914d\u7f6e\u6587\u4ef6\u7684 <code>egressIgnoreCIDR.autoDetect.podCIDR</code> \u4e3a \"calico\" \u65f6\uff0c\u76d1\u542c Calico \u7684 IPPool Event\u3002 - Create\uff1aCalico IPPool \u521b\u5efa\u65f6\uff0c\u5c06 IPPool CIDR \u81ea\u52a8\u6dfb\u52a0\u5230 EgressClusterInfo CR <code>status.egressIgnoreCIDR.podCIDR</code> \u4e2d\u3002 - Update\uff1acalico IPPool \u6709\u66f4\u65b0\u65f6\uff0c\u5c06 IPPool CIDR \u81ea\u52a8\u66f4\u65b0\u5230 EgressClusterInfo CR <code>status.egressIgnoreCIDR.podCIDR</code> \u4e2d\u3002 - Delete\uff1acalico IPPool \u88ab\u5220\u9664\u65f6\uff0c\u5c06 IPPool CIDR \u4ece EgressClusterInfo CR <code>status.egressIgnoreCIDR.podCIDR</code> \u4e2d\u5220\u9664\u3002</p>"},{"location":"zh/concepts/Architecture/#_2","title":"\u914d\u7f6e\u6587\u4ef6","text":"<p>\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a</p> <pre><code>feature:\negressIgnoreCIDR:\nautoDetect:\npodCIDR: \"\"      # 1\nclusterIP: true  # 2\nnodeIP: true     # 3\ncustom:\n- \"10.6.1.0/24\"\n</code></pre> <ol> <li><code>podCIDR</code>\uff0c\u76ee\u524d\u652f\u6301 <code>calico</code>\u3001<code>k8s</code>\u3002\u9ed8\u8ba4\u4e3a <code>k8s</code>\u3002</li> <li><code>clusterIP</code>\uff0c\u652f\u6301\u8bbe\u7f6e\u4e3a Service CIDR \u81ea\u52a8\u68c0\u6d4b\u3002</li> <li><code>nodeIP</code>\uff0c\u652f\u6301\u8bbe\u7f6e\u4e3a Node IP \u81ea\u52a8\u68c0\u6d4b\u3002</li> </ol>"},{"location":"zh/concepts/Datapath/","title":"Datapath","text":"<p>\u5bf9\u9700\u8981\u751f\u6548\u7684\u89c4\u5219\u5206\u4e3a\u4e09\u7c7b\uff1a\u6240\u6709\u8282\u70b9\uff0c\u76f8\u5bf9\u4e8e EgressGatewayPolicy \u7684\u300c\u7f51\u5173\u8282\u70b9\u300d\u548c\u300c\u975e\u7f51\u5173\u8282\u70b9\u300d\u3002\u53ea\u6709\u5f53\u4e1a\u52a1 Pod \u8c03\u5ea6\u5230\u7684\u300c\u975e\u7f51\u5173\u8282\u70b9\u300d\uff0c\u8be5\u8282\u70b9\u4e0a\u7684\u89c4\u5219\u624d\u4f1a\u751f\u6548\u3002</p>"},{"location":"zh/concepts/Datapath/#_1","title":"\u6240\u6709\u8282\u70b9","text":"<ol> <li>\u5404\u8282\u70b9\u4e4b\u95f4\uff0c\u96a7\u9053\u9700\u8981\u6253\u901a\u7684\u89c4\u5219\u5c31\u5c31\u4e0d\u4e00\u4e00\u5c55\u5f00\uff1b</li> <li> <p>\u5c06 policy \u547d\u4e2d\u7684\u6d41\u91cf\uff0c\u91cd\u65b0\u6253\u6807\u7b7e\u3002\u8282\u70b9\u7b2c\u4e00\u6b21\u53d8\u6210\u7f51\u5173\u8282\u70b9\u65f6\u66f4\u65b0\uff0c\u6216\u8005\u8282\u70b9 join \u65f6\u505a\u4e00\u6b21\uff0c\u540e\u9762\u4e0d\u66f4\u65b0\uff1b    <pre><code>iptables -t mangle -N EGRESSGATEWAY-RESET-MARK\niptables -t mangle -I FORWARD 1  -j EGRESSGATEWAY-RESET-MARK -m comment --comment \"egress gateway: mark egress packet\"\niptables -t mangle -A EGRESSGATEWAY-RESET-MARK \\\n-m mark --mark $NODE_MARK/0x26000000 \\\n-j MARK --set-mark 0x12000000 \\\n-m comment --comment \"egress gateway: change mark\"\n</code></pre></p> </li> <li> <p>\u4fdd\u6301 policy \u547d\u4e2d\u6d41\u91cf\u7684\u6807\u7b7e\u3002\u76f4\u63a5\u521b\u5efa\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\uff1b    <pre><code>iptables -t filter -I FORWARD 1 -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: keep mark\"\niptables -t filter -I OUTPUT 1 -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: keep mark\"\niptables -t mangle -I POSTROUTING 1 -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: keep mark\"\n</code></pre></p> </li> <li> <p>\u805a\u5408 policy \u547d\u4e2d\u6d41\u91cf\u6253\u6807\u7b7e\u7684\u94fe\u3002\u76f4\u63a5\u521b\u5efa\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\uff1b    <pre><code>iptables -t mangle -N EGRESSGATEWAY-MARK-REQUEST\n\niptables -t mangle -I PREROUTING 1 -j EGRESSGATEWAY-MARK-REQUEST -m comment --comment \"egress gateway: mark egress packet\"\n</code></pre></p> </li> <li> <p>\u805a\u5408\u4e0d\u9700\u8981\u505a SNAT \u89c4\u5219\u7684\u94fe\u3002\u76f4\u63a5\u521b\u5efa\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\uff1b    <pre><code>iptables -t nat -N EGRESSGATEWAY-NO-SNAT\n\niptables -t nat -I POSTROUTING 1  -j EGRESSGATEWAY-NO-SNAT -m comment --comment \"egress gateway: no snat\"\niptables -t nat -A EGRESSGATEWAY-NO-SNAT -m mark --mark 0x12000000 -j ACCEPT -m comment --comment \"egress gateway: no snat\"\n</code></pre></p> </li> <li> <p>\u805a\u5408\u9700\u8981\u505a SNAT \u89c4\u5219\u7684\u94fe\u3002\u76f4\u63a5\u521b\u5efa\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\u3002    <pre><code>iptables -t nat -N EGRESSGATEWAY-SNAT-EIP\n\n# \u9700\u8981\u5728\u4e0d\u9700\u8981 SNAT \u7684\u89c4\u5219\u540e\u9762\u63d2\u5165\uff0c\u624d\u80fd\u4fdd\u8bc1\u8be5\u94fe\u5728\u6700\u524d\u9762\niptables -t nat -I POSTROUTING 1  -j EGRESSGATEWAY-SNAT-EIP -m comment --comment \"egress gateway: snat EIP\"\n</code></pre></p> </li> <li> <p>egress-ingore-cidr \u5f53 EgressGatewayPolicy \u7684 <code>destSubnet</code> \u5b57\u6bb5\u4e3a\u7a7a\u65f6\uff0c\u6570\u636e\u9762\u5c06\u4f1a\u81ea\u52a8\u5339\u914d EgressClusterStatus CR \u4e2d\u7684 CIDR \u4e4b\u5916\u7684\u6d41\u91cf\uff0c\u5e76\u5c06\u5176\u8f6c\u53d1\u5230 Egress \u7f51\u5173\u3002     ```shell    IPSET_RULE_DEST_NAME=egress-ingore-cidr</p> </li> </ol> <p>ipset x $IPSET_RULE_DEST_NAME</p> <p>ipset create $IPSET_RULE_DEST_NAME hash:net</p> <p>ipset add $IPSET_RULE_DEST_NAME 10.6.105.150/32    ```</p>"},{"location":"zh/concepts/Datapath/#eip-egress-gateway","title":"\u76f8\u5bf9\u4e8e EIP \u7684\u975e Egress Gateway \u8282\u70b9","text":"<ol> <li> <p>policy \u547d\u4e2d\u7684\u6e90 IP\u3001\u76ee\u7684 IP \u7684 ipset\uff1b    <pre><code>IPSET_RULE_DEST_NAME=egress-dest-uuid\n\nipset x $IPSET_RULE_DEST_NAME\nipset create $IPSET_RULE_DEST_NAME hash:net\n\nipset add $IPSET_RULE_DEST_NAME 10.6.105.150/32\n\nIPSET_RULE_SRC_NAME=egress-src-uuid\n\nipset x $IPSET_RULE_SRC_NAME\nipset create $IPSET_RULE_SRC_NAME hash:net\n\nipset add $IPSET_RULE_SRC_NAME 172.29.234.173/32\n</code></pre></p> </li> <li> <p>policy \u547d\u4e2d\u7684\u6d41\u91cf\u6253\u6807\u7b7e\uff0c\u4fdd\u8bc1\u80fd\u4ece\u96a7\u9053\u8d70\u3002\u5176\u4e2d NODE_MARK \u7684\u503c\u6839\u636e policy \u5bf9\u5e94\u7684 EIP \u6240\u5728\u8282\u70b9\u51b3\u5b9a\u3002    <pre><code>iptables -A EGRESSGATEWAY-MARK-REQUEST -t mangle -m conntrack --ctdir ORIGINAL \\\n-m set --match-set $IPSET_RULE_DEST_NAME dst  \\\n-m set --match-set $IPSET_RULE_SRC_NAME src  \\\n-j MARK --set-mark $NODE_MARK -m comment --comment \"rule uuid: mark request packet\"\n</code></pre></p> </li> <li> <p>\u7b56\u7565\u8def\u7531\u89c4\u5219    <pre><code>ip rule add fwmark $NODE_MARK table $TABLE_NUM\n</code></pre></p> </li> <li> <p>\u9002\u914d Weave \u907f\u514d\u505a SNAT \u6210 Egress \u96a7\u9053\u7684 IP\u3002\u505a\u6210\u5f00\u5173    <pre><code>iptables -t nat -A EGRESSGATEWAY-NO-SNAT \\\n-m set --match-set $IPSET_RULE_DEST_NAME dst  \\\n-m set --match-set $IPSET_RULE_SRC_NAME src  \\\n-j ACCEPT -m comment --comment \"egress gateway: weave does not do SNAT\"\n</code></pre></p> </li> </ol>"},{"location":"zh/concepts/Datapath/#eip-egress-gateway_1","title":"\u76f8\u5bf9\u4e8e EIP \u7684 Egress Gateway \u8282\u70b9","text":"<ol> <li> <p>policy \u547d\u4e2d\u7684\u6e90 IP\u3001\u76ee\u7684 IP \u7684 ipset\uff1b    <pre><code>IPSET_RULE_DEST_NAME=egress-dest-uuid\n\nipset x $IPSET_RULE_DEST_NAME\nipset create $IPSET_RULE_DEST_NAME hash:net\n\nipset add $IPSET_RULE_DEST_NAME 10.6.105.150/32\n\nIPSET_RULE_SRC_NAME=egress-src-uuid\n\nipset x $IPSET_RULE_SRC_NAME\nipset create $IPSET_RULE_SRC_NAME hash:net\n\nipset add $IPSET_RULE_SRC_NAME 172.29.234.173/32\n</code></pre></p> </li> <li> <p>policy \u547d\u4e2d\u7684\u6d41\u91cf\u3002\u51fa\u7f51\u5173\u65f6\u505a SNAT\u3002\u5b9e\u65f6\u66f4\u65b0\u3002    <pre><code>iptables -t nat -A EGRESSGATEWAY-SNAT-EIP \\\n-m set --match-set $IPSET_RULE_SRC_NAME src \\\n-m set --match-set $IPSET_RULE_DST_NAME dst \\\n-j SNAT --to-source $EIP\n</code></pre></p> </li> </ol>"},{"location":"zh/concepts/Datapath/#_2","title":"\u5176\u4ed6","text":"<ol> <li>NODE_MARK\uff1a\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\uff0c\u5168\u5c40\u552f\u4e00\u7684\u6807\u7b7e\u3002\u6807\u7b7e\u7531\u524d\u7f00 + \u552f\u4e00\u6807\u8bc6\u7b26\u751f\u6210\u3002\u6807\u7b7e\u683c\u5f0f\u5982\u4e0b <code>NODE_MARK = 0x26 + value + 0000</code>\uff0c<code>value</code> \u4e3a 16 \u4f4d\uff0c\u652f\u6301\u7684\u8282\u70b9\u603b\u6570\u4e3a <code>2^16</code>\u3002</li> <li>TABLE_NUM\uff1a</li> <li>\u7531\u4e8e\u6bcf\u4e2a\u4e3b\u673a\u53ea\u80fd [0, 255] \u5f20\u8def\u7531\u8868\uff08\u5176\u4e2d 0\u3001253\u3001254\u3001255 \u5df2\u88ab\u7cfb\u7edf\u4f7f\u7528\uff09\uff0c\u8d85\u51fa\u8868\u7684\u5f20\u6570\u65f6\uff0c\u4f1a\u5bfc\u81f4\u8282\u70b9\u8def\u7531\u6ca1\u6cd5\u8ba1\u7b97\uff0c\u4ece\u800c\u8282\u70b9\u5931\u8054\u3002\u800c\u4e14\u8868\u540d\u4e0e\u8868\u7684 ID \u5339\u914d\uff0c\u5982\u679c\u6ca1\u6709\u5339\u914d\uff0c\u5219\u5185\u6838\u4f1a\u968f\u673a\u5206\u914d\u3002\u6240\u4ee5\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\uff0c\u63a7\u5236\u8868\u7684\u7684\u5f20\u6570\uff08n \u8868\u793a\uff0c\u9ed8\u8ba4\u503c\u4e3a 100\uff09\u4e5f\u5c31\u662f\u7f51\u5173\u8282\u70b9\u7684\u4e0a\u9650\uff0c\u53ef\u4ee5\u901a\u8fc7\u53d8\u91cf\u8bbe\u7f6e\u3002</li> <li>TABLE_NUM \u7b97\u6cd5\uff1a\u7528\u6237\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u8d77\u59cb\u503c\uff08s \u8868\u793a\uff0c\u9ed8\u8ba4\u503c\u4e3a 3000\uff09\uff0c\u5219\u8868\u540d\u7684\u8303\u56f4\u4e3a [s, (s+n)]\uff0c\u7528\u6237\u9700\u8981\u4fdd\u8bc1 [s, (s+n)] \u7684\u8868\u540d\u6ca1\u6709\u88ab\u5360\u7528\u3002\u968f\u673a\u4ece [s, (s+n)] \u53d6\u4e00\u4e2a\u8d77\u59cb\u503c\uff0c\u4f9d\u6b21\u589e\u52a0\uff0c\u73af\u5f62\u53d6\u503c\uff0c\u76f4\u5230\u83b7\u5f97\u4e00\u4e2a\u672c\u8282\u70b9\u672a\u4f7f\u7528\u7684\u8868\u540d\uff0c\u672a\u627e\u5230\u5219\u62a5\u9519\u3002</li> </ol>"},{"location":"zh/reference/EgressClusterEndpointSlice/","title":"CRD EgressClusterEndpointSlice","text":"<p>EgressClusterEndpointSlice CRD \u7528\u4e8e\u805a\u5408 EgressClusterPolicy \u6240\u5339\u914d\u4e2d\u7684 Pods \u5730\u5740\u4fe1\u606f\uff0c\u6b64\u8d44\u6e90\u4ec5\u4f9b\u5185\u90e8\u4f7f\u7528\uff0c\u7528\u4e8e\u63d0\u5347\u63a7\u5236\u9762\u7684\u6027\u80fd\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressClusterEndpointSlice\nmetadata:\ngenerateName: cluster-policy-\nlabels:\nspidernet.io/policy-name: cluster-policy          # (1)\nname: cluster-policy-zp667\nownerReferences:\n- apiVersion: egressgateway.spidernet.io/v1beta1  # (2)\nblockOwnerDeletion: true\ncontroller: true\nkind: EgressClusterPolicy\nname: cluster-policy\nuid: fdca1dd5-9c3b-4d58-b043-451e10f15ea8\nendpoints:                                             # (3)\n- ipv4:\n- 10.21.60.74                                    # (4)\nipv6:\n- fd00:21::5328:9c2:3579:8cca                    # (5)\nnode: workstation3                                 # (6)\nns: ns1                                            # (7)\npod: ns2-mock-app-5c4cd6bb87-g4fdj                 # (8)\n</code></pre> <ol> <li>\u6b64\u6807\u7b7e\u503c\u8868\u793a EgressClusterEndpointSlice \u6240\u5c5e\u7684 EgressClusterPolicy\u3002</li> <li>\u901a\u8fc7\u4f7f\u7528 <code>ownerReferences</code>\uff0c\u8be5 CRD \u4e0e\u5176\u7236\u8d44\u6e90\u5173\u8054\uff0c\u5b9e\u73b0 EgressClusterPolicy \u5220\u9664\u65f6\u81ea\u52a8\u56de\u6536 EgressClusterEndpointSlice \u529f\u80fd\u3002</li> <li>EgressClusterEndpointSlice \u5bf9\u8c61\u7528\u4e8e\u6c47\u603b EgressClusterPolicy \u5339\u914d\u5230\u7684 Pods \u5730\u5740\u4fe1\u606f\uff0c\u9ed8\u8ba4\u5728\u8d85\u8fc7 100 \u4e2a\u5339\u914d\u7ed3\u679c\u65f6\uff0c\u5c06\u521b\u5efa\u65b0\u7684 EgressClusterEndpointSlice\u3002</li> <li>Pods \u7684 IPv4 \u5730\u5740\u5217\u8868\u3002</li> <li>Pods \u7684 IPv6 \u5730\u5740\u5217\u8868\u3002</li> <li>Pods \u6240\u5728\u8282\u70b9\u7684\u4fe1\u606f\u3002</li> <li>Pods \u6240\u5c5e\u79df\u6237\u7684\u4fe1\u606f\u3002</li> <li>Pods \u7684\u540d\u79f0\u3002</li> </ol>"},{"location":"zh/reference/EgressClusterInfo/","title":"CRD EgressClusterInfo","text":"<p>EgressClusterInfo CRD \u4e3a\u4e86\u7b80\u5316 Egress \u7b56\u7565\u7684\u914d\u7f6e\uff0c\u5f15\u5165 Egress Ignore CIDR \u529f\u80fd\uff0c\u5141\u8bb8\u81ea\u52a8\u83b7\u53d6\u96c6\u7fa4\u7684 CIDR\u3002\u5f53 EgressGatewayPolicy \u7684 <code>destSubnet</code> \u5b57\u6bb5\u4e3a\u7a7a\u65f6\uff0c\u6570\u636e\u9762\u5c06\u4f1a\u81ea\u52a8\u5339\u914d EgressClusterStatus CR \u4e2d\u7684 CIDR \u4e4b\u5916\u7684\u6d41\u91cf\uff0c\u5e76\u5c06\u5176\u8f6c\u53d1\u5230 Egress \u7f51\u5173\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressClusterInfo\nmetadata:\nname: default  # 1\nspec:\nautoDetect:\nclusterIP: true # 2\nnodeIP: true # 3\npodCidrMode: auto # 4\nextraCidr: # 5\n- 10.10.10.1\nstatus:\nclusterIP: # 6\nipv4:\n- 172.41.0.0/16\nipv6:\n- fd41::/108\nextraCidr: # 7\n- 10.10.10.1\nnodeIP: # 8\negressgateway-control-plane:\nipv4:\n- 172.18.0.3\nipv6:\n- fc00:f853:ccd:e793::3\negressgateway-worker:\nipv4:\n- 172.18.0.2\nipv6:\n- fc00:f853:ccd:e793::2\negressgateway-worker2:\nipv4:\n- 172.18.0.4\nipv6:\n- fc00:f853:ccd:e793::4\npodCIDR: # 9\ndefault-ipv4-ippool:\nipv4:\n- 172.40.0.0/16\ndefault-ipv6-ippool:\nipv6:\n- fd40::/48\ntest-ippool:\nipv4:\n- 177.70.0.0/16\npodCidrMode: calico # 10\n</code></pre> <ol> <li>\u540d\u79f0\u4e3a <code>default</code>\uff0c\u7531\u7cfb\u7edf\u7ef4\u62a4\u53ea\u80fd\u521b\u5efa\u4e00\u4e2a;</li> <li><code>clusterIP</code>\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a <code>true</code>\uff0c<code>Service CIDR</code> \u4f1a\u81ea\u52a8\u68c0\u6d4b</li> <li><code>nodeIP</code>\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a <code>true</code>\uff0c\u4f1a\u81ea\u52a8\u68c0\u6d4b <code>nodeIP</code> \u76f8\u5173\u53d8\u5316\uff0c\u5e76\u52a8\u6001\u66f4\u65b0\u5230 <code>EgressClusterInfo</code> \u7684 <code>status.nodeIP</code> \u4e2d</li> <li><code>podCidrMode</code>\uff0c\u76ee\u524d\u652f\u6301 <code>k8s</code>\u3001 <code>calico</code>\u3001<code>auto</code>\u3001 <code>\"\"</code>\uff0c\u8868\u793a\u8981\u81ea\u52a8\u68c0\u6d4b\u5bf9\u5e94\u7684 podCidr\uff0c\u9ed8\u8ba4\u4e3a <code>auto</code>\uff0c\u5982\u679c\u4e3a <code>auto</code> \u8868\u793a\u81ea\u52a8\u68c0\u6d4b\u96c6\u7fa4\u4f7f\u7528\u7684 cni\uff0c \u5982\u679c\u68c0\u6d4b\u4e0d\u5230\uff0c\u5219\u4f7f\u7528 \u96c6\u7fa4\u7684 podCidr\u3002\u5982\u679c\u4e3a <code>\"\"</code> \u8868\u793a\u4e0d\u68c0\u6d4b</li> <li><code>extraCidr</code>\uff0c\u53ef\u624b\u52a8\u586b\u5199\u8981\u5ffd\u7565\u6389\u7684 <code>IP</code> \u96c6\u5408</li> <li><code>status.clusterIP</code>\uff0c\u5982\u679c <code>spec.autoDetect.clusterIP</code> \u4e3a <code>true</code>\uff0c\u5219\u81ea\u52a8\u68c0\u6d4b\u96c6\u7fa4 <code>Service CIDR</code>\uff0c\u5e76\u66f4\u65b0\u5230\u6b64\u5904</li> <li><code>status.extraCidr</code>\uff0c\u5bf9\u5e94 <code>spec.extraCidr</code> </li> <li><code>status.nodeIP</code>\uff0c\u5982\u679c <code>spec.autoDetect.nodeIP</code> \u4e3a <code>true</code>\uff0c\u5219\u81ea\u52a8\u68c0\u6d4b\u96c6\u7fa4 <code>nodeIP</code>\uff0c\u5e76\u66f4\u65b0\u5230\u6b64\u5904</li> <li><code>status.podCIDR</code>\uff0c\u5bf9\u5e94 <code>spec.autoDetect.podCidrMode</code>\uff0c\u8fdb\u884c\u76f8\u5173 <code>podCidr</code> \u7684\u66f4\u65b0</li> <li><code>status.podCidrMode</code>\uff0c\u5bf9\u5e94 <code>spec.autoDetect.podCidrMode</code> \u4e3a <code>auto</code> \u7684\u573a\u666f</li> </ol>"},{"location":"zh/reference/EgressClusterPolicy/","title":"CRD EgressClusterPolicy","text":"<p>EgressClusterPolicy CRD \u7528\u4e8e\u5b9a\u4e49\u96c6\u7fa4\u7ea7 Egress \u7b56\u7565\u89c4\u5219\uff0c\u4e0e EgressPolicy CRD \u7c7b\u4f3c\uff0c\u4f46\u589e\u52a0\u4e86 <code>spec.appliedTo.namespaceSelector</code> \u5c5e\u6027\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressClusterPolicy\nmetadata:\nname: \"policy-test\"\nspec:\npriority: 100\negressGatewayName: \"eg1\"\negressIP:\nipv4: \"\"\nipv6: \"\"\nuseNodeIP: false\nappliedTo:\npodSelector:\nmatchLabels:\napp: \"shopping\"\npodSubnet:\n- \"172.29.16.0/24\"\n- 'fd00:1/126'\nnamespaceSelector:   # 1\nmatchLabels:\napp: \"shopping\"\ndestSubnet:\n- \"10.6.1.92/32\"\n- \"fd00::92/128\"\n</code></pre> <ol> <li><code>namespaceSelector</code> \u4f7f\u7528 selector \u9009\u62e9\u5339\u914d\u7684\u547d\u540d\u7a7a\u95f4\u5217\u8868\u3002\u5728\u9009\u5b9a\u7684\u547d\u540d\u7a7a\u95f4\u8303\u56f4\u5185\uff0c\u4f7f\u7528 <code>podSelector</code> \u9009\u62e9\u5339\u914d\u7684 Pod\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u9009\u4e2d\u7684 Pod \u5e94\u7528 Egress \u7b56\u7565\u3002</li> </ol>"},{"location":"zh/reference/EgressEndpointSlice/","title":"CRD EgressEndpointSlice","text":"<p>EgressEndpointSlice CRD \u7528\u4e8e\u805a\u5408 EgressPolicy \u6240\u5339\u914d\u4e2d\u7684 Pods \u5730\u5740\u4fe1\u606f\uff0c\u6b64\u8d44\u6e90\u4ec5\u4f9b\u5185\u90e8\u4f7f\u7528\uff0c\u7528\u4e8e\u63d0\u5347\u63a7\u5236\u9762\u7684\u6027\u80fd\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressEndpointSlice\nmetadata:\ngenerateName: ns-policy-\nlabels:\nspidernet.io/policy-name: ns-policy          # (1)\nname: ns-policy-zp667\nnamespace: default\nownerReferences:\n- apiVersion: egressgateway.spidernet.io/v1beta1  # (2)\nblockOwnerDeletion: true\ncontroller: true\nkind: EgressPolicy\nname: ns-policy\nuid: fdca1dd5-9c3b-4d58-b043-451e10f15ea8\nendpoints:                                             # (3)\n- ipv4:\n- 10.21.60.74                                    # (4)\nipv6:\n- fd00:21::5328:9c2:3579:8cca                    # (5)\nnode: workstation3                                 # (6)\nns: ns1                                            # (7)\npod: ns2-mock-app-5c4cd6bb87-g4fdj                 # (8)\n</code></pre> <ol> <li>\u6b64\u6807\u7b7e\u503c\u8868\u793a EgressEndpointSlice \u6240\u5c5e\u7684 EgressPolicy\u3002</li> <li>\u901a\u8fc7\u4f7f\u7528 <code>ownerReferences</code>\uff0c\u8be5 CRD \u4e0e\u5176\u7236\u8d44\u6e90\u5173\u8054\uff0c\u5b9e\u73b0 EgressPolicy \u5220\u9664\u65f6\u81ea\u52a8\u56de\u6536 EgressEndpointSlice \u529f\u80fd\u3002</li> <li>EgressEndpointSlice \u5bf9\u8c61\u7528\u4e8e\u6c47\u603b EgressPolicy \u5339\u914d\u5230\u7684 Pods \u5730\u5740\u4fe1\u606f\uff0c\u9ed8\u8ba4\u5728\u8d85\u8fc7 100 \u4e2a\u5339\u914d\u7ed3\u679c\u65f6\uff0c\u5c06\u521b\u5efa\u65b0\u7684 EgressEndpointSlice\u3002</li> <li>Pods \u7684 IPv4 \u5730\u5740\u5217\u8868\u3002</li> <li>Pods \u7684 IPv6 \u5730\u5740\u5217\u8868\u3002</li> <li>Pods \u6240\u5728\u8282\u70b9\u7684\u4fe1\u606f\u3002</li> <li>Pods \u6240\u5c5e\u79df\u6237\u7684\u4fe1\u606f\u3002</li> <li>Pods \u7684\u540d\u79f0\u3002</li> </ol>"},{"location":"zh/reference/EgressGateway/","title":"CRD EgressGateway","text":"<p>EgressGateway CRD \u7528\u4e8e\u9009\u62e9\u4e00\u7ec4\u8282\u70b9\u4f5c\u4e3a\u96c6\u7fa4\u7684 Egress \u8282\u70b9\uff0c\u5e76\u4e3a\u8be5\u8282\u70b9\u7ec4\u914d\u7f6e Egress IP \u6c60\u3002Egress IP \u53ef\u5728\u6b64\u7ec4\u8282\u70b9\u5185\u6d6e\u52a8\u3002\u96c6\u7fa4\u7ea7\u8d44\u6e90\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressGateway\nmetadata:\nname: \"eg1\"\nspec:\nippools:                      # 1\nipv4:                       # 2\n- \"10.6.1.55\"\n- \"10.6.1.60-10.6.1.65\"\n- \"10.6.1.70/28\"\nipv6:                       # 3\n- \"\"\nipv4DefaultEIP: \"\"          # 4\nipv6DefaultEIP: \"\"          # 5\nnodeSelector:                 # 6\nselector:                   # 7\nmatchLabels:\negress: \"true\"\npolicy: \"doing\"             # 8\nstatus:                         nodeList:                     # 9\n- name: \"node1\"             # 10\nstatus: \"Ready\"           # 11\nepis:                     # 12\n- ipv4: \"10.6.1.55\"     # 13\nipv6: \"fd00::55\"      # 14\npolicies:             # 15\n- name: \"app\"         # 16\nnamespace: \"default\"  # 17\n</code></pre> <ol> <li>\u8bbe\u7f6e EgressGateway \u53ef\u4f7f\u7528\u7684 Egress IP \u6c60\u7684\u8303\u56f4\uff1b</li> <li>Egress IPv4 \u6c60\uff0c\u652f\u6301\u4e09\u79cd\u65b9\u6cd5\uff1a\u5355\u4e2a IP <code>10.6.0.1</code>\u3001\u8303\u56f4 <code>10.6.0.1-10.6.0.10</code> \u548c CIDR <code>10.6.0.1/26</code>\uff1b</li> <li>Egress IPv6 \u6c60\uff0c\u5982\u679c\u542f\u7528\u4e86\u53cc\u6808\u8981\u6c42\uff0c\u5219 IPv4 \u548c IPv6 \u7684\u6570\u91cf\u5fc5\u987b\u4e00\u81f4\uff0c\u683c\u5f0f\u4e0e IPv4 \u76f8\u540c\uff1b</li> <li>\u8981\u4f7f\u7528\u7684\u9ed8\u8ba4 IPv4 EIP\u3002\u5982\u679c EgressPolicy \u6ca1\u6709\u6307\u5b9a EIP\uff0c\u4e14 EIP \u5206\u914d\u7b56\u7565\u4e3a <code>default</code>\uff0c\u5219\u5206\u914d\u7ed9\u8be5 EgressPolicy \u7684 EIP \u5c06\u662f <code>ipv4DefaultEIP</code>\uff1b</li> <li>\u8981\u4f7f\u7528\u7684\u9ed8\u8ba4 IPv6 EIP\uff0c\u89c4\u5219\u4e0e <code>ipv6DefaultEIP</code> \u76f8\u540c\uff1b</li> <li>\u8bbe\u7f6e Egress \u8282\u70b9\u7684\u5339\u914d\u6761\u4ef6\u548c\u7b56\u7565\uff1b</li> <li>\u901a\u8fc7 Selector \u9009\u62e9\u4e00\u7ec4\u8282\u70b9\u4f5c\u4e3a Egress \u8282\u70b9\uff0cEgress IP \u53ef\u5728\u6b64\u8303\u56f4\u5185\u6d6e\u52a8\uff1b</li> <li>EgressGateway \u9009\u62e9 Egress \u8282\u70b9\u7684\u7b56\u7565\uff0c\u76ee\u524d\u4ec5\u652f\u6301\u5e73\u5747\u9009\u62e9\uff1b</li> <li>\u8282\u70b9\u9009\u62e9\u5668\u9009\u62e9\u7684 Egress \u8282\u70b9\uff0c\u4ee5\u53ca\u8282\u70b9\u4e0a\u6709\u6548\u7684 Egress IP\uff0c\u4ee5\u53ca\u4f7f\u7528\u8be5 Egress IP \u7684 EgressPolicy\uff1b</li> <li>Egress \u8282\u70b9\u7684\u540d\u79f0\uff1b</li> <li>Egress \u8282\u70b9\u5bf9\u5e94\u7684 EgressTunnel \u5bf9\u8c61\u7684\u72b6\u6001\uff1b</li> <li>\u6b64 Egress \u8282\u70b9\u4e0a\u6709\u6548\u7684 EIP \u4fe1\u606f\uff1b</li> <li>Egress IPv4\uff0c\u5982\u679c EgressPolicy \u548c EgressClusterPolicy \u4f7f\u7528\u8282\u70b9 IP\uff0c\u5219\u6b64\u5b57\u6bb5\u4e3a\u7a7a\uff1b</li> <li>Egress IPv6\uff0c\u5728\u53cc\u6808\u60c5\u51b5\u4e0b\uff0cIPv4 \u548c IPv6 \u4e00\u4e00\u5bf9\u5e94\uff1b</li> <li>\u54ea\u4e9b\u7b56\u7565\u4f7f\u7528\u6b64\u8282\u70b9\u4e0a\u7684\u6709\u6548 Egress IP\uff1b</li> <li>\u4f7f\u7528 Egress IP \u7684\u7b56\u7565\u540d\u79f0\uff1b</li> <li>\u4f7f\u7528 Egress IP \u7684\u7b56\u7565\u7684\u547d\u540d\u7a7a\u95f4\u3002</li> </ol>"},{"location":"zh/reference/EgressPolicy/","title":"CRD EgressPolicy","text":"<p>EgressPolicy CRD \u7528\u4e8e\u6307\u5b9a\u54ea\u4e9b Pod \u8bbf\u95ee\u54ea\u4e9b\u76ee\u6807 CIDR \u65f6\u8d70 Egress \u7b56\u7565\uff0c\u4ee5\u53ca Egress \u6240\u4f7f\u7528\u7684 IP \u5730\u5740\u3002\u79df\u6237\u7ea7\u8d44\u6e90\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\nnamespace: \"default\"\nname: \"policy-test\"\nspec:\negressGatewayName: \"eg1\"  # 1\negressIP:                 # 2\nipv4: \"\"                            ipv6: \"\"\nuseNodeIP: false        # 3\nappliedTo:                # 4\npodSelector:            # 4-a \nmatchLabels:    app: \"shopping\"\npodSubnet:              # 4-b\n- \"172.29.16.0/24\"\n- 'fd00:1/126'\ndestSubnet:               # 5\n- \"10.6.1.92/32\"\n- \"fd00::92/128\"\npriority: 100             # 6\n</code></pre> <ol> <li>\u9009\u62e9 EgressPolicy \u5f15\u7528\u7684 EgressGateway\uff1a</li> <li>Egress IP \u8868\u793a EgressPolicy \u6240\u4f7f\u7528\u7684 EgressIP \u8bbe\u7f6e\uff1a<ul> <li>\u82e5\u5728\u521b\u5efa\u65f6\u5b9a\u4e49\u4e86 <code>ipv4</code> \u6216 <code>ipv6</code> \u5730\u5740\uff0c\u5219\u4ece EgressGateway \u7684 <code>.ippools</code> \u4e2d\u5206\u914d\u4e00\u4e2a IP \u5730\u5740\uff0c\u82e5\u5728 policy1 \u4e2d\uff0c\u7533\u8bf7\u4f7f\u7528\u4e86 IP \u5730\u5740 <code>10.6.1.21</code> \u548c <code>fd00:1</code> \uff0c\u7136\u540e\u521b\u5efa policy2 \u4e2d\uff0c\u7533\u8bf7\u4f7f\u7528\u4e86 IP \u5730\u5740 <code>10.6.1.21</code> \u548c <code>fd00:2</code>\uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u6b64\u65f6 policy2 \u4f1a\u5206\u914d\u5931\u8d25\uff1b</li> <li>\u82e5\u672a\u5b9a\u4e49 <code>ipv4</code> \u6216 <code>ipv6</code> \u5730\u5740\uff0c\u4e14 <code>useNodeIP</code> \u4e3a true \u65f6\uff0c\u5219\u4f7f\u7528\u6240\u5f15\u7528 EgressGateway \u7684\u5339\u914d\u4e2d\u7684 Node \u7684 IP \u4f5c\u4e3a Egress \u5730\u5740\uff1b</li> <li>\u82e5\u672a\u5728\u521b\u5efa\u65f6\u5b9a\u4e49 <code>ipv4</code> \u6216 <code>ipv6</code> \u5730\u5740\uff0c\u4e14 <code>useNodeIP</code> \u4e3a <code>false</code> \u65f6\uff1b<ul> <li>\u5219\u81ea\u52a8\u4ece EgressGateway \u7684 <code>.ranges</code> \u4e2d\u5206\u914d\u4e00\u4e2a IP \u5730\u5740\uff08\u5f00\u542f IPv6 \u65f6\uff0c\u8bf7\u6c42\u5206\u914d\u4e00\u4e2a IPv4 \u548c \u4e00\u4e2a IPv6 \u5730\u5740\uff09\u3002</li> </ul> </li> <li><code>egressGatewayName</code> \u4e0d\u80fd\u4e3a\u7a7a\u3002</li> </ul> </li> <li>\u652f\u6301\u4f7f\u7528\u8282\u70b9 IP \u4f5c\u4e3a Egress IP\uff08\u53ea\u5141\u8bb8\u9009\u62e9\u4e00\u79cd\uff09\uff1b</li> <li>\u9009\u62e9\u9700\u8981\u5e94\u7528 EgressPolicy \u7684 Pod\uff1b    a. \u4ee5 Label \u7684\u65b9\u5f0f\u8fdb\u884c\u9009\u62e9    b. \u76f4\u63a5\u6307\u5b9a Pod \u7684\u7f51\u6bb5 \uff08a \u548c b \u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\uff09</li> <li>\u6307\u5b9a\u8bbf\u95ee Egress \u7684\u76ee\u6807\u5730\u5740\uff0c\u82e5\u672a\u6307\u5b9a\u76ee\u6807\u5730\u5740\uff0c\u5219\u751f\u6548\u7684\u7b56\u7565\u4f4d\u76ee\u6807\u5730\u5740\u975e\u96c6\u7fa4\u5185 CIDR \u65f6\uff0c\u5168\u90e8\u8f6c\u53d1\u5230 Egress \u8282\u70b9\uff1b</li> <li>\u7b56\u7565\u7684\u4f18\u5148\u7ea7\u3002</li> </ol>"},{"location":"zh/reference/EgressTunnel/","title":"CRD EgressTunnel","text":"<p>EgressTunnel CRD \u7528\u4e8e\u8bb0\u5f55\u8de8\u8282\u70b9\u901a\u4fe1\u7684\u96a7\u9053\u7f51\u5361\u4fe1\u606f\u3002\u8fd9\u662f\u4e00\u4e2a\u96c6\u7fa4\u7ea7\u8d44\u6e90\uff0c\u5b83\u4e0e Kubernetes Node \u8d44\u6e90\u540d\u79f0\u4e00\u4e00\u5bf9\u5e94\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressTunnel\nmetadata:\nname: \"node1\"\nstatus:\ntunnel:\nipv4: \"192.200.222.157\"  # 1\nipv6: \"fd01::f2\"         # 2        \nmac: \"66:50:85:cb:b2:bf\" # 3\nparent:\nname: \"ens160\"        # 4\nipv4: \"10.6.1.21/16\"  # 5\nipv6: \"fd00::21/112\"  # 6\nphase: \"Ready\"              # 7\nmark: \"0x26000000\"          # 8\n</code></pre> <ol> <li>\u96a7\u9053 IPv4 \u5730\u5740</li> <li>\u96a7\u9053 IPv6 \u5730\u5740</li> <li>\u96a7\u9053 MAC \u5730\u5740</li> <li>\u96a7\u9053\u7236\u7f51\u5361</li> <li>\u96a7\u9053\u7236\u7f51\u5361 IPv4 \u5730\u5740</li> <li>\u96a7\u9053\u7236\u7f51\u5361 IPv6 \u5730\u5740</li> <li>\u5f53\u524d\u96a7\u9053\u72b6\u6001<ul> <li><code>Pending</code>\uff1a\u7b49\u5f85\u5206\u914d IP</li> <li><code>Init</code>\uff1a\u5206\u914d\u96a7\u9053 IP \u6210\u529f</li> <li><code>Ready</code>\uff1a\u96a7\u9053 IP \u5df2\u5206\u914d\uff0c\u4e14\u96a7\u9053\u5df2\u5efa\u6210</li> <li><code>Failed</code>\uff1a\u96a7\u9053 IP \u5206\u914d\u5931\u8d25</li> </ul> </li> <li>\u6570\u636e\u5305 mark \u503c\uff0c\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u3002\u4f8b\u5982\u8282\u70b9 A \u7684\u6709 Egress \u6d41\u91cf\u9700\u8981\u8f6c\u53d1\u5230\u7f51\u5173\u8282\u70b9 B\uff0c\u4f1a\u5bf9 A \u8282\u70b9\u7684\u6d41\u91cf\u6253 mark \u8fdb\u884c\u6807\u8bb0\u3002</li> </ol>"},{"location":"zh/usage/ClusterDefaultEgressGateway/","title":"\u96c6\u7fa4\u7ea7\u9ed8\u8ba4 EgressGateway","text":""},{"location":"zh/usage/ClusterDefaultEgressGateway/#_1","title":"\u4ecb\u7ecd","text":"<p>\u4e3a\u6574\u4e2a\u96c6\u7fa4\u8bbe\u7f6e\u9ed8\u8ba4 EgressGateway\uff0c\u53ef\u4ee5\u7b80\u5316\u5728\u79df\u6237\u4e0b\u4f7f\u7528 EgressPolicy \u6216\u5728\u96c6\u7fa4\u7ea7\u4f7f\u7528 EgressClusterPolicy \u65f6\uff0c\u6bcf\u6b21\u6307\u5b9a EgressGateway \u540d\u79f0\u7684\u6b65\u9aa4\u3002\u6ce8\u610f\u96c6\u7fa4\u9ed8\u8ba4 EgressGateway \u53ea\u80fd\u8bbe\u7f6e\u4e00\u4e2a\u3002</p>"},{"location":"zh/usage/ClusterDefaultEgressGateway/#_2","title":"\u5b9e\u65bd\u8981\u6c42","text":"<ul> <li>\u5df2\u5b89\u88c5 EgressGateway \u7ec4\u4ef6</li> </ul>"},{"location":"zh/usage/ClusterDefaultEgressGateway/#_3","title":"\u6b65\u9aa4","text":"<ol> <li> <p>\u521b\u5efa EgressGateway \u65f6\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a <code>spec.clusterDefault</code> \u4e3a <code>true</code> \u4f1a\u88ab\u4f5c\u4e3a\u96c6\u7fa4\u9ed8\u8ba4 EgressGateway\uff0c\u5728 EgressClusterPolicy \u6ca1\u6709\u6307\u5b9a <code>spec.egressGatewayName</code> \u65f6\uff0c\u4ee5\u53ca EgressPolicy \u6ca1\u6709\u6307\u5b9a \u6307\u5b9a <code>spec.egressGatewayName</code> \u4e14\u79df\u6237\u6ca1\u6709\u914d\u7f6e\u9ed8\u8ba4 EgressGateway \u65f6\uff0c\u81ea\u52a8\u4f7f\u7528\u96c6\u7fa4\u9ed8\u8ba4\u7684 EgressGateway\u3002</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressGateway\nmetadata:\nname: default\nspec:\nclusterDefault: true\nippools:\nipv4:\n- 10.6.1.55\n- 10.6.1.56\nipv4DefaultEIP: 10.6.1.55\nipv6:\n- fd00::55\n- fd00::56\nipv6DefaultEIP: fd00::56\nnodeSelector:\nselector:\nmatchLabels:\negress: \"true\"    </code></pre> </li> <li> <p>\u4f7f\u7528\u4ee5\u4e0b\u5b9a\u4e49\u521b\u5efa EgressPolicy\uff0c\u5ffd\u7565 <code>spec.egressGatewayName</code> \u5b57\u6bb5\u7684\u5b9a\u4e49\uff1a</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\nname: mock-app\nspec:\nappliedTo:\npodSelector:\nmatchLabels:\napp: mock-app\ndestSubnet:\n- 10.6.1.92/32\n</code></pre> </li> <li> <p>\u518d\u6b21\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u786e\u8ba4 EgressPolicy \u5df2\u88ab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u7684 EgressGateway\uff1a</p> <pre><code>$ kubectl get egresspolicies mock-app -o yaml\napiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\n  creationTimestamp: \"2023-08-09T11:54:34Z\"\ngeneration: 1\nname: mock-app\n  namespace: default\n  resourceVersion: \"6233341\"\nuid: 5692c5e6-a72b-41bd-a611-1106abd41bc2\nspec:\n  appliedTo:\n    podSelector:\n      matchLabels:\n        app: mock-app\n  destSubnet:\n  - 10.6.1.92/32\n  - fd00::92/128\n  - 172.30.40.0/21\n  egressGatewayName: default\n</code></pre> </li> </ol>"},{"location":"zh/usage/Install/","title":"\u81ea\u5efa\u96c6\u7fa4\u5b89\u88c5 EgressGateway","text":""},{"location":"zh/usage/Install/#_1","title":"\u4ecb\u7ecd","text":"<p>\u672c\u6587\u5c06\u6f14\u793a\u5728\u4e00\u4e2a\u81ea\u5efa\u96c6\u7fa4\u4e0a\u5feb\u901f\u5b89\u88c5 EgressGateway</p>"},{"location":"zh/usage/Install/#_2","title":"\u8981\u6c42","text":"<ol> <li> <p>\u5df2\u7ecf\u5177\u5907\u4e00\u4e2a\u81ea\u5efa\u597d\u7684 Kubernetes \u96c6\u7fa4\uff0c\u81f3\u5c11\u6709 2 \u4e2a\u8282\u70b9\u3002\u5f53\u524d\uff0cEgressGateway \u652f\u6301\u7684 CNI \u53ea\u5305\u542b Calico</p> </li> <li> <p>\u96c6\u7fa4\u51c6\u5907\u597d helm \u5de5\u5177</p> </li> </ol>"},{"location":"zh/usage/Install/#_3","title":"\u5b89\u88c5\u51c6\u5907","text":"<ul> <li>\u5bf9\u4e8e CNI \u662f calico \u7684\u96c6\u7fa4\uff0c\u8bf7\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u8be5\u547d\u4ee4\u786e\u4fdd EgressGateway \u7684 iptables \u89c4\u5219\u4e0d\u4f1a\u88ab Calico \u89c4\u5219\u8986\u76d6\uff0c\u5426\u5219 EgressGateway \u5c06\u4e0d\u80fd\u5de5\u4f5c\u3002</li> </ul> <pre><code># set chainInsertMode\n$ kubectl patch FelixConfiguration default --patch '{\"spec\": {\"chainInsertMode\": \"Append\"}}'\n# check status\n$ kubectl get FelixConfiguration default -o yaml\n    apiVersion: crd.projectcalico.org/v1\n    kind: FelixConfiguration\n    metadata:\n      generation: 2\nname: default\n      resourceVersion: \"873\"\nuid: 0548a2a5-f771-455b-86f7-27e07fb8223d\n    spec:\n      chainInsertMode: Append\n      ......\n</code></pre> <p><code>spec.chainInsertMode</code> \u7684\u610f\u4e49\u53ef\u53c2\u8003 calico \u6587\u6863\uff1a</p>"},{"location":"zh/usage/Install/#egressgateway_1","title":"\u5b89\u88c5 EgressGateway","text":""},{"location":"zh/usage/Install/#egressgateway_2","title":"\u6dfb\u52a0 EgressGateway \u4ed3\u5e93","text":"<pre><code>helm repo add egressgateway https://spidernet-io.github.io/egressgateway/\nhelm repo update\n</code></pre>"},{"location":"zh/usage/Install/#egressgateway_3","title":"\u5b89\u88c5 EgressGateway","text":"<ol> <li> <p>\u53ef\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5feb\u901f\u5b89\u88c5 EgressGateway</p> <pre><code>helm install egressgateway egressgateway/egressgateway -n kube-system \\\n--set feature.tunnelIpv4Subnet=\"192.200.0.1/16\"\n</code></pre> <p>\u5728\u5b89\u88c5\u547d\u4ee4\u4e2d\uff0c\u6709\u5982\u4e0b\u6ce8\u610f\u70b9\uff1a</p> <ul> <li> <p>\u5b89\u88c5\u547d\u4ee4\u4e2d\uff0c\u9700\u8981\u63d0\u4f9b\u7528\u4e8e EgressGateway \u96a7\u9053\u8282\u70b9\u7684 IPv4 \u548c IPv6 \u7f51\u6bb5\uff0c\u8981\u6c42\u8be5\u7f51\u6bb5\u548c\u96c6\u7fa4\u5185\u7684\u5176\u4ed6\u5730\u5740\u4e0d\u51b2\u7a81</p> </li> <li> <p>\u53ef\u4f7f\u7528\u9009\u9879 <code>--set feature.tunnelDetectMethod=\"interface=eth0\"</code> \u6765\u5b9a\u5236 EgressGateway \u96a7\u9053\u7684\u627f\u8f7d\u7f51\u5361\uff0c\u5426\u5219\uff0c\u9ed8\u8ba4\u4f7f\u7528\u9ed8\u8ba4\u8def\u7531\u7684\u7f51\u5361</p> </li> <li> <p>\u5982\u679c\u5e0c\u671b\u4f7f\u7528 IPv6 \uff0c\u53ef\u4f7f\u7528\u9009\u9879 <code>--set feature.enableIPv6=true</code> \u5f00\u542f\uff0c\u5e76\u8bbe\u7f6e <code>feature.tunnelIpv6Subnet</code></p> </li> <li> <p>EgressGateway Controller \u652f\u6301\u9ad8\u53ef\u7528\uff0c\u53ef\u901a\u8fc7 <code>--set controller.replicas=2</code> \u8bbe\u7f6e</p> </li> </ul> </li> <li> <p>\u786e\u8ba4\u6240\u6709\u7684 EgressGateway Pod \u8fd0\u884c\u6b63\u5e38\u3002     <pre><code>$ kubectl get pod -n kube-system | grep egressgateway\negressgateway-agent-29lt5                  1/1     Running   0          9h\negressgateway-agent-94n8k                  1/1     Running   0          9h\negressgateway-agent-klkhf                  1/1     Running   0          9h\negressgateway-controller-5754f6658-7pn4z   1/1     Running   0          9h\n</code></pre></p> </li> <li> <p>\u4efb\u4f55\u529f\u80fd\u914d\u7f6e\uff0c\u53ef\u901a\u8fc7\u8c03\u6574 EgressGateway \u5b9e\u4f8b\u79df\u6237\u4e0b\u7684 ConfigMap EgressGateway \u6765\u5b9e\u73b0\u3002</p> </li> </ol>"},{"location":"zh/usage/Install/#egressgateway_4","title":"\u521b\u5efa EgressGateway \u5b9e\u4f8b","text":"<ol> <li> <p>EgressGateway \u5b9a\u4e49\u4e86\u4e00\u7ec4\u8282\u70b9\u4f5c\u4e3a\u96c6\u7fa4\u7684\u51fa\u53e3\u7f51\u5173\uff0c\u96c6\u7fa4\u5185\u7684 egress \u6d41\u91cf\u5c06\u4f1a\u901a\u8fc7\u8fd9\u7ec4\u8282\u70b9\u8f6c\u53d1\u800c\u51fa\u96c6\u7fa4\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u9884\u5148\u5b9a\u4e49\u4e00\u7ec4 EgressGateway\uff0c\u4f8b\u5b50\u5982\u4e0b</p> <pre><code>cat &lt;&lt;EOF | kubectl apply -f -\napiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressGateway\nmetadata:\n  name: default\nspec:\n  ippools:\n    ipv4:\n    - \"10.6.1.60-10.6.1.66\"\n  nodeSelector:\n    selector:\n      matchLabels:\n        egressgateway: \"true\"\nEOF\n</code></pre> <p>\u521b\u5efa\u547d\u4ee4\u4e2d\uff1a</p> <ul> <li>\u5982\u4e0a yaml \u4f8b\u5b50\u4e2d\uff0c<code>spec.ippools.ipv4</code> \u5b9a\u4e49\u4e86\u4e00\u7ec4 egress \u7684 \u51fa\u53e3 VIP \u5730\u5740\uff0c\u9700\u8981\u6839\u636e\u5177\u4f53\u73af\u5883\u7684\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\uff0c  \u5176\u4e2d\uff0c<code>spec.ippools.ipv4</code> \u7684 CIDR \u5e94\u8be5\u662f\u4e0e\u7f51\u5173\u8282\u70b9\u4e0a\u7684\u51fa\u53e3\u7f51\u5361\uff08\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u9ed8\u8ba4\u8def\u7531\u7684\u7f51\u5361\uff09\u7684\u5b50\u7f51\u76f8\u540c\uff0c\u5426\u5219\uff0c\u6781\u6709\u53ef\u80fd\u5bfc\u81f4 egress \u8bbf\u95ee\u4e0d\u901a\u3002</li> <li>\u901a\u8fc7 EgressGateway \u7684 <code>spec.nodeSelector</code> \u6765 select \u4e00\u7ec4\u8282\u70b9\u4f5c\u4e3a\u51fa\u53e3\u7f51\u5173\uff0c\u5b83\u652f\u6301 select \u591a\u4e2a\u8282\u70b9\u6765\u5b9e\u73b0\u9ad8\u53ef\u7528\u3002</li> </ul> </li> <li> <p>\u7ed9\u51fa\u53e3\u7f51\u5173\u8282\u70b9\u6253\u4e0a label\uff0c\u53ef\u4ee5\u7ed9\u591a\u4e2a node \u6253\u4e0a label\uff0c\u4f5c\u4e3a\u751f\u6210\u73af\u5883\uff0c\u5efa\u8bae 2 \u4e2a\u8282\u70b9\uff0c\u4f5c\u4e3a POC \u73af\u5883\uff0c \u5efa\u8bae 1 \u4e2a\u8282\u70b9\u5373\u53ef</p> <pre><code>kubectl label node $NodeName egressgateway=\"true\"\n</code></pre> </li> <li> <p>\u67e5\u770b\u72b6\u6001\u5982\u4e0b</p> <pre><code>$ kubectl get EgressGateway default -o yaml\n    apiVersion: egressgateway.spidernet.io/v1beta1\n    kind: EgressGateway\n    metadata:\n      name: default\n      uid: 7ce835e2-2075-4d26-ba63-eacd841aadfe\n    spec:\n      clusterDefault: true\n      ippools:\n        ipv4:\n        - 172.22.0.100-172.22.0.110\n        ipv4DefaultEIP: 172.22.0.110\n      nodeSelector:\n        selector:\n          matchLabels:\n            egressgateway: \"true\"\n    status:\n      nodeList:\n      - name: egressgateway-worker1\n        status: Ready\n      - name: egressgateway-worker2\n        status: Ready\n</code></pre> <p>\u5728\u5982\u4e0a\u8f93\u51fa\u4e2d\uff1a * <code>status.nodeList</code> \u5b57\u6bb5\u5df2\u7ecf\u8bc6\u522b\u5230\u4e86\u7b26\u5408 <code>spec.nodeSelector</code> \u7684\u8282\u70b9\u53ca\u8be5\u8282\u70b9\u5bf9\u5e94\u7684 EgressTunnel \u5bf9\u8c61\u7684\u72b6\u6001 * <code>spec.ippools.ipv4DefaultEIP</code> \u5b57\u6bb5\u4f1a\u4ece `spec.ippools.ipv4`` \u4e2d\u968f\u673a\u9009\u62e9\u4e00\u4e2a IP \u5730\u5740\u4f5c\u4e3a\u8be5\u7ec4 EgressGateway \u7684\u9ed8\u8ba4 VIP\uff0c\u5b83\u7684\u4f5c\u7528\u662f\uff1a\u5f53\u4e3a\u5e94\u7528\u521b\u5efa EgressPolicy \u5bf9\u8c61\u65f6\uff0c\u5982\u679c\u672a\u6307\u5b9a VIP \u5730\u5740\uff0c\u5219\u9ed8\u8ba4\u5206\u914d\u4f7f\u7528\u8be5\u9ed8\u8ba4 VIP</p> </li> </ol>"},{"location":"zh/usage/Install/#_4","title":"\u521b\u5efa\u5e94\u7528\u548c\u51fa\u53e3\u7b56\u7565","text":"<ol> <li>\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\uff0c\u5b83\u5c06\u7528\u4e8e\u6d4b\u8bd5 POD \u8bbf\u95ee\u96c6\u7fa4\u5916\u90e8\u7528\u9014\uff0c\u5e76\u7ed9\u5b83\u6253\u4e0a label\u3002</li> </ol> <pre><code>kubectl create deployment visitor --image nginx\n</code></pre> <ol> <li> <p>\u4e3a\u5e94\u7528\u521b\u5efa EgressPolicy CR \u5bf9\u8c61\u3002 EgressPolicy \u5b9e\u4f8b\u7528\u4e8e\u5b9a\u4e49\u54ea\u4e9b POD \u7684\u51fa\u53e3\u6d41\u91cf\u8981\u7ecf\u8fc7 egressGateway node \u8f6c\u53d1\uff0c\u4ee5\u53ca\u5176\u5b83\u7684\u914d\u7f6e\u7ec6\u8282\u3002 \u53ef\u521b\u5efa\u5982\u4e0b\u4f8b\u5b50\uff0c\u5f53\u5339\u914d\u7684 pod \u8bbf\u95ee\u4efb\u610f\u96c6\u7fa4\u5916\u90e8\u7684\u5730\u5740\uff08\u4efb\u610f\u4e0d\u662f Node IP\u3001CNI Pod CIDR\u3001ClusterIP \u7684\u5730\u5740\uff09\u65f6\uff0c\u90fd\u4f1a\u88ab EgressGateway Node \u8f6c\u53d1\u3002\u6ce8\u610f\u7684\u662f\uff0c EgressPolicy \u5bf9\u8c61\u662f\u79df\u6237\u7ea7\u522b\u7684\uff0c\u56e0\u6b64\uff0c\u5b83\u52a1\u5fc5\u521b\u5efa\u5728 selected \u5e94\u7528\u7684\u79df\u6237\u4e0b</p> <pre><code>cat &lt;&lt;EOF | kubectl apply -f -\napiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\n  name: test\n  namespace: default\nspec:\n  appliedTo:\n    podSelector:\n      matchLabels:\n        app: \"visitor\"\nEOF\n</code></pre> <p>\u5982\u4e0a\u521b\u5efa\u547d\u4ee4\u4e2d\uff1a</p> <ul> <li><code>spec.egressGatewayName</code> \u6307\u5b9a\u4e86\u4f7f\u7528\u54ea\u4e00\u7ec4 EgressGateway \u7684\u540d\u5b57\u3002  </li> <li><code>spec.appliedTo.podSelector</code> \u6307\u5b9a\u4e86\u672c\u7b56\u7565\u751f\u6548\u5728\u96c6\u7fa4\u5185\u7684\u54ea\u4e9b Pod\u3002</li> <li>\u96c6\u7fa4\u7684 egress \u6d41\u91cf\u7684\u6e90 IP \u5730\u5740\u6709\u4e24\u79cd\u9009\u62e9\uff1a<ul> <li>\u53ef\u4f7f\u7528\u7f51\u5173\u8282\u70b9\u7684 IP\u3002\u5b83\u53ef\u9002\u7528\u4e8e\u516c\u6709\u4e91\u548c\u4f20\u7edf\u7f51\u7edc\u7b49\u73af\u5883\uff0c\u7f3a\u70b9\u662f\uff0c\u968f\u7740\u7f51\u5173\u8282\u70b9\u7684\u6545\u969c\uff0c\u51fa\u53e3\u6e90 IP \u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u53ef\u8bbe\u7f6e <code>spec.egressIP.useNodeIP=true</code> \u6765\u751f\u6548\u3002</li> <li>\u53ef\u4f7f\u7528\u72ec\u7acb\u7684 VIP\uff0c\u56e0\u4e3a EgressGateway \u662f\u57fa\u4e8e ARP \u539f\u7406\u751f\u6548 VIP\uff0c\u6240\u4ee5\u5b83\u9002\u7528\u4e8e\u4f20\u7edf\u7f51\u7edc\uff0c\u800c\u4e0d\u9002\u7528\u4e8e\u516c\u6709\u4e91\u7b49\u73af\u5883\uff0c\u5b83\u7684\u4f18\u70b9\u662f\uff0c\u51fa\u53e3\u6e90 IP \u6c38\u4e45\u662f\u56fa\u5b9a\u7684\u3002\u5728 EgressPolicy \u4e2d\u4e0d\u505a\u4efb\u4f55\u8bbe\u7f6e\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528 egressGatewayName \u7684\u7f3a\u7701 VIP\uff0c\u6216\u8005\u53ef\u5355\u72ec\u624b\u52a8\u6307\u5b9a <code>spec.egressIP.ipv4</code> \uff0c\u5176 IP \u503c\u52a1\u5fc5\u662f\u7b26\u5408 EgressGateway \u4e2d\u7684 IP \u6c60\u3002</li> </ul> </li> </ul> </li> <li> <p>\u67e5\u770b EgressPolicy \u7684\u72b6\u6001</p> <pre><code>$ kubectl get EgressPolicy -A\nNAMESPACE   NAME   GATEWAY   IPV4           IPV6   EGRESSTUNNEL\ndefault     test   default   172.22.0.110          egressgateway-worker2\n\n$ kubectl get EgressPolicy test -o yaml\napiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\n  name: test\n  namespace: default\nspec:\n  appliedTo:\n    podSelector:\n      matchLabels:\n        app: visitor\n  egressIP:\n    allocatorPolicy: default\n    useNodeIP: false\nstatus:\n  eip:\n    ipv4: 172.22.0.110\n  node: egressgateway-worker2\n</code></pre> <p>\u5982\u4e0a\u8f93\u51fa\u4e2d\uff1a</p> <ul> <li> <p><code>status.eip</code> \u5c55\u793a\u4e86\u8be5\u7ec4\u5e94\u7528\u51fa\u96c6\u7fa4\u65f6\u4f7f\u7528\u7684\u51fa\u53e3 IP \u5730\u5740</p> </li> <li> <p><code>status.node</code> \u5c55\u793a\u4e86\u54ea\u4e00\u4e2a EgressGateway \u7684\u8282\u70b9\u5728\u5b9e\u65f6\u7684\u8d1f\u8d23\u51fa\u53e3\u6d41\u91cf\u7684\u8f6c\u53d1\u3002\u6ce8\uff1aEgressGateway \u8282\u70b9\u652f\u6301\u9ad8\u53ef\u7528\uff0c\u5f53\u5b58\u5728\u591a\u4e2a EgressGateway \u8282\u70b9\u65f6\uff0c\u6240\u6709\u7684 EgressPolicy \u4f1a\u5747\u644a\u5230\u4e0d\u540c\u7684 EgressGateway \u8282\u70b9\u4e0a\u5b9e\u65bd\u3002</p> </li> </ul> </li> <li> <p>\u67e5\u770b EgressEndpointSlices \u7684\u72b6\u6001</p> <p>\u6bcf\u4e2a EgressPolicy \u5bf9\u8c61\uff0c\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684 EgressEndpointSlices \u5bf9\u8c61\uff0c\u5176\u4e2d\u5b58\u50a8\u4e86 EgressPolicy select \u7684 Pod \u7684 IP \u5730\u5740\u96c6\u5408\u3002\u5f53\u5e94\u7528\u65e0\u6cd5\u51fa\u53e3\u8bbf\u95ee\u65f6\uff0c\u53ef\u6392\u67e5\u8be5\u5bf9\u8c61\u4e2d\u7684 IP \u5730\u5740\u662f\u5426\u6b63\u5e38\u3002</p> <pre><code>$ kubectl get egressendpointslices -A\n  NAMESPACE   NAME         AGE\n  default     test-kvlp6   18s\n\n$ kubectl get egressendpointslices test-kvlp6 -o yaml\napiVersion: egressgateway.spidernet.io/v1beta1\nendpoints:\n- ipv4:\n  - 172.40.14.195\n  node: egressgateway-worker\n  ns: default\n  pod: visitor-6764bb48cc-29vq9\nkind: EgressEndpointSlice\nmetadata:\n  name: test-kvlp6\n  namespace: default\n</code></pre> </li> </ol>"},{"location":"zh/usage/Install/#_5","title":"\u6d4b\u8bd5\u6548\u679c","text":"<ol> <li> <p>\u53ef\u5728\u96c6\u7fa4\u5916\u90e8\u90e8\u7f72\u5e94\u7528 nettools\uff0c\u7528\u4e8e\u6a21\u62df\u4e00\u4e2a\u96c6\u7fa4\u5916\u90e8\u7684\u670d\u52a1\uff0cnettools \u4f1a\u5728 http \u56de\u590d\u4e2d\u8fd4\u56de\u8bf7\u6c42\u8005\u7684\u6e90 IP \u5730\u5740\u3002   <pre><code>docker run -d --net=host ghcr.io/spidernet-io/egressgateway-nettools:latest /usr/bin/nettools-server -protocol web -webPort 8080\n</code></pre></p> </li> <li> <p>\u5728\u96c6\u7fa4\u5185\u90e8\u7684 visitor Pod \u4e2d\uff0c\u9a8c\u8bc1\u51fa\u53e3\u6d41\u91cf\u7684\u6548\u679c\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 visitor \u8bbf\u95ee\u5916\u90e8\u670d\u52a1\uff0cnettools \u8fd4\u56de\u7684\u6e90 IP \u7b26\u5408\u4e86 EgressPolicy <code>.status.eip</code> \u7684\u6548\u679c\u3002   <pre><code>$ kubectl get pod\n  NAME                       READY   STATUS    RESTARTS   AGE\n  visitor-6764bb48cc-29vq9   1/1     Running   0          15m\n\n$ kubectl exec -it visitor-6764bb48cc-29vq9 bash\n  $ curl 10.6.1.92:8080\n  Remote IP: 10.6.1.60\n</code></pre></p> </li> </ol>"},{"location":"zh/usage/NamespaceDefaultEgressGateway/","title":"\u79df\u6237\u7ea7\u9ed8\u8ba4 EgressGateway","text":""},{"location":"zh/usage/NamespaceDefaultEgressGateway/#_1","title":"\u4ecb\u7ecd","text":"<p>\u4e3a\u79df\u6237\u8bbe\u7f6e\u9ed8\u8ba4 EgressGateway \u53ef\u4ee5\u7b80\u5316\u5728\u79df\u6237\u4e0b\u4f7f\u7528 EgressPolicy \u65f6\u6bcf\u6b21\u6307\u5b9a EgressGateway \u540d\u79f0\u7684\u6b65\u9aa4\u3002\u79df\u6237\u7ea7\u9ed8\u8ba4 EgressGateway \u7684\u4f18\u5148\u7ea7\u5927\u4e8e\u96c6\u7fa4\u9ed8\u8ba4 EgressGateway\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u6307\u5b9a\u4e86\u79df\u6237\u7ea7\u7684\u9ed8\u8ba4\u7f51\u5173\uff0c\u4f1a\u4f18\u5148\u4f7f\u7528\u79df\u6237\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5982\u679c\u79df\u6237\u6ca1\u6709\u8bbe\u7f6e\u9ed8\u8ba4\u7f51\u5173\uff0c\u5219\u4f1a\u4f7f\u7528\u96c6\u7fa4\u9ed8\u8ba4\u8bbe\u7f6e\u3002</p>"},{"location":"zh/usage/NamespaceDefaultEgressGateway/#_2","title":"\u5b9e\u65bd\u8981\u6c42","text":"<ul> <li>\u5df2\u5b89\u88c5 EgressGateway \u7ec4\u4ef6</li> <li>\u5df2\u521b\u5efa\u4e00\u4e2a EgressGateway CR</li> </ul>"},{"location":"zh/usage/NamespaceDefaultEgressGateway/#_3","title":"\u6b65\u9aa4","text":"<ol> <li> <p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4e3a\u79df\u6237\u6307\u5b9a\u9ed8\u8ba4\u7684 EgressGateway \u540d\u79f0\uff1a</p> <pre><code>kubectl label ns default spidernet.io/egressgateway-default=egressgateway\n</code></pre> </li> <li> <p>\u4f7f\u7528\u4ee5\u4e0b\u5b9a\u4e49\u521b\u5efa EgressPolicy\uff0c\u5ffd\u7565 <code>spec.egressGatewayName</code> \u5b57\u6bb5\u7684\u5b9a\u4e49\uff1a</p> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\nname: mock-app\nspec:\nappliedTo:\npodSelector:\nmatchLabels:\napp: mock-app\ndestSubnet:\n- 10.6.1.92/32\n</code></pre> </li> <li> <p>\u518d\u6b21\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u786e\u8ba4 EgressPolicy \u5df2\u88ab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u7684 EgressGateway\uff1a</p> <pre><code>$ kubectl get egresspolicies mock-app -o yaml\napiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\n  creationTimestamp: \"2023-08-09T10:54:34Z\"\ngeneration: 1\nname: mock-app\n  namespace: default\n  resourceVersion: \"6233341\"\nuid: 5692c5e6-a71b-41bd-a611-1106abd41ba3\nspec:\n  appliedTo:\n    podSelector:\n      matchLabels:\n        app: mock-app\n  destSubnet:\n  - 10.6.1.92/32\n  - fd00::92/128\n  - 172.30.40.0/21\n  egressGatewayName: egressgateway\n</code></pre> </li> </ol>"},{"location":"zh/usage/Uninstall/","title":"Uninstall","text":"<p>\u4e3a\u4e86\u786e\u4fdd\u5728\u5378\u8f7d EgressGateway \u4e4b\u524d\u4e0d\u5f71\u54cd\u6b63\u5728\u4f7f\u7528\u7684\u4e1a\u52a1\u5e94\u7528\uff0c\u5efa\u8bae\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u68c0\u67e5\u4e0e EgressGateway \u76f8\u5173\u7684\u8d44\u6e90\u6570\u91cf\u662f\u5426\u4e3a 0\u3002\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>kubectl get egressclusterpolicies.egressgateway.spidernet.io -o name | wc -l\nkubectl get egresspolicies.egressgateway.spidernet.io -o name | wc -l\nkubectl get egressgateways.egressgateway.spidernet.io -o name | wc -l\n</code></pre> <p>\u8fd9\u4e9b\u547d\u4ee4\u5c06\u8f93\u51fa\u4e0e EgressGateway \u76f8\u5173\u7684 EgressClusterPolicy\u3001EgressPolicy \u548c EgressGateway \u8d44\u6e90\u7684\u6570\u91cf\u3002\u5982\u679c\u8f93\u51fa\u7ed3\u679c\u4e3a 0\uff0c\u5219\u8868\u793a\u6ca1\u6709\u4e0e EgressGateway \u76f8\u5173\u8054\u7684\u8d44\u6e90\u3002\u5982\u679c\u8f93\u51fa\u7ed3\u679c\u4e0d\u4e3a 0\uff0c\u5219\u9700\u8981\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u4ee5\u786e\u4fdd\u5378\u8f7d\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u6b63\u5728\u4f7f\u7528\u7684\u4e1a\u52a1\u5e94\u7528\u3002</p> <p>\u5982\u679c\u8f93\u51fa\u4e0d\u4e3a 0\uff0c\u4f60\u5e94\u8be5\u7ee7\u7eed\u4e0b\u9762\u547d\u4ee4\u68c0\u67e5\uff0c\u5426\u5219\u8df3\u8f6c\u5230\u5230\u6b65\u9aa4 2\u3002</p> <pre><code>kubectl get egressclusterpolicies.egressgateway.spidernet.io\nkubectl get egresspolicies.egressgateway.spidernet.io -o wide\nkubectl get egressgateways.egressgateway.spidernet.io\n</code></pre> <p>\u4f8b\u5982\u4f60\u53d1\u73b0 EgressPolicies \u8fd8\u6709\u672a\u5220\u9664\u8d44\u6e90\u65f6\uff0c\u5e94\u8be5\u67e5\u770b\u8d44\u6e90\u8be6\u60c5</p> <pre><code>kubectl get egresspolicies &lt;resource-name&gt; --namespace &lt;resource-namespace&gt; -o yaml\n</code></pre> <pre><code>apiVersion: egressgateway.spidernet.io/v1beta1\nkind: EgressPolicy\nmetadata:\nname: ns-policy\nnamespace: default\nspec:\nappliedTo:\npodSelector:\nmatchLabels:\napp: mock-app\negressGatewayName: egressgateway\nstatus:\neip:\nipv4: 10.6.1.55\nipv6: fd00::55\nnode: workstation2\n</code></pre> <p>\u901a\u8fc7\u68c0\u7d22 <code>appliedTo.podSelector</code> \u5339\u914d\u5230\u7684 Pod \u786e\u4fdd\u5220\u9664\u4e0d\u4f1a\u5f71\u54cd\u4e1a\u52a1\u5e94\u7528\u65f6\uff0c\u5728\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5220\u9664\u3002</p> <pre><code>kubectl delete egresspolicies &lt;resource-name&gt; --namespace &lt;resource-namespace&gt;\n</code></pre> </li> <li> <p>\u67e5\u8be2\u5f53\u524d\u96c6\u7fa4\u5b89\u88c5\u7684 EgressGateway\u3002\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>helm ls -A | grep -i egress\n</code></pre> <p>\u8fd9\u5c06\u8f93\u51fa\u5f53\u524d\u96c6\u7fa4\u4e2d\u5b89\u88c5\u7684 EgressGateway \u7684\u540d\u79f0\u3001\u547d\u540d\u7a7a\u95f4\u3001\u7248\u672c\u7b49\u4fe1\u606f\u3002</p> </li> <li> <p>\u5378\u8f7d EgressGateway\u3002\u5982\u679c\u60a8\u786e\u5b9a\u8981\u5378\u8f7d EgressGateway\uff0c\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>helm uninstall &lt;egressgateway-name&gt; --namespace &lt;egressgateway-namespace&gt;\n</code></pre> <p>\u5c06 <code>&lt;egressgateway-name&gt;</code> \u66ff\u6362\u4e3a\u8981\u5378\u8f7d\u7684 EgressGateway \u7684\u540d\u79f0\uff0c\u5c06 <code>&lt;egressgateway-namespace&gt;</code> \u66ff\u6362\u4e3a EgressGateway \u6240\u5728\u7684\u547d\u540d\u7a7a\u95f4\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5378\u8f7d EgressGateway \u4e4b\u524d\uff0c\u5efa\u8bae\u5148\u5907\u4efd\u76f8\u5173\u6570\u636e\uff0c\u5e76\u786e\u4fdd\u5378\u8f7d\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u6b63\u5728\u4f7f\u7528\u7684\u4e1a\u52a1\u5e94\u7528\u3002</p> </li> <li> <p>\u5728\u5378\u8f7d\u8fc7\u7a0b\u4e2d\uff0c\u6709\u65f6\u5019\u4f1a\u9047\u5230 EgressGateway \u7684 EgressTunnels CRD \u4e00\u76f4\u5904\u4e8e\u7b49\u5f85\u5220\u9664\u7684\u60c5\u51b5\u3002\u5982\u679c\u60a8\u9047\u5230\u4e86\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u89e3\u51b3\u95ee\u9898\uff1a</p> <pre><code>kubectl patch crd egresstunnels.egressgateway.spidernet.io -p '{\"metadata\":{\"finalizers\": []}}' --type=merge\n</code></pre> <p>\u8fd9\u4e2a\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u5220\u9664 EgressGateway CRD \u4e2d\u7684 finalizer\uff0c\u4ece\u800c\u5141\u8bb8 Kubernetes \u5220\u9664\u8fd9\u4e2a CRD\u3002\u6b64\u95ee\u9898\u662f\u7531 controller-manager \u5f15\u8d77\u7684\uff0c\u6211\u4eec\u6b63\u5728\u5173\u6ce8 Kubernetes \u56e2\u961f\u5bf9\u6b64\u95ee\u9898\u7684\u4fee\u590d\u60c5\u51b5\u3002</p> </li> </ol>"},{"location":"zh/usage/Upgrade/","title":"Upgrade","text":"<p>\u672c\u6587\u6863\u5c06\u6307\u5bfc\u4f60\u5982\u4f55\u4f7f\u7528 <code>helm upgrade</code> \u547d\u4ee4\u5b8c\u6210 EgressGateway \u7684\u5347\u7ea7\u3002</p>"},{"location":"zh/usage/Upgrade/#_1","title":"\u57fa\u672c\u547d\u4ee4\u683c\u5f0f","text":"<pre><code>helm upgrade [RELEASE] [CHART] [flags]\n</code></pre> <p>\u5176\u4e2d\uff0c<code>[RELEASE]</code> \u4ee3\u8868\u5b89\u88c5\u65f6\u8bbe\u7f6e\u7684\u5e94\u7528\u540d\u79f0\uff0c<code>[CHART]</code> \u6307\u7684\u662f\u56fe\u8868\uff0c\u800c <code>[flags]</code> \u53ef\u4ee5\u6307\u5b9a\u989d\u5916\u7684\u53c2\u6570\u3002\u5982\u9700\u4e86\u89e3\u66f4\u591a\u6709\u5173 <code>helm upgrade</code> \u7684\u53c2\u6570\uff0c\u8bf7\u53c2\u9605 helm upgrade \u9875\u9762\u3002</p>"},{"location":"zh/usage/Upgrade/#_2","title":"\u7248\u672c\u5347\u7ea7","text":"<p>\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u6267\u884c\u7248\u672c\u5347\u7ea7\uff1a</p> <ol> <li> <p>\u5728\u5347\u7ea7\u4e4b\u524d\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u5c06\u672c\u5730 Chart \u5347\u7ea7\u81f3\u6700\u65b0\u7248\u672c\uff1a</p> <pre><code>helm repo update\n</code></pre> </li> <li> <p>\u67e5\u770b\u6700\u65b0\u7684\u7248\u672c\uff1a</p> <pre><code>helm search repo egressgateway\n</code></pre> </li> <li> <p>\u6267\u884c\u5347\u7ea7\u547d\u4ee4\uff1a</p> <pre><code>helm upgrade \\\negress \\\negressgateway/egressgateway \\\n--reuse-values \\\n--version [version]\n</code></pre> </li> </ol> <p>\u5c06 <code>[version]</code> \u66ff\u6362\u4e3a\u4f60\u5e0c\u671b\u66f4\u65b0\u7684\u7248\u672c\u3002</p>"},{"location":"zh/usage/Upgrade/#_3","title":"\u914d\u7f6e\u5347\u7ea7","text":"<p>\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u6267\u884c\u914d\u7f6e\u5347\u7ea7\uff1a</p> <ol> <li> <p>\u67e5\u770b\u53ef\u7528\u7684 values \u53c2\u6570\uff0c\u8bf7\u8bbf\u95ee values \u8bf4\u660e\u6587\u6863\u3002</p> </li> <li> <p>\u4f7f\u7528 <code>--set</code> flags \u66f4\u65b0\u914d\u7f6e\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5c06 egress agent \u65e5\u5fd7\u7b49\u7ea7\u66f4\u6539\u4e3a debug \u7ea7\u522b\u3002\u901a\u8fc7 <code>--reuse-values</code> \u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u5728\u5347\u7ea7\u65f6\u91cd\u7528\u4e0a\u4e00\u4e2a release \u7684\u503c\u5e76\u5408\u5e76\u6765\u81ea\u547d\u4ee4\u884c\u7684\u4efb\u4f55\u8986\u76d6\u3002</p> <pre><code>helm upgrade \\\negress \\\negressgateway/egressgateway \\\n--set agent.debug.logLevel=debug \\\n--reuse-values\n</code></pre> </li> </ol>"}]}